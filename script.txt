
-- -- local LPH_JIT_ULTRA = LPH_JIT_ULTRA or function(...) return ... end
-- -- LPH_JIT_ULTRA(function()
-- if server.Body ~= "BloxFruit" then
-- 	repeat wait() until false
-- end
if _G.RunScriptTime == nil then
    _G.RunScriptTime = os.time()
end
if not getgenv().SaveSettings then
    getgenv().SaveSettings = {
    	["Auto Farm Level"] = false,
    	["WeaponSelected"] = "Melee",
    	["AutoQuest"] = true,
    	["UI Language"] = 2,
    	["Points"] = 3,
    	["Melee"] = false,
    	["Defense"] = false,
    	["Sword"] = false,
    	["Gun"] = false,
    	["Devil Fruit"] = false,
    	["DistanceY"] = 10,
    	["DistanceZ"] = 10,
    	["Healthpercen"] = 35,
    	["lockmastery"] = 600,
    	["FarmMode"] = "Auto Update",
    	["CustomLevelFarm"] = 2400,
    	["settingautoweaponhop"] = true,
    	["selecteddungeontype"] = "Flame",
    	["IconShop"] = "Put URL here.",
    	['ShopName'] = 'Put Image Name here.',
    	["tragetcolor"] = {
    	    R = 0,
    	    G = 0,
    	    B = 0,
    	},
    	["PlayerColor"] = {
    	    R = 0,
    	    G = 0,
    	    B = 0,
    	},
    	["SelectedKillType"] = "Melee",
    	["SelectedAimbotType"] = "Custom",
    	["MinDistanceLock"] = 2500,
    	["Ignoreaimbot"] = {
    	    Allies = true,
    	    Friend = false,
    	    Team = false,
    	},
    	["AbilityList"] = {
        	Soru = true,
        	Geppo = true,
        	Dash = true,
    	},
    	["Locationfilecombo"] = "Enter combo file",
        ["SelectedNextGenTeleport"] = "Set Spawn",
        ["SelectedNextGenFastAttack"] = "Normal",
        ["healthslider"] = 50,
    }
end
function getemoji()
	if syn then
	    _G.moon_icon = "🌑"
	    _G.X_Icon = "❌"
        _G.Right_Icon = "✅"
		_G.Setting_icon = '⚙ ';
		_G.Blood_Icon = '🩸';
		_G.Jackolenturn_icon = '🎃';
		_G.Bone_icon = '🦴';
		_G.Cake_icon = '🍰';
		_G.DeadX_icon = '☠';
		_G.coffin_icon = '⚰';
		_G.man_icon = '👨';
		_G.Box_icon = '🗳';
		_G.swordfight_icon = '🤺';
		_G.Lighning_icon = '⚡';
		_G.Shark_icon = '🦈';
		_G.Trident = '🔱';
		_G.crown_icon = '👑';
		_G.dubblesword_icon = '⚔';
		_G.Guitar_icon = "🎸";
		_G.knife_icn = '🔪';
		_G.candy_icon = '🍭';
		_G.Earth_icon = '🌎';
		_G.Superman_icon = '🦸';
		_G.karate_icon = '🥋';
		_G.Dragon_icon = '🐉';
		_G.Hat_icon = '👒';
		_G.Hat2_icon = '🎓';
		_G.shirt_icon = '🎽';
		_G.band_icon = '🩹';
		_G.Gun_icon = '🔫';
		_G.bow_icon = '🏹';
		_G.flower_icon = '🌸';
		_G.fire_icon = '🔥';
	else
	    _G.Setting_icon = '';
		_G.Blood_Icon = '';
		_G.Jackolenturn_icon = '';
		_G.Bone_icon = '';
		_G.Cake_icon = '';
		_G.DeadX_icon = '';
		_G.coffin_icon = '';
		_G.man_icon = '';
		_G.Box_icon = '';
		_G.swordfight_icon = '';
		_G.Lighning_icon = '';
		_G.Shark_icon = '';
		_G.Trident = '';
		_G.crown_icon = '';
		_G.dubblesword_icon = '';
		_G.knife_icn = '';
		_G.candy_icon = '';
		_G.Earth_icon = '';
		_G.Superman_icon = '';
		_G.karate_icon = '';
		_G.Dragon_icon = '';
		_G.Hat_icon = '';
		_G.Hat2_icon = '';
		_G.shirt_icon = '';
		_G.band_icon = '';
		_G.Gun_icon = '';
		_G.bow_icon = '';
		_G.flower_icon = '';
		_G.Guitar_icon = "";
		_G.fire_icon = '';
		_G.X_Icon = "❌"
        _G.Right_Icon = "✅"
        _G.moon_icon = ""
	end
end
getemoji()
if not game:IsLoaded() then
	game.Loaded:Wait()
	task.wait(10)
	wait(2)
end
function Keyboard(key,sec)
    if sec == nil then
       sec = 0 
    end
	game:GetService("VirtualInputManager"):SendKeyEvent(true,key,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
	wait(sec)
	game:GetService("VirtualInputManager"):SendKeyEvent(false,key,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end
function selectteam(Team)
    for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container[Team].Frame.ViewportFrame.TextButton.Activated)) do
        v.Function()
    end
    -- local Plr = game:GetService("Players").LocalPlayer
    -- local stoploopselectteam = false
    -- spawn(function()
    --     while task.wait() do
    --         pcall(function()
    --             for i,v in pairs(Plr.PlayerGui.Notifications:GetChildren()) do
    --                 if string.find(v.Text,"still not ready") then
    --                     v:Destroy()
    --                     v.Text = ""
    --                     stoploopselectteam = true
    --                 end
    --             end
    --         end) 
    --         if stoploopselectteam then
    --             break 
    --         end
    --     end
    -- end)
    -- game:GetService("Workspace").Camera.CameraType = Enum.CameraType.Custom 
    -- game:GetService("Workspace").Camera.CameraSubject = Plr.Character.Head
    -- Plr.PlayerGui.Main.ChooseTeam.Visible = false
    -- local Signals = {'MouseButton1Down', 'MouseButton1Click', 'Activated'}
    -- local Button = Plr.PlayerGui.Main.ChooseTeam.Container[Team].Frame.ViewportFrame.TextButton
    -- for i,v in pairs(Signals) do
    --     firesignal(Button[v])
    -- end
    -- wait(1)
    -- Plr.Character.Humanoid.Health = 0
    -- Plr.PlayerGui.Main.Version.Visible = true
    -- Plr.PlayerGui.Main.Stats.Visible = true
    -- Plr.PlayerGui.Main.Fire.Visible = true
    -- Plr.PlayerGui.Main.Compass.Visible = true
    -- Plr.PlayerGui.Main.Blackscreen.Visible = true
    -- Plr.PlayerGui.Main.Allies.Visible = true
    -- Plr.PlayerGui.Main.Energy.Visible = true
    -- Plr.PlayerGui.Main.HP.Visible = true
    -- Plr.PlayerGui.Main.AlliesButton.Visible = true
    -- Plr.PlayerGui.Main.Code.Visible = true
    -- Plr.PlayerGui.Main.CrewButton.Visible = true
    -- Plr.PlayerGui.Main.HomeButton.Visible = true
    -- Plr.PlayerGui.Main.Mute.Visible = true
    -- Plr.PlayerGui.Main.Settings.Visible = true
    -- Plr.PlayerGui.Main.MenuButton.Visible = true
    -- Plr.PlayerGui.Main.Beli.Visible = true
    -- Plr.PlayerGui.Main.Fragments.Visible = true
    -- Plr.PlayerGui.Main.Level.Visible = true
    -- Plr.PlayerGui.Main.Shop.Visible = true
    -- Plr.PlayerGui.Main.InventoryContainer.Visible = true
    -- local args = {
    --     [1] = "SetTeam",
    --     [2] = Team
    -- }
    -- game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    wait(3)
end







local filename = "Deity Hub Next Generation/SaveSettings/BloxFruit/" .. tostring(game.Players.LocalPlayer.Name) ..".json"

function Load()
    if readfile and writefile and isfile and isfolder then
        if not isfolder("Deity Hub Next Generation") then
            makefolder("Deity Hub Next Generation")
        end
        if not isfolder("Deity Hub Next Generation/SaveSettings") then
            makefolder("Deity Hub Next Generation/SaveSettings")
        end
        if not isfolder("Deity Hub Next Generation/SaveSettings/BloxFruit") then
            makefolder("Deity Hub Next Generation/SaveSettings/BloxFruit")
        end
        if not isfile(filename) then
            writefile(filename, game:GetService("HttpService"):JSONEncode(SaveSettings))
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile(filename))
            for i,v in pairs(Decode) do
                SaveSettings[i] = v
            end
        end
    else
        warn("Failed Load")
        return false
    end
end
function Save()
    if readfile and writefile and isfile then
        if not isfile(filename) then
            Load()
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile(filename))
            local Array = {}
            for i,v in pairs(SaveSettings) do
                Array[i] = v
            end
            writefile(filename, game:GetService("HttpService"):JSONEncode(Array))
        end
    else
        warn("Failed Save")
        return false
    end
end

Load()
Save()

if game.CoreGui:FindFirstChild("DeityHub-BloxFruit") then
    game.CoreGui:FindFirstChild("DeityHub-BloxFruit"):Destroy()
end

local InputService = game:GetService('UserInputService');
local TextService = game:GetService('TextService');
local TweenService = game:GetService('TweenService');
local CoreGui = game:GetService('CoreGui');
local RunService = game:GetService('RunService')
local RenderStepped = RunService.RenderStepped;
local LocalPlayer = game:GetService('Players').LocalPlayer;
local Mouse = LocalPlayer:GetMouse();

local ProtectGui = protectgui or (syn and syn.protect_gui) or (function() end);

local ScreenGui = Instance.new('ScreenGui');
ProtectGui(ScreenGui);

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global;
ScreenGui.Parent = CoreGui;
ScreenGui.Name = "DeityHub-BloxFruit"

local Toggles = {};
local Options = {};

getgenv().Toggles = Toggles;
getgenv().Options = Options;

local Library = {
    Registry = {};
    RegistryMap = {};

    HudRegistry = {};

    FontColor = Color3.fromRGB(255, 255, 255);
    MainColor = Color3.fromRGB(28, 28, 28);
    BackgroundColor = Color3.fromRGB(20, 20, 20);
    AccentColor = Color3.fromRGB(14, 222, 255);
    OutlineColor = Color3.fromRGB(50, 50, 50);


    Black = Color3.new(0, 0, 0);

    OpenedFrames = {};

    Signals = {};
    ScreenGui = ScreenGui;
};

local RainbowStep = 0
local Hue = 0

table.insert(Library.Signals, RenderStepped:Connect(function(Delta)
    RainbowStep = RainbowStep + Delta

    if RainbowStep >= (1 / 60) then
        RainbowStep = 0

        Hue = Hue + (1 / 400);

        if Hue > 1 then
            Hue = 0;
        end;

        Library.CurrentRainbowHue = Hue;
        Library.CurrentRainbowColor = Color3.fromHSV(Hue, 0.8, 1);
    end
end))

function Library:AttemptSave()
    if Library.SaveManager then
        Library.SaveManager:Save();
    end;
end;

function Library:Create(Class, Properties)
    local _Instance = Class;

    if type(Class) == 'string' then
        _Instance = Instance.new(Class);
    end;

    for Property, Value in next, Properties do
        _Instance[Property] = Value;
    end;

    return _Instance;
end;

function Library:CreateLabel(Properties, IsHud)
    local _Instance = Library:Create('TextLabel', {
        BackgroundTransparency = 1;
        Font = Enum.Font.Code;
        TextColor3 = Library.FontColor;
        TextSize = 16;
        TextStrokeTransparency = 0;
    });

    Library:AddToRegistry(_Instance, {
        TextColor3 = 'FontColor';
    }, IsHud);

    return Library:Create(_Instance, Properties);
end;

function Library:MakeDraggable(Instance, Cutoff)
    Instance.Active = true;

   Instance.InputBegan:Connect(function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton1 then
            local ObjPos = Vector2.new(
                Mouse.X - Instance.AbsolutePosition.X,
                Mouse.Y - Instance.AbsolutePosition.Y
            );

            if ObjPos.Y > (Cutoff or 40) then
                return;
            end;

            while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                Instance.Position = UDim2.new(
                    0,
                    Mouse.X - ObjPos.X + (Instance.Size.X.Offset * Instance.AnchorPoint.X),
                    0,
                    Mouse.Y - ObjPos.Y + (Instance.Size.Y.Offset * Instance.AnchorPoint.Y)
                );

                RenderStepped:Wait();
            end;
        end;
    end)
end;

function Library:AddToolTip(InfoStr, HoverInstance)
    local X, Y = Library:GetTextBounds(InfoStr, Enum.Font.Code, 14);
    local Tooltip = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor,        
        BorderColor3 = Library.OutlineColor,

        Size = UDim2.fromOffset(X + 5, Y + 4),
        ZIndex = 11;
        Parent = Library.ScreenGui,

        Visible = false,
    })

    local Label = Library:CreateLabel({
        Position = UDim2.fromOffset(3, 1),
        Size = UDim2.fromOffset(X, Y);
        TextSize = 14;
        Text = InfoStr,
        TextColor3 = Library.FontColor,
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = 12;

        Parent = Tooltip;
    });

    Library:AddToRegistry(Tooltip, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    });

    Library:AddToRegistry(Label, {
        TextColor3 = 'FontColor',
    });

    local IsHovering = false
    HoverInstance.MouseEnter:Connect(function()
        IsHovering = true
        
        Tooltip.Position = UDim2.fromOffset(Mouse.X + 15, Mouse.Y + 12)
        Tooltip.Visible = true

        while IsHovering do
            RunService.Heartbeat:Wait()
            Tooltip.Position = UDim2.fromOffset(Mouse.X + 15, Mouse.Y + 12)
        end
    end)

    HoverInstance.MouseLeave:Connect(function()
        IsHovering = false
        Tooltip.Visible = false
    end)
end

function Library:OnHighlight(HighlightInstance, Instance, Properties, PropertiesDefault)
    HighlightInstance.MouseEnter:Connect(function()
        local Reg = Library.RegistryMap[Instance];

        for Property, ColorIdx in next, Properties do
            Instance[Property] = Library[ColorIdx] or ColorIdx;

            if Reg and Reg.Properties[Property] then
                Reg.Properties[Property] = ColorIdx;
            end;
        end;
    end)

    HighlightInstance.MouseLeave:Connect(function()
        local Reg = Library.RegistryMap[Instance];

        for Property, ColorIdx in next, PropertiesDefault do
            Instance[Property] = Library[ColorIdx] or ColorIdx;

            if Reg and Reg.Properties[Property] then
                Reg.Properties[Property] = ColorIdx;
            end;
        end;
    end)
end;

function Library:MouseIsOverOpenedFrame()
    for Frame, _ in next, Library.OpenedFrames do
        local AbsPos, AbsSize = Frame.AbsolutePosition, Frame.AbsoluteSize;

        if Mouse.X >= AbsPos.X and Mouse.X <= AbsPos.X + AbsSize.X
            and Mouse.Y >= AbsPos.Y and Mouse.Y <= AbsPos.Y + AbsSize.Y then

            return true;
        end;
    end;
end;

function Library:MapValue(Value, MinA, MaxA, MinB, MaxB)
    return (1 - ((Value - MinA) / (MaxA - MinA))) * MinB + ((Value - MinA) / (MaxA - MinA)) * MaxB;
end;

function Library:GetTextBounds(Text, Font, Size, Resolution)
    local Bounds = TextService:GetTextSize(Text, Size, Font, Resolution or Vector2.new(1920, 1080))
    return Bounds.X, Bounds.Y
end;

function Library:GetDarkerColor(Color)
    local H, S, V = Color3.toHSV(Color);
    return Color3.fromHSV(H, S, V / 1.5);
end; 
Library.AccentColorDark = Library:GetDarkerColor(Library.AccentColor);

function Library:AddToRegistry(Instance, Properties, IsHud)
    local Idx = #Library.Registry + 1;
    local Data = {
        Instance = Instance;
        Properties = Properties;
        Idx = Idx;
    };

    table.insert(Library.Registry, Data);
    Library.RegistryMap[Instance] = Data;

    if IsHud then
        table.insert(Library.HudRegistry, Data);
    end;
end;

function Library:RemoveFromRegistry(Instance)
    local Data = Library.RegistryMap[Instance];

    if Data then
        for Idx = #Library.Registry, 1, -1 do
            if Library.Registry[Idx] == Data then
                table.remove(Library.Registry, Idx);
            end;
        end;

        for Idx = #Library.HudRegistry, 1, -1 do
            if Library.HudRegistry[Idx] == Data then
                table.remove(Library.HudRegistry, Idx);
            end;
        end;

        Library.RegistryMap[Instance] = nil;
    end;
end;

function Library:UpdateColorsUsingRegistry()
    -- TODO: Could have an 'active' list of objects
    -- where the active list only contains Visible objects.

    -- IMPL: Could setup .Changed events on the AddToRegistry function
    -- that listens for the 'Visible' propert being changed.
    -- Visible: true => Add to active list, and call UpdateColors function
    -- Visible: false => Remove from active list.

    -- The above would be especially efficient for a rainbow menu color or live color-changing.

    for Idx, Object in next, Library.Registry do
        for Property, ColorIdx in next, Object.Properties do
            if type(ColorIdx) == 'string' then
                Object.Instance[Property] = Library[ColorIdx];
            elseif type(ColorIdx) == 'function' then
                Object.Instance[Property] = ColorIdx()
            end
        end;
    end;
end;

function Library:GiveSignal(Signal)
    -- Only used for signals not attached to library instances, as those should be cleaned up on object destruction by Roblox
    table.insert(Library.Signals, Signal)
end

function Library:Unload()
    -- Unload all of the signals
    for Idx = #Library.Signals, 1, -1 do
        local Connection = table.remove(Library.Signals, Idx)
        Connection:Disconnect()
    end

     -- Call our unload callback, maybe to undo some hooks etc
    if Library.OnUnload then
        Library.OnUnload()
    end

    ScreenGui:Destroy()
end

function Library:OnUnload(Callback)
    Library.OnUnload = Callback
end

Library:GiveSignal(ScreenGui.DescendantRemoving:Connect(function(Instance)
    if Library.RegistryMap[Instance] then
        Library:RemoveFromRegistry(Instance);
    end;
end))

local BaseAddons = {};

do
    local Funcs = {};

    function Funcs:AddColorPicker(Idx, Info)
        local ToggleLabel = self.TextLabel;
        local Container = self.Container;

        local ColorPicker = {
            Value = Info.Default;
            Type = 'ColorPicker';
            Title = type(Info.Title) == 'string' and Info.Title or 'Color picker',
        };

        function ColorPicker:SetHSVFromRGB(Color)
            local H, S, V = Color3.toHSV(Color);

            ColorPicker.Hue = H;
            ColorPicker.Sat = S;
            ColorPicker.Vib = V;
        end;

        ColorPicker:SetHSVFromRGB(ColorPicker.Value);

        local DisplayFrame = Library:Create('Frame', {
            BackgroundColor3 = ColorPicker.Value;
            BorderColor3 = Library:GetDarkerColor(ColorPicker.Value);
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(0, 28, 0, 14);
            ZIndex = 6;
            Parent = ToggleLabel;
        });

        local RelativeOffset = 0;

        for _, Element in next, Container:GetChildren() do
            if not Element:IsA('UIListLayout') then
                RelativeOffset = RelativeOffset + Element.Size.Y.Offset;
            end;
        end;

        local PickerFrameOuter = Library:Create('Frame', {
            Name = 'Color';
            BackgroundColor3 = Color3.new(1, 1, 1);
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 4, 0, 20 + RelativeOffset + 1);
            Size = UDim2.new(1, -13, 0, 253);
            Visible = false;
            ZIndex = 15;
            Parent = Container.Parent;
        });

        local PickerFrameInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 16;
            Parent = PickerFrameOuter;
        });

        local Highlight = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 0, 2);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local SatVibMapOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 4, 0, 25);
            Size = UDim2.new(0, 200, 0, 200);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local SatVibMapInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Parent = SatVibMapOuter;
        });

        local SatVibMap = Library:Create('ImageLabel', {
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Image = 'rbxassetid://4155801252';
            Parent = SatVibMapInner;
        });

        local HueSelectorOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 208, 0, 25);
            Size = UDim2.new(0, 15, 0, 200);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local HueSelectorInner = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(1, 1, 1);
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Parent = HueSelectorOuter;
        });

        local HueTextSize = Library:GetTextBounds('Hex color', Enum.Font.Code, 16) + 3
        local RgbTextSize = Library:GetTextBounds('255, 255, 255', Enum.Font.Code, 16) + 3

        local HueBoxOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.fromOffset(4, 228),
            Size = UDim2.new(0.5, -6, 0, 20),
            ZIndex = 18,
            Parent = PickerFrameInner;
        });

        local HueBoxInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18,
            Parent = HueBoxOuter;
        });

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = HueBoxInner;
        });

        local HueBox = Library:Create('TextBox', {
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);
            Font = Enum.Font.Code;
            PlaceholderColor3 = Color3.fromRGB(190, 190, 190);
            PlaceholderText = 'Hex color',
            Text = '#FFFFFF',
            TextColor3 = Library.FontColor;
            TextSize = 14;
            TextStrokeTransparency = 0;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 20,
            Parent = HueBoxInner;
        });

        local RgbBoxBase = Library:Create(HueBoxOuter:Clone(), {
            Position = UDim2.new(0.5, 2, 0, 228),
            Size = UDim2.new(0.5, -6, 0, 20),
            Parent = PickerFrameInner
        })  

        local RgbBox = Library:Create(RgbBoxBase.Frame:FindFirstChild('TextBox'), {
            Text = '255, 255, 255',
            PlaceholderText = 'RGB color',
            TextColor3 = Library.FontColor,
        })

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 0, 14);
            Position = UDim2.fromOffset(5, 5);
            TextXAlignment = Enum.TextXAlignment.Left;
            TextSize = 14;
            Text = ColorPicker.Title,--Info.Default;
            TextWrapped = false;
            ZIndex = 16;
            Parent = PickerFrameInner;
        });


        Library:AddToRegistry(PickerFrameInner, { BackgroundColor3 = 'BackgroundColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(Highlight, { BackgroundColor3 = 'AccentColor'; });
        Library:AddToRegistry(SatVibMapInner, { BackgroundColor3 = 'BackgroundColor'; BorderColor3 = 'OutlineColor'; });

        Library:AddToRegistry(HueBoxInner, { BackgroundColor3 = 'MainColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(RgbBoxBase.Frame, { BackgroundColor3 = 'MainColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(RgbBox, { TextColor3 = 'FontColor', });
        Library:AddToRegistry(HueBox, { TextColor3 = 'FontColor', });

        local SequenceTable = {};

        for Hue = 0, 1, 0.1 do
            table.insert(SequenceTable, ColorSequenceKeypoint.new(Hue, Color3.fromHSV(Hue, 1, 1)));
        end;

        local HueSelectorGradient = Library:Create('UIGradient', {
            Color = ColorSequence.new(SequenceTable);
            Rotation = 90;
            Parent = HueSelectorInner;
        });
        
        HueBox.FocusLost:Connect(function(enter)
            if enter then
                local success, result = pcall(Color3.fromHex, HueBox.Text)
                if success and typeof(result) == 'Color3' then
                    ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib = Color3.toHSV(result)
                end
            end

            ColorPicker:Display()
        end)

        RgbBox.FocusLost:Connect(function(enter)
            if enter then
                local r, g, b = RgbBox.Text:match('(%d+),%s*(%d+),%s*(%d+)')
                if r and g and b then
                    ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib = Color3.toHSV(Color3.fromRGB(r, g, b))
                end
            end

            ColorPicker:Display()
        end)

        function ColorPicker:Display()
            ColorPicker.Value = Color3.fromHSV(ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib);
            SatVibMap.BackgroundColor3 = Color3.fromHSV(ColorPicker.Hue, 1, 1);

            Library:Create(DisplayFrame, {
                BackgroundColor3 = ColorPicker.Value;
                BorderColor3 = Library:GetDarkerColor(ColorPicker.Value);
            });

            HueBox.Text = '#' .. ColorPicker.Value:ToHex()
            RgbBox.Text = table.concat({ math.floor(ColorPicker.Value.R * 255), math.floor(ColorPicker.Value.G * 255), math.floor(ColorPicker.Value.B * 255) }, ', ')

            if ColorPicker.Changed then
                ColorPicker.Changed();
            end;
        end;

        function ColorPicker:OnChanged(Func)
            ColorPicker.Changed = Func;
            Func();
        end;

        function ColorPicker:Show()
            for Frame, Val in next, Library.OpenedFrames do
                if Frame.Name == 'Color' then
                    Frame.Visible = false;
                    Library.OpenedFrames[Frame] = nil;
                end;
            end;

            PickerFrameOuter.Visible = true;
            Library.OpenedFrames[PickerFrameOuter] = true;
        end;

        function ColorPicker:Hide()
            PickerFrameOuter.Visible = false;
            Library.OpenedFrames[PickerFrameOuter] = nil;
        end;

        function ColorPicker:SetValue(HSV)
            local Color = Color3.fromHSV(HSV[1], HSV[2], HSV[3]);

            ColorPicker:SetHSVFromRGB(Color);
            ColorPicker:Display();
        end;

        function ColorPicker:SetValueRGB(Color)
            ColorPicker:SetHSVFromRGB(Color);
            ColorPicker:Display();
        end;

        SatVibMap.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local MinX = SatVibMap.AbsolutePosition.X;
                    local MaxX = MinX + SatVibMap.AbsoluteSize.X;
                    local MouseX = math.clamp(Mouse.X, MinX, MaxX);

                    local MinY = SatVibMap.AbsolutePosition.Y;
                    local MaxY = MinY + SatVibMap.AbsoluteSize.Y;
                    local MouseY = math.clamp(Mouse.Y, MinY, MaxY);

                    ColorPicker.Sat = (MouseX - MinX) / (MaxX - MinX);
                    ColorPicker.Vib = 1 - ((MouseY - MinY) / (MaxY - MinY));
                    ColorPicker:Display();

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        HueSelectorInner.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local MinY = HueSelectorInner.AbsolutePosition.Y;
                    local MaxY = MinY + HueSelectorInner.AbsoluteSize.Y;
                    local MouseY = math.clamp(Mouse.Y, MinY, MaxY);

                    ColorPicker.Hue = ((MouseY - MinY) / (MaxY - MinY));
                    ColorPicker:Display();

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        DisplayFrame.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                if PickerFrameOuter.Visible then
                    ColorPicker:Hide();
                else
                    ColorPicker:Show();
                end;
            end;
        end);

        Library:GiveSignal(InputService.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = PickerFrameOuter.AbsolutePosition, PickerFrameOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    ColorPicker:Hide();
                end;
            end;
        end))

        ColorPicker:Display();

        Options[Idx] = ColorPicker;

        return self;
    end;

    function Funcs:AddKeyPicker(Idx, Info)
        local ParentObj = self;
        local ToggleLabel = self.TextLabel;
        local Container = self.Container;

        local KeyPicker = {
            Value = Info.Default;
            Toggled = false;
            Mode = Info.Mode or 'Toggle'; -- Always, Toggle, Hold
            Type = 'KeyPicker';

            SyncToggleState = Info.SyncToggleState or false;
        };

        if KeyPicker.SyncToggleState then
            Info.Modes = { 'Toggle' }
            Info.Mode = 'Toggle'
        end

        local RelativeOffset = 0;

        for _, Element in next, Container:GetChildren() do
            if not Element:IsA('UIListLayout') then
                RelativeOffset = RelativeOffset + Element.Size.Y.Offset;
            end;
        end;

        local PickOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(0, 28, 0, 15);
            ZIndex = 6;
            Parent = ToggleLabel;
        });

        local PickInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 7;
            Parent = PickOuter;
        });

        Library:AddToRegistry(PickInner, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 1, 0);
            TextSize = 13;
            Text = Info.Default;
            TextWrapped = true;
            ZIndex = 8;
            Parent = PickInner;
        });

        local ModeSelectOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(1, 0, 0, RelativeOffset + 1);
            Size = UDim2.new(0, 60, 0, 45 + 2);
            Visible = false;
            ZIndex = 14;
            Parent = Container.Parent;
        });

        local ModeSelectInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 15;
            Parent = ModeSelectOuter;
        });

        Library:AddToRegistry(ModeSelectInner, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:Create('UIListLayout', {
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = ModeSelectInner;
        });

        local ContainerLabel = Library:CreateLabel({
            TextXAlignment = Enum.TextXAlignment.Left;
            Size = UDim2.new(1, 0, 0, 18);
            TextSize = 13;
            Visible = false;
            ZIndex = 110;
            Parent = Library.KeybindContainer;
        },  true);

        local Modes = Info.Modes or { 'Always', 'Toggle', 'Hold' };
        local ModeButtons = {};

        for Idx, Mode in next, Modes do
            local ModeButton = {};

            local Label = Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 15);
                TextSize = 13;
                Text = Mode;
                ZIndex = 16;
                Parent = ModeSelectInner;
            });

            function ModeButton:Select()
                for _, Button in next, ModeButtons do
                    Button:Deselect();
                end;

                KeyPicker.Mode = Mode;

                Label.TextColor3 = Library.AccentColor;
                Library.RegistryMap[Label].Properties.TextColor3 = 'AccentColor';

                ModeSelectOuter.Visible = false;
            end;

            function ModeButton:Deselect()
                KeyPicker.Mode = nil;

                Label.TextColor3 = Library.FontColor;
                Library.RegistryMap[Label].Properties.TextColor3 = 'FontColor';
            end;

            Label.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    ModeButton:Select();
                    Library:AttemptSave();
                end;
            end);

            if Mode == KeyPicker.Mode then
                ModeButton:Select();
            end;

            ModeButtons[Mode] = ModeButton;
        end;

        function KeyPicker:Update()
            if Info.NoUI then
                return;
            end;

            local State = KeyPicker:GetState();

            ContainerLabel.Text = string.format('[%s] %s (%s)', KeyPicker.Value, Info.Text, KeyPicker.Mode);

            ContainerLabel.Visible = true;
            ContainerLabel.TextColor3 = State and Library.AccentColor or Library.FontColor;

            Library.RegistryMap[ContainerLabel].Properties.TextColor3 = State and 'AccentColor' or 'FontColor';

            local YSize = 0
            local XSize = 0
            
            for _, Label in next, Library.KeybindContainer:GetChildren() do
                if Label:IsA('TextLabel') and Label.Visible then
                    YSize = YSize + 18;
                    if (Label.TextBounds.X > XSize) then
                        XSize = Label.TextBounds.X 
                    end 
                end;
            end;

            Library.KeybindFrame.Size = UDim2.new(0, math.max(XSize + 10, 210), 0, YSize + 23)
        end;

        function KeyPicker:GetState()
            if KeyPicker.Mode == 'Always' then
                return true;
            elseif KeyPicker.Mode == 'Hold' then
                local Key = KeyPicker.Value;

                if Key == 'MB1' or Key == 'MB2' then
                    return Key == 'MB1' and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
                        or Key == 'MB2' and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2);
                else
                    return InputService:IsKeyDown(Enum.KeyCode[KeyPicker.Value]);
                end;
            else
                return KeyPicker.Toggled;
            end;
        end;

        function KeyPicker:SetValue(Data)
            local Key, Mode = Data[1], Data[2];
            DisplayLabel.Text = Key;
            KeyPicker.Value = Key;
            ModeButtons[Mode]:Select();
            KeyPicker:Update();
        end;

        function KeyPicker:OnClick(Callback)
            KeyPicker.Clicked = Callback
        end


        if ParentObj.Addons then
            table.insert(ParentObj.Addons, KeyPicker)
        end

        function KeyPicker:DoClick()
            if ParentObj.Type == 'Toggle' and KeyPicker.SyncToggleState then
                ParentObj:SetValue(not ParentObj.Value)
            end

            if KeyPicker.Clicked then
                KeyPicker.Clicked()
            end
        end

        local Picking = false;

        PickOuter.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                Picking = true;

                DisplayLabel.Text = '';

                local Break;
                local Text = '';

                task.spawn(function()
                    while (not Break) do
                        if Text == '...' then
                            Text = '';
                        end;

                        Text = Text .. '.';
                        DisplayLabel.Text = Text;

                        wait(0.4);
                    end;
                end);

                wait(0.2);

                local Event;
                Event = InputService.InputBegan:Connect(function(Input)
                    local Key;

                    if Input.UserInputType == Enum.UserInputType.Keyboard then
                        Key = Input.KeyCode.Name;
                    elseif Input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Key = 'MB1';
                    elseif Input.UserInputType == Enum.UserInputType.MouseButton2 then
                        Key = 'MB2';
                    end;

                    Break = true;
                    Picking = false;

                    DisplayLabel.Text = Key;
                    KeyPicker.Value = Key;

                    Library:AttemptSave();

                    Event:Disconnect();
                end);
            elseif Input.UserInputType == Enum.UserInputType.MouseButton2 and not Library:MouseIsOverOpenedFrame() then
                ModeSelectOuter.Visible = true;
            end;
        end);

        Library:GiveSignal(InputService.InputBegan:Connect(function(Input)
            if (not Picking) then
                if KeyPicker.Mode == 'Toggle' then
                    local Key = KeyPicker.Value;

                    if Key == 'MB1' or Key == 'MB2' then
                        if Key == 'MB1' and Input.UserInputType == Enum.UserInputType.MouseButton1
                        or Key == 'MB2' and Input.UserInputType == Enum.UserInputType.MouseButton2 then
                            KeyPicker.Toggled = not KeyPicker.Toggled
                            KeyPicker:DoClick()
                        end;
                    elseif Input.UserInputType == Enum.UserInputType.Keyboard then
                        if Input.KeyCode.Name == Key then
                            KeyPicker.Toggled = not KeyPicker.Toggled;
                            KeyPicker:DoClick()
                        end;
                    end;
                end;

                KeyPicker:Update();
            end;

            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = ModeSelectOuter.AbsolutePosition, ModeSelectOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    ModeSelectOuter.Visible = false;
                end;
            end;
        end))

        Library:GiveSignal(InputService.InputEnded:Connect(function(Input)
            if (not Picking) then
                KeyPicker:Update();
            end;
        end))

        KeyPicker:Update();

        Options[Idx] = KeyPicker;

        return self;
    end;

    BaseAddons.__index = Funcs;
    BaseAddons.__namecall = function(Table, Key, ...)
        return Funcs[Key](...);
    end;
end;

local BaseGroupbox = {};

do
    local Funcs = {};

    function Funcs:AddBlank(Size)
        local Groupbox = self;
        local Container = Groupbox.Container;

        Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(1, 0, 0, Size);
            ZIndex = 1;
            Parent = Container;
        });
    end;

    function Funcs:AddLabel(Text, DoesWrap,Pos)
        local Label = {};

        local Groupbox = self;
        local Container = Groupbox.Container;
        local TextLabel = Library:CreateLabel({
            Size = UDim2.new(1, -4, 0, 15);
            TextSize = 14;
            Text = Text;
            TextWrapped = DoesWrap or false,
            RichText = true,
            ZIndex = 5;
            Parent = Container;
        });
        if Pos == "Center" then
            TextLabel.TextXAlignment = Enum.TextXAlignment.Center
        elseif Pos == "Right" then
            TextLabel.TextXAlignment = Enum.TextXAlignment.Right
        else
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        end

        if DoesWrap then
            local Y = select(2, Library:GetTextBounds(Text, Enum.Font.Code, 14, Vector2.new(TextLabel.AbsoluteSize.X, math.huge)))
            TextLabel.Size = UDim2.new(1, -4, 0, Y)
        else
            Library:Create('UIListLayout', {
                Padding = UDim.new(0, 4);
                FillDirection = Enum.FillDirection.Horizontal;
                HorizontalAlignment = Enum.HorizontalAlignment.Right;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = TextLabel;
            });
        end

        Label.TextLabel = TextLabel;
        Label.Container = Container;

        function Label:SetText(Text)
            TextLabel.Text = Text

            if DoesWrap then
                local Y = select(2, Library:GetTextBounds(Text, Enum.Font.Code, 14, Vector2.new(TextLabel.AbsoluteSize.X, math.huge)))
                TextLabel.Size = UDim2.new(1, -4, 0, Y)
            end

            Groupbox:Resize();
        end

        if (not DoesWrap) then
            setmetatable(Label, BaseAddons);
        end

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        return Label;
    end;

    function Funcs:AddButton(Text, Func)
        local Button = {};

        local Groupbox = self;
        local Container = Groupbox.Container;

        local ButtonOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 20);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(ButtonOuter, {
            BorderColor3 = 'Black';
        });

        local ButtonInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = ButtonOuter;
        });

        Library:AddToRegistry(ButtonInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = ButtonInner;
        });

        local ButtonLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 1, 0);
            TextSize = 14;
            Text = Text;
            ZIndex = 6;
            Parent = ButtonInner;
        });

        Library:OnHighlight(ButtonOuter, ButtonOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        ButtonOuter.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                Func();
            end;
        end);

        function Button:AddTooltip(tip)
            if type(tip) == 'string' then
                Library:AddToolTip(tip, ButtonOuter)
            end
            return Button
        end

        function Button:AddButton(Text, Func)
            local SubButton = {}

            ButtonOuter.Size = UDim2.new(0.5, -2, 0, 20)
            
            local Outer = ButtonOuter:Clone()
            local Inner = Outer.Frame;
            local Label = Inner:FindFirstChildWhichIsA('TextLabel')

            Outer.Position = UDim2.new(1, 2, 0, 0)
            Outer.Size = UDim2.fromOffset(ButtonOuter.AbsoluteSize.X - 2, ButtonOuter.AbsoluteSize.Y)
            Outer.Parent = ButtonOuter

            Label.Text = Text;

            Library:AddToRegistry(Inner, {
                BackgroundColor3 = 'MainColor';
                BorderColor3 = 'OutlineColor';
            });
    
            Library:OnHighlight(Outer, Outer,
                { BorderColor3 = 'AccentColor' },
                { BorderColor3 = 'Black' }
            )

            Library:Create('UIGradient', {
                Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
                });

                Rotation = 90;
                Parent = Inner;
            });

            Outer.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                    Func();
                end;
            end);

            function SubButton:AddTooltip(tip)
                if type(tip) == 'string' then
                    Library:AddToolTip(tip, Outer)
                end
                return SubButton
            end

            return SubButton
        end 

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        return Button;
    end;

    function Funcs:AddDivider()
        local Groupbox = self;
        local Container = self.Container

        local Divider = {
            Type = 'Divider',
        }

        Groupbox:AddBlank(2);
        local DividerOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 5);
            ZIndex = 5;
            Parent = Container;
        });

        local DividerInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = DividerOuter;
        });

        Library:AddToRegistry(DividerOuter, {
            BorderColor3 = 'Black';
        });

        Library:AddToRegistry(DividerInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Groupbox:AddBlank(9);
        Groupbox:Resize();
    end

    function Funcs:AddInput(Idx, Info)
        local Textbox = {
            Value = Info.Default or '';
            Numeric = Info.Numeric or false;
            Finished = Info.Finished or false;
            Type = 'Input';
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local InputLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 0, 15);
            TextSize = 14;
            Text = Info.Text;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 5;
            Parent = Container;
        });

        Groupbox:AddBlank(1);

        local TextBoxOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 20);
            ZIndex = 5;
            Parent = Container;
        });

        local TextBoxInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = TextBoxOuter;
        });

        Library:AddToRegistry(TextBoxInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:OnHighlight(TextBoxOuter, TextBoxOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then 
            Library:AddToolTip(Info.Tooltip, TextBoxOuter)
        end

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = TextBoxInner;
        });

        local Container = Library:Create('Frame', {
            BackgroundTransparency = 1;
            ClipsDescendants = true;

            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);

            ZIndex = 7;
            Parent = TextBoxInner;
        })

        local Box = Library:Create('TextBox', {
            BackgroundTransparency = 1;

            Position = UDim2.fromOffset(0, 0),
            Size = UDim2.fromScale(5, 1),
            
            Font = Enum.Font.Code;
            PlaceholderColor3 = Color3.fromRGB(190, 190, 190);
            PlaceholderText = Info.Placeholder or '';

            Text = Info.Default or '';
            TextColor3 = Library.FontColor;
            TextSize = 14;
            TextStrokeTransparency = 0;
            TextXAlignment = Enum.TextXAlignment.Left;

            ZIndex = 7;
            Parent = Container;
        });
        
        function Textbox:SetValue(Text)
            if Info.MaxLength and #Text > Info.MaxLength then
                Text = Text:sub(1, Info.MaxLength);
            end;

            if Textbox.Numeric then
                if (not tonumber(Text)) and Text:len() > 0 then
                    Text = Textbox.Value 
                end
            end

            Textbox.Value = Text;
            Box.Text = Text;
                
            if Textbox.Changed then
                Textbox.Changed();
            end;
        end;

        if Textbox.Finished then
            Box.FocusLost:Connect(function(enter)
                if not enter then return end
                
                Textbox:SetValue(Box.Text);
                Library:AttemptSave();
            end)
        else 
            Box:GetPropertyChangedSignal('Text'):Connect(function()
                Textbox:SetValue(Box.Text);
                Library:AttemptSave();
            end);
        end

        -- https://devforum.roblox.com/t/how-to-make-textboxes-follow-current-cursor-position/1368429/6
        -- thank you nicemike40 :)

        local function Update()
            local PADDING = 5
            local reveal = Container.AbsoluteSize.X

            if not Box:IsFocused() or Box.TextBounds.X <= reveal - 2 * PADDING then
                -- we aren't focused, or we fit so be normal
                Box.Position = UDim2.new(0, PADDING, 0, 0)
            else
                -- we are focused and don't fit, so adjust position
                local cursor = Box.CursorPosition
                if cursor ~= -1 then
                    -- calculate pixel width of text from start to cursor
                    local subtext = string.sub(Box.Text, 1, cursor-1)
                    local width = TextService:GetTextSize(subtext, Box.TextSize, Box.Font, Vector2.new(math.huge, math.huge)).X
                    
                    -- check if we're inside the box with the cursor
                    local currentCursorPos = Box.Position.X.Offset + width

                    -- adjust if necessary
                    if currentCursorPos < PADDING then
                        Box.Position = UDim2.fromOffset(PADDING-width, 0)
                    elseif currentCursorPos > reveal - PADDING - 1 then
                        Box.Position = UDim2.fromOffset(reveal-width-PADDING-1, 0)
                    end
                end
            end
        end 

        task.spawn(Update)

        Box:GetPropertyChangedSignal('Text'):Connect(Update)
        Box:GetPropertyChangedSignal('CursorPosition'):Connect(Update)
        Box.FocusLost:Connect(Update)
        Box.Focused:Connect(Update)

        Library:AddToRegistry(Box, {
            TextColor3 = 'FontColor';
        });

        function Textbox:OnChanged(Func)
            Textbox.Changed = Func;
            Func();
        end;

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        Options[Idx] = Textbox;

        return Textbox;
    end;

    function Funcs:AddToggle(Idx, Info)
        local Toggle = {
            Value = Info.Default or false;
            Type = 'Toggle';

            Addons = {},
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local ToggleOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(0, 13, 0, 13);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(ToggleOuter, {
            BorderColor3 = 'Black';
        });

        local ToggleInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = ToggleOuter;
        });

        Library:AddToRegistry(ToggleInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local ToggleLabel = Library:CreateLabel({
            Size = UDim2.new(0, 216, 1, 0);
            Position = UDim2.new(1, 6, 0, 0);
            TextSize = 14;
            Text = Info.Text;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 6;
            Parent = ToggleInner;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 4);
            FillDirection = Enum.FillDirection.Horizontal;
            HorizontalAlignment = Enum.HorizontalAlignment.Right;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = ToggleLabel;
        });

        local ToggleRegion = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(0, 170, 1, 0);
            ZIndex = 8;
            Parent = ToggleOuter;
        });

        Library:OnHighlight(ToggleRegion, ToggleOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        function Toggle:UpdateColors()
            Toggle:Display();
        end;

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, ToggleRegion)
        end

        function Toggle:Display()
            ToggleInner.BackgroundColor3 = Toggle.Value and Library.AccentColor or Library.MainColor;
            ToggleInner.BorderColor3 = Toggle.Value and Library.AccentColorDark or Library.OutlineColor;

            Library.RegistryMap[ToggleInner].Properties.BackgroundColor3 = Toggle.Value and 'AccentColor' or 'MainColor';
            Library.RegistryMap[ToggleInner].Properties.BorderColor3 = Toggle.Value and 'AccentColorDark' or 'OutlineColor';
        end;

        function Toggle:OnChanged(Func)
            Toggle.Changed = Func;
            Func();
        end;

        function Toggle:SetValue(Bool)
            Bool = (not not Bool);

            Toggle.Value = Bool;
            Toggle:Display();

            for _, Addon in next, Toggle.Addons do
                if Addon.Type == 'KeyPicker' and Addon.SyncToggleState then
                    Addon.Toggled = Bool
                    Addon:Update()
                end
            end

            if Toggle.Changed then
                Toggle.Changed();
            end;
        end;

        ToggleRegion.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                Toggle:SetValue(not Toggle.Value) -- Why was it not like this from the start?
                Library:AttemptSave();
            end;
        end);

        Toggle:Display();
        Groupbox:AddBlank(Info.BlankSize or 5 + 2);
        Groupbox:Resize();

        Toggle.TextLabel = ToggleLabel;
        Toggle.Container = Container;
        setmetatable(Toggle, BaseAddons);

        Toggles[Idx] = Toggle;

        return Toggle;
    end;

    function Funcs:AddSlider(Idx, Info)
        assert(Info.Default and Info.Text and Info.Min and Info.Max and Info.Rounding, 'Bad Slider Data');

        local Slider = {
            Value = Info.Default;
            Min = Info.Min;
            Max = Info.Max;
            Rounding = Info.Rounding;
            MaxSize = 232;
            Type = 'Slider';
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        if not Info.Compact then
            Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 10);
                TextSize = 14;
                Text = Info.Text;
                TextXAlignment = Enum.TextXAlignment.Left;
                TextYAlignment = Enum.TextYAlignment.Bottom;
                ZIndex = 5;
                Parent = Container;
            });

            Groupbox:AddBlank(3);
        end

        local SliderOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 13);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(SliderOuter, {
            BorderColor3 = 'Black';
        });

        local SliderInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = SliderOuter;
        });

        Library:AddToRegistry(SliderInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local Fill = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderColor3 = Library.AccentColorDark;
            Size = UDim2.new(0, 0, 1, 0);
            ZIndex = 7;
            Parent = SliderInner;
        });

        Library:AddToRegistry(Fill, {
            BackgroundColor3 = 'AccentColor';
            BorderColor3 = 'AccentColorDark';
        });

        local HideBorderRight = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderSizePixel = 0;
            Position = UDim2.new(1, 0, 0, 0);
            Size = UDim2.new(0, 1, 1, 0);
            ZIndex = 8;
            Parent = Fill;
        });

        Library:AddToRegistry(HideBorderRight, {
            BackgroundColor3 = 'AccentColor';
        });

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 1, 0);
            TextSize = 14;
            Text = 'Infinite';
            ZIndex = 9;
            Parent = SliderInner;
        });

        Library:OnHighlight(SliderOuter, SliderOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, SliderOuter)
        end

        function Slider:UpdateColors()
            Fill.BackgroundColor3 = Library.AccentColor;
            Fill.BorderColor3 = Library.AccentColorDark;
        end;

        function Slider:Display()
            local Suffix = Info.Suffix or '';
            DisplayLabel.Text = string.format('%s/%s', Slider.Value .. Suffix, Slider.Max .. Suffix);

            local X = math.ceil(Library:MapValue(Slider.Value, Slider.Min, Slider.Max, 0, Slider.MaxSize));
            Fill.Size = UDim2.new(0, X, 1, 0);

            HideBorderRight.Visible = not (X == Slider.MaxSize or X == 0);
        end;

        function Slider:OnChanged(Func)
            Slider.Changed = Func;
            Func();
        end;

        local function Round(Value)
            if Slider.Rounding == 0 then
                return math.floor(Value);
            end;

            local Str = Value .. '';
            local Dot = Str:find('%.');

            return Dot and tonumber(Str:sub(1, Dot + Slider.Rounding)) or Value;
        end;

        function Slider:GetValueFromXOffset(X)
            return Round(Library:MapValue(X, 0, Slider.MaxSize, Slider.Min, Slider.Max));
        end;

        function Slider:SetValue(Str)
            local Num = tonumber(Str);

            if (not Num) then
                return;
            end;

            Num = math.clamp(Num, Slider.Min, Slider.Max);

            Slider.Value = Num;
            Slider:Display();

            if Slider.Changed then
                Slider.Changed();
            end;
        end;

        SliderInner.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                local mPos = Mouse.X;
                local gPos = Fill.Size.X.Offset;
                local Diff = mPos - (Fill.AbsolutePosition.X + gPos);

                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local nMPos = Mouse.X;
                    local nX = math.clamp(gPos + (nMPos - mPos) + Diff, 0, Slider.MaxSize);

                    local nValue = Slider:GetValueFromXOffset(nX);
                    local OldValue = Slider.Value;
                    Slider.Value = nValue;

                    Slider:Display();

                    if nValue ~= OldValue and Slider.Changed then
                        Slider.Changed();
                    end;

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        Slider:Display();
        Groupbox:AddBlank(Info.BlankSize or 6);
        Groupbox:Resize();

        Options[Idx] = Slider;

        return Slider;
    end;

    function Funcs:AddDropdown(Idx, Info)
        assert(Info.Text and Info.Values, 'Bad Dropdown Data');

        local Dropdown = {
            Values = Info.Values;
            Value = Info.Multi and {};
            Multi = Info.Multi;
            Type = 'Dropdown';
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local RelativeOffset = 0;

        local DropdownLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 0, 10);
            TextSize = 14;
            Text = Info.Text;
            TextXAlignment = Enum.TextXAlignment.Left;
            TextYAlignment = Enum.TextYAlignment.Bottom;
            ZIndex = 5;
            Parent = Container;
        });

        Groupbox:AddBlank(3);

        for _, Element in next, Container:GetChildren() do
            if not Element:IsA('UIListLayout') then
                RelativeOffset = RelativeOffset + Element.Size.Y.Offset;
            end;
        end;

        local DropdownOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 20);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(DropdownOuter, {
            BorderColor3 = 'Black';
        });

        local DropdownInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = DropdownOuter;
        });

        Library:AddToRegistry(DropdownInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = DropdownInner;
        });

        local DropdownArrow = Library:Create('ImageLabel', {
            AnchorPoint = Vector2.new(0, 0.5);
            BackgroundTransparency = 1;
            Position = UDim2.new(1, -16, 0.5, 0);
            Size = UDim2.new(0, 12, 0, 12);
            Image = 'http://www.roblox.com/asset/?id=6282522798';
            ZIndex = 7;
            Parent = DropdownInner;
        });

        local ItemList = Library:CreateLabel({
            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);
            TextSize = 14;
            Text = '--';
            TextXAlignment = Enum.TextXAlignment.Left;
            TextWrapped = true;
            ZIndex = 7;
            Parent = DropdownInner;
        });

        Library:OnHighlight(DropdownOuter, DropdownOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, DropdownOuter)
        end

        local MAX_DROPDOWN_ITEMS = 8;

        local ListOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 4, 0, 20 + RelativeOffset + 1 + 20);
            Size = UDim2.new(1, -8, 0, MAX_DROPDOWN_ITEMS * 20 + 2);
            ZIndex = 20;
            Visible = false;
            Parent = Container.Parent;
        });

        local ListInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 21;
            Parent = ListOuter;
        });

        Library:AddToRegistry(ListInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local Scrolling = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            CanvasSize = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 21;
            Parent = ListInner;

            TopImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png',
            BottomImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png',

            ScrollBarThickness = 3,
            ScrollBarImageColor3 = Library.AccentColor, 
        });

        Library:AddToRegistry(Scrolling, {
            ScrollBarImageColor3 = 'AccentColor'
        })

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 0);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = Scrolling;
        });

        function Dropdown:Display()
            local Values = Dropdown.Values;
            local Str = '';

            if Info.Multi then
                for Idx, Value in next, Values do
                    if Dropdown.Value[Value] then
                        Str = Str .. Value .. ', ';
                    end;
                end;

                Str = Str:sub(1, #Str - 2);
            else
                Str = Dropdown.Value or '';
            end;

            ItemList.Text = (Str == '' and '--' or Str);
        end;

        function Dropdown:GetActiveValues()
            if Info.Multi then
                local T = {};

                for Value, Bool in next, Dropdown.Value do
                    table.insert(T, Value);
                end;

                return T;
            else
                return Dropdown.Value and 1 or 0;
            end;
        end;

        function Dropdown:SetValues()
            local Values = Dropdown.Values;
            local Buttons = {};

            for _, Element in next, Scrolling:GetChildren() do
                if not Element:IsA('UIListLayout') then
                    -- Library:RemoveFromRegistry(Element);
                    Element:Destroy();
                end;
            end;

            local Count = 0;

            for Idx, Value in next, Values do
                local Table = {};

                Count = Count + 1;

                local Button = Library:Create('Frame', {
                    BackgroundColor3 = Library.MainColor;
                    BorderColor3 = Library.OutlineColor;
                    BorderMode = Enum.BorderMode.Middle;
                    Size = UDim2.new(1, -1, 0, 20);
                    ZIndex = 23;
                    Active = true,
                    Parent = Scrolling;
                });

                Library:AddToRegistry(Button, {
                    BackgroundColor3 = 'MainColor';
                    BorderColor3 = 'OutlineColor';
                });

                local ButtonLabel = Library:CreateLabel({
                    Size = UDim2.new(1, -6, 1, 0);
                    Position = UDim2.new(0, 6, 0, 0);
                    TextSize = 14;
                    Text = Value;
                    TextXAlignment = Enum.TextXAlignment.Left;
                    ZIndex = 25;
                    Parent = Button;
                });

                Library:OnHighlight(Button, Button,
                    { BorderColor3 = 'AccentColor', ZIndex = 24 },
                    { BorderColor3 = 'OutlineColor', ZIndex = 23 }
                );

                local Selected;

                if Info.Multi then
                    Selected = Dropdown.Value[Value];
                else
                    Selected = Dropdown.Value == Value;
                end;

                function Table:UpdateButton()
                    if Info.Multi then
                        Selected = Dropdown.Value[Value];
                    else
                        Selected = Dropdown.Value == Value;
                    end;

                    ButtonLabel.TextColor3 = Selected and Library.AccentColor or Library.FontColor;
                    Library.RegistryMap[ButtonLabel].Properties.TextColor3 = Selected and 'AccentColor' or 'FontColor';
                end;

                ButtonLabel.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                        local Try = not Selected;

                        if Dropdown:GetActiveValues() == 1 and (not Try) and (not Info.AllowNull) then
                        else
                            if Info.Multi then
                                Selected = Try;

                                if Selected then
                                    Dropdown.Value[Value] = true;
                                else
                                    Dropdown.Value[Value] = nil;
                                end;
                            else
                                Selected = Try;

                                if Selected then
                                    Dropdown.Value = Value;
                                else
                                    Dropdown.Value = nil;
                                end;

                                for _, OtherButton in next, Buttons do
                                    OtherButton:UpdateButton();
                                end;
                            end;

                            Table:UpdateButton();
                            Dropdown:Display();

                            if Dropdown.Changed then
                                Dropdown.Changed();
                            end;

                            Library:AttemptSave();
                        end;
                    end;
                end);

                Table:UpdateButton();
                Dropdown:Display();

                Buttons[Button] = Table;
            end;

            local Y = math.clamp(Count * 20, 0, MAX_DROPDOWN_ITEMS * 20) + 1;
            ListOuter.Size = UDim2.new(1, -8, 0, Y);
            Scrolling.CanvasSize = UDim2.new(0, 0, 0, (Count * 20) + 1);

            -- ListOuter.Size = UDim2.new(1, -8, 0, (#Values * 20) + 2);
        end;

        function Dropdown:OpenDropdown()
            ListOuter.Visible = true;
            Library.OpenedFrames[ListOuter] = true;
            DropdownArrow.Rotation = 180;
        end;

        function Dropdown:CloseDropdown()
            ListOuter.Visible = false;
            Library.OpenedFrames[ListOuter] = nil;
            DropdownArrow.Rotation = 0;
        end;

        function Dropdown:OnChanged(Func)
            Dropdown.Changed = Func;
            Func();
        end;

        function Dropdown:SetValue(Val)
            if Dropdown.Multi then
                local nTable = {};

                for Value, Bool in next, Val do
                    if table.find(Dropdown.Values, Value) then
                        nTable[Value] = true
                    end;
                end;

                Dropdown.Value = nTable;
            else
                if (not Val) then
                    Dropdown.Value = nil;
                elseif table.find(Dropdown.Values, Val) then
                    Dropdown.Value = Val;
                end;
            end;

            Dropdown:SetValues();
            Dropdown:Display();
            
            if Dropdown.Changed then Dropdown.Changed() end
        end;

        DropdownOuter.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                if ListOuter.Visible then
                    Dropdown:CloseDropdown();
                else
                    Dropdown:OpenDropdown();
                end;
            end;
        end);

        InputService.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = ListOuter.AbsolutePosition, ListOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    Dropdown:CloseDropdown();
                end;
            end;
        end);

        Dropdown:SetValues();
        Dropdown:Display();

        if type(Info.Default) == 'string' then
            Info.Default = table.find(Dropdown.Values, Info.Default)
        end

        if Info.Default then
            if Info.Multi then
                Dropdown.Value[Dropdown.Values[Info.Default]] = true;
            else
                Dropdown.Value = Dropdown.Values[Info.Default];
            end;

            Dropdown:SetValues();
            Dropdown:Display();
        end;

        Groupbox:AddBlank(Info.BlankSize or 5);
        Groupbox:Resize();

        Options[Idx] = Dropdown;

        return Dropdown;
    end;

    BaseGroupbox.__index = Funcs;
    BaseGroupbox.__namecall = function(Table, Key, ...)
        return Funcs[Key](...);
    end;
end;

-- < Create other UI elements >
do
    Library.NotificationArea = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Position = UDim2.new(0, 0, 0, 40);
        Size = UDim2.new(0, 300, 0, 200);
        ZIndex = 100;
        Parent = ScreenGui;
    });

    Library:Create('UIListLayout', {
        Padding = UDim.new(0, 4);
        FillDirection = Enum.FillDirection.Vertical;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = Library.NotificationArea;
    });

    local WatermarkOuter = Library:Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 255, 0, -28);
        Size = UDim2.new(0, 213, 0, 20);
        ZIndex = 200;
        Visible = false;
        Parent = ScreenGui;
    });

    local WatermarkInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.AccentColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 201;
        Parent = WatermarkOuter;
    });

    Library:AddToRegistry(WatermarkInner, {
        BorderColor3 = 'AccentColor';
    });

    local InnerFrame = Library:Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1);
        BorderSizePixel = 0;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 202;
        Parent = WatermarkInner;
    });

    local Gradient = Library:Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
            ColorSequenceKeypoint.new(1, Library.MainColor),
        });
        Rotation = -90;
        Parent = InnerFrame;
    });

    Library:AddToRegistry(Gradient, {
        Color = function()
            return ColorSequence.new({
                ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
                ColorSequenceKeypoint.new(1, Library.MainColor),
            });
        end
    });

    local WatermarkLabel = Library:CreateLabel({
        Position = UDim2.new(0, 5, 0, 0);
        Size = UDim2.new(1, -4, 1, 0);
        TextSize = 14;
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = 203;
        Parent = InnerFrame;
    });

    Library.Watermark = WatermarkOuter;
    Library.WatermarkText = WatermarkLabel;
    Library:MakeDraggable(Library.Watermark);



    local KeybindOuter = Library:Create('Frame', {
        AnchorPoint = Vector2.new(0, 0.5);
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 10, 0.5, 0);
        Size = UDim2.new(0, 210, 0, 20);
        Visible = false;
        ZIndex = 100;
        Parent = ScreenGui;
    });

    local KeybindInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 101;
        Parent = KeybindOuter;
    });

    Library:AddToRegistry(KeybindInner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    }, true);

    local ColorFrame = Library:Create('Frame', {
        BackgroundColor3 = Library.AccentColor;
        BorderSizePixel = 0;
        Size = UDim2.new(1, 0, 0, 2);
        ZIndex = 102;
        Parent = KeybindInner;
    });

    Library:AddToRegistry(ColorFrame, {
        BackgroundColor3 = 'AccentColor';
    }, true);

    local KeybindLabel = Library:CreateLabel({
        Size = UDim2.new(1, 0, 0, 20);
        Position = UDim2.fromOffset(5, 2),
        TextXAlignment = Enum.TextXAlignment.Left,
        
        Text = 'Keybinds';
        ZIndex = 104;
        Parent = KeybindInner;
    });

    local KeybindContainer = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Size = UDim2.new(1, 0, 1, -20);
        Position = UDim2.new(0, 0, 0, 20);
        ZIndex = 1;
        Parent = KeybindInner;
    });

    Library:Create('UIListLayout', {
        FillDirection = Enum.FillDirection.Vertical;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = KeybindContainer;
    });

    Library:Create('UIPadding', {
        PaddingLeft = UDim.new(0, 5),
        Parent = KeybindContainer,
    })

    Library.KeybindFrame = KeybindOuter;
    Library.KeybindContainer = KeybindContainer;
    Library:MakeDraggable(KeybindOuter);
end;

function Library:SetWatermarkVisibility(Bool)
    Library.Watermark.Visible = Bool;
end;

function Library:SetWatermark(Text)
    local X, Y = Library:GetTextBounds(Text, Enum.Font.Code, 14);
    Library.Watermark.Size = UDim2.new(0, X + 15, 0, (Y * 1.5) + 3);
    Library:SetWatermarkVisibility(true)

    Library.WatermarkText.Text = Text;
end;

function Library:Notify(Text, Time)
    local XSize, YSize = Library:GetTextBounds(Text, Enum.Font.Code, 14);

    YSize = YSize + 7

    local NotifyOuter = Library:Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 100, 0, 10);
        Size = UDim2.new(0, 0, 0, YSize);
        ClipsDescendants = true;
        ZIndex = 100;
        Parent = Library.NotificationArea;
    });

    local NotifyInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 101;
        Parent = NotifyOuter;
    });

    Library:AddToRegistry(NotifyInner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    }, true);

    local InnerFrame = Library:Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1);
        BorderSizePixel = 0;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 102;
        Parent = NotifyInner;
    });

    local Gradient = Library:Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
            ColorSequenceKeypoint.new(1, Library.MainColor),
        });
        Rotation = -90;
        Parent = InnerFrame;
    });

    Library:AddToRegistry(Gradient, {
        Color = function()
            return ColorSequence.new({
                ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
                ColorSequenceKeypoint.new(1, Library.MainColor),
            });
        end
    });

    local NotifyLabel = Library:CreateLabel({
        Position = UDim2.new(0, 4, 0, 0);
        Size = UDim2.new(1, -4, 1, 0);
        Text = Text;
        TextXAlignment = Enum.TextXAlignment.Left;
        TextSize = 14;
        ZIndex = 103;
        Parent = InnerFrame;
    });

    local LeftColor = Library:Create('Frame', {
        BackgroundColor3 = Library.AccentColor;
        BorderSizePixel = 0;
        Position = UDim2.new(0, -1, 0, -1);
        Size = UDim2.new(0, 3, 1, 2);
        ZIndex = 104;
        Parent = NotifyOuter;
    });

    Library:AddToRegistry(LeftColor, {
        BackgroundColor3 = 'AccentColor';
    }, true);

    pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, XSize + 8 + 4, 0, YSize), 'Out', 'Quad', 0.4, true);

    task.spawn(function()
        wait(Time or 5);

        pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, 0, 0, YSize), 'Out', 'Quad', 0.4, true);

        wait(0.4);

        NotifyOuter:Destroy();
    end);
end;

function Library:CreateWindow(...)
    local Arguments = { ... }
    local Config = { AnchorPoint = Vector2.zero }

    if type(...) == 'table' then
        Config = ...;
    else
        Config.Title = Arguments[1]
        Config.AutoShow = Arguments[2] or false;
    end
    
    if type(Config.Title) ~= 'string' then Config.Title = 'No title' end
    
    if typeof(Config.Position) ~= 'UDim2' then Config.Position = UDim2.fromOffset(175, 50) end
    if typeof(Config.Size) ~= 'UDim2' then Config.Size = UDim2.fromOffset(550, 600) end

    if Config.Center then
        Config.AnchorPoint = Vector2.new(0.5, 0.5)
        Config.Position = UDim2.fromScale(0.5, 0.5)
    end

    local Window = {
        Tabs = {};
    };

    local Outer = Library:Create('Frame', {
        AnchorPoint = Config.AnchorPoint,
        BackgroundColor3 = Color3.new(0, 0, 0);
        BorderSizePixel = 0;
        Position = Config.Position,
        Size = Config.Size,
        Visible = false;
        ZIndex = 1;
        Parent = ScreenGui;
    });

    Library:MakeDraggable(Outer, 25);

    local Inner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.AccentColor;
        BorderMode = Enum.BorderMode.Inset;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 1;
        Parent = Outer;
    });

    Library:AddToRegistry(Inner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'AccentColor';
    });

    local WindowLabel = Library:CreateLabel({
        Position = UDim2.new(0, 7, 0, 0);
        Size = UDim2.new(0, 0, 0, 25);
        Text = Config.Title or '';
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = 1;
        Parent = Inner;
    });

    local MainSectionOuter = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Library.OutlineColor;
        Position = UDim2.new(0, 8, 0, 25);
        Size = UDim2.new(1, -16, 1, -33);
        ZIndex = 1;
        Parent = Inner;
    });

    Library:AddToRegistry(MainSectionOuter, {
        BackgroundColor3 = 'BackgroundColor';
        BorderColor3 = 'OutlineColor';
    });

    local MainSectionInner = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Color3.new(0, 0, 0);
        BorderMode = Enum.BorderMode.Inset;
        Position = UDim2.new(0, 0, 0, 0);
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 1;
        Parent = MainSectionOuter;
    });

    Library:AddToRegistry(MainSectionInner, {
        BackgroundColor3 = 'BackgroundColor';
    });

    local TabArea = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Position = UDim2.new(0, 8, 0, 8);
        Size = UDim2.new(1, -16, 0, 21);
        ZIndex = 1;
        Parent = MainSectionInner;
    });

    Library:Create('UIListLayout', {
        Padding = UDim.new(0, 0);
        FillDirection = Enum.FillDirection.Horizontal;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = TabArea;
    });

    local TabContainer = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        Position = UDim2.new(0, 8, 0, 30);
        Size = UDim2.new(1, -16, 1, -38);
        ZIndex = 2;
        Parent = MainSectionInner;
    });

    Library:AddToRegistry(TabContainer, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    });

    function Window:SetWindowTitle(Title)
        WindowLabel.Text = Title;
    end;

    function Window:AddTab(Name)
        local Tab = {
            Groupboxes = {};
            Tabboxes = {};
        };

        local TabButtonWidth = Library:GetTextBounds(Name, Enum.Font.Code, 16);

        local TabButton = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            Size = UDim2.new(0, TabButtonWidth + 8 + 4, 1, 0);
            ZIndex = 1;
            Parent = TabArea;
        });

        Library:AddToRegistry(TabButton, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        local TabButtonLabel = Library:CreateLabel({
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, -1);
            Text = Name;
            ZIndex = 1;
            Parent = TabButton;
        });

        local Blocker = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderSizePixel = 0;
            Position = UDim2.new(0, 0, 1, 0);
            Size = UDim2.new(1, 0, 0, 1);
            BackgroundTransparency = 1;
            ZIndex = 3;
            Parent = TabButton;
        });

        Library:AddToRegistry(Blocker, {
            BackgroundColor3 = 'MainColor';
        });

        local TabFrame = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, 0);
            Visible = false;
            ZIndex = 2;
            Parent = TabContainer;
        });

        local LeftSide = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 8, 0, 8);
            Size = UDim2.new(0.5, -12, 0, 507);
            ZIndex = 2;
            Parent = TabFrame;
        });

        local RightSide = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Position = UDim2.new(0.5, 4, 0, 8);
            Size = UDim2.new(0.5, -12, 0, 507);
            ZIndex = 2;
            Parent = TabFrame;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = LeftSide;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = RightSide;
        });

        function Tab:ShowTab()
            for _, Tab in next, Window.Tabs do
                Tab:HideTab();
            end;

            Blocker.BackgroundTransparency = 0;
            TabButton.BackgroundColor3 = Library.MainColor;
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'MainColor';
            TabFrame.Visible = true;
        end;

        function Tab:HideTab()
            Blocker.BackgroundTransparency = 1;
            TabButton.BackgroundColor3 = Library.BackgroundColor;
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'BackgroundColor';
            TabFrame.Visible = false;
        end;

        function Tab:AddGroupbox(Info)
            local Groupbox = {};

            local BoxOuter = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                Size = UDim2.new(1, 0, 0, 507);
                ZIndex = 2;
                Parent = Info.Side == 1 and LeftSide or RightSide;
            });

            Library:AddToRegistry(BoxOuter, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            });

            local BoxInner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Color3.new(0, 0, 0);
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 1, 0);
                ZIndex = 4;
                Parent = BoxOuter;
            });

            Library:AddToRegistry(BoxInner, {
                BackgroundColor3 = 'BackgroundColor';
            });

            local Highlight = Library:Create('Frame', {
                BackgroundColor3 = Library.AccentColor;
                BorderSizePixel = 0;
                Size = UDim2.new(1, 0, 0, 2);
                ZIndex = 5;
                Parent = BoxInner;
            });

            Library:AddToRegistry(Highlight, {
                BackgroundColor3 = 'AccentColor';
            });

            local GroupboxLabel = Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 18);
                Position = UDim2.new(0, 4, 0, 2);
                TextSize = 14;
                Text = Info.Name;
                TextXAlignment = Enum.TextXAlignment.Center;
                ZIndex = 5;
                Parent = BoxInner;
            });

            local Container = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Position = UDim2.new(0, 4, 0, 20);
                Size = UDim2.new(1, -4, 1, -20);
                ZIndex = 1;
                Parent = BoxInner;
            });

            Library:Create('UIListLayout', {
                FillDirection = Enum.FillDirection.Vertical;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = Container;
            });

            function Groupbox:Resize()
                local Size = 0;

                for _, Element in next, Groupbox.Container:GetChildren() do
                    if not Element:IsA('UIListLayout') then
                        Size = Size + Element.Size.Y.Offset;
                    end;
                end;

                BoxOuter.Size = UDim2.new(1, 0, 0, 20 + Size + 2);
            end;

            Groupbox.Container = Container;
            setmetatable(Groupbox, BaseGroupbox);

            Groupbox:AddBlank(3);
            Groupbox:Resize();

            Tab.Groupboxes[Info.Name] = Groupbox;

            return Groupbox;
        end;

        function Tab:AddLeftGroupbox(Name)
            return Tab:AddGroupbox({ Side = 1; Name = Name; });
        end;

        function Tab:AddRightGroupbox(Name)
            return Tab:AddGroupbox({ Side = 2; Name = Name; });
        end;

        function Tab:AddTabbox(Info)
            local Tabbox = {
                Tabs = {};
            };

            local BoxOuter = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                Size = UDim2.new(1, 0, 0, 0);
                ZIndex = 2;
                Parent = Info.Side == 1 and LeftSide or RightSide;
            });

            Library:AddToRegistry(BoxOuter, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            });

            local BoxInner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Color3.new(0, 0, 0);
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 1, 0);
                ZIndex = 4;
                Parent = BoxOuter;
            });

            Library:AddToRegistry(BoxInner, {
                BackgroundColor3 = 'BackgroundColor';
            });

            local Highlight = Library:Create('Frame', {
                BackgroundColor3 = Library.AccentColor;
                BorderSizePixel = 0;
                Size = UDim2.new(1, 0, 0, 2);
                ZIndex = 10;
                Parent = BoxInner;
            });

            Library:AddToRegistry(Highlight, {
                BackgroundColor3 = 'AccentColor';
            });

            local TabboxButtons = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Position = UDim2.new(0, 0, 0, 1);
                Size = UDim2.new(1, 0, 0, 18);
                ZIndex = 5;
                Parent = BoxInner;
            });

            Library:Create('UIListLayout', {
                FillDirection = Enum.FillDirection.Horizontal;
                HorizontalAlignment = Enum.HorizontalAlignment.Left;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = TabboxButtons;
            });

            function Tabbox:AddTab(Name)
                local Tab = {};

                local Button = Library:Create('Frame', {
                    BackgroundColor3 = Library.MainColor;
                    BorderColor3 = Color3.new(0, 0, 0);
                    Size = UDim2.new(0.5, 0, 1, 0);
                    ZIndex = 6;
                    Parent = TabboxButtons;
                });

                Library:AddToRegistry(Button, {
                    BackgroundColor3 = 'MainColor';
                });

                local ButtonLabel = Library:CreateLabel({
                    Size = UDim2.new(1, 0, 1, 0);
                    TextSize = 14;
                    Text = Name;
                    TextXAlignment = Enum.TextXAlignment.Center;
                    ZIndex = 7;
                    Parent = Button;
                });

                local Block = Library:Create('Frame', {
                    BackgroundColor3 = Library.BackgroundColor;
                    BorderSizePixel = 0;
                    Position = UDim2.new(0, 0, 1, 0);
                    Size = UDim2.new(1, 0, 0, 1);
                    Visible = false;
                    ZIndex = 9;
                    Parent = Button;
                });

                Library:AddToRegistry(Block, {
                    BackgroundColor3 = 'BackgroundColor';
                });

                local Container = Library:Create('Frame', {
                    Position = UDim2.new(0, 4, 0, 20);
                    Size = UDim2.new(1, -4, 1, -20);
                    ZIndex = 1;
                    Visible = false;
                    Parent = BoxInner;
                });

                Library:Create('UIListLayout', {
                    FillDirection = Enum.FillDirection.Vertical;
                    SortOrder = Enum.SortOrder.LayoutOrder;
                    Parent = Container;
                });

                function Tab:Show()
                    for _, Tab in next, Tabbox.Tabs do
                        Tab:Hide();
                    end;

                    Container.Visible = true;
                    Block.Visible = true;

                    Button.BackgroundColor3 = Library.BackgroundColor;
                    Library.RegistryMap[Button].Properties.BackgroundColor3 = 'BackgroundColor';
                end;

                function Tab:Hide()
                    Container.Visible = false;
                    Block.Visible = false;

                    Button.BackgroundColor3 = Library.MainColor;
                    Library.RegistryMap[Button].Properties.BackgroundColor3 = 'MainColor';
                end;

                function Tab:Resize()
                    local TabCount = 0;

                    for _, Tab in next, Tabbox.Tabs do
                        TabCount = TabCount +  1;
                    end;

                    for _, Button in next, TabboxButtons:GetChildren() do
                        if not Button:IsA('UIListLayout') then
                            Button.Size = UDim2.new(1 / TabCount, 0, 1, 0);
                        end;
                    end;

                    local Size = 0;

                    for _, Element in next, Tab.Container:GetChildren() do
                        if not Element:IsA('UIListLayout') then
                            Size = Size + Element.Size.Y.Offset;
                        end;
                    end;

                    if BoxOuter.Size.Y.Offset < 20 + Size + 2 then
                        BoxOuter.Size = UDim2.new(1, 0, 0, 20 + Size + 2);
                    end;
                end;

                Button.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                        Tab:Show();
                    end;
                end);

                Tab.Container = Container;
                Tabbox.Tabs[Name] = Tab;

                setmetatable(Tab, BaseGroupbox);

                Tab:AddBlank(3);
                Tab:Resize();

                if #TabboxButtons:GetChildren() == 2 then
                    Tab:Show();
                end;

                return Tab;
            end;

            Tab.Tabboxes[Info.Name or ''] = Tabbox;

            return Tabbox;
        end;

        function Tab:AddLeftTabbox(Name)
            return Tab:AddTabbox({ Name = Name, Side = 1; });
        end;

        function Tab:AddRightTabbox(Name)
            return Tab:AddTabbox({ Name = Name, Side = 2; });
        end;

        TabButton.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Tab:ShowTab();
            end;
        end);

        -- This was the first tab added, so we show it by default.
        if #TabContainer:GetChildren() == 1 then
            Tab:ShowTab();
        end;

        Window.Tabs[Name] = Tab;
        return Tab;
    end;

    local ModalElement = Library:Create('TextButton', {
        BackgroundTransparency = 1;
        Size = UDim2.new(0, 0, 0, 0);
        Visible = true;
        Text = '';
        Modal = false;
        Parent = ScreenGui;
    });

    function Library.Toggle()
        Outer.Visible = not Outer.Visible;
        ModalElement.Modal = Outer.Visible;

        local oIcon = Mouse.Icon;
        local State = InputService.MouseIconEnabled;

        local Cursor = Drawing.new('Triangle');
        Cursor.Thickness = 1;
        Cursor.Filled = true;

        while Outer.Visible do
            local mPos = workspace.CurrentCamera:WorldToViewportPoint(Mouse.Hit.p);

            Cursor.Color = Library.AccentColor;
            Cursor.PointA = Vector2.new(mPos.X, mPos.Y);
            Cursor.PointB = Vector2.new(mPos.X, mPos.Y) + Vector2.new(6, 14);
            Cursor.PointC = Vector2.new(mPos.X, mPos.Y) + Vector2.new(-6, 14);

            Cursor.Visible = not InputService.MouseIconEnabled;

            RenderStepped:Wait();
        end;

        Cursor:Remove();
    end

    Library:GiveSignal(InputService.InputBegan:Connect(function(Input, Processed)
        if type(Library.ToggleKeybind) == 'table' and Library.ToggleKeybind.Type == 'KeyPicker' then
            if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode.Name == Library.ToggleKeybind.Value then
                task.spawn(Library.Toggle)
            end
        elseif Input.KeyCode == Enum.KeyCode.RightControl or (Input.KeyCode == Enum.KeyCode.RightShift and (not Processed)) then
            task.spawn(Library.Toggle)
        end
        if type(Library.ComboBind) == 'table' and Library.ComboBind.Type == 'KeyPicker' then
            if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode.Name == Library.ComboBind.Value then
                if getgenv().SaveSettings["autocombotoggle"] then
                    if isfile("Deity Hub Next Generation/ComboFile/" .. getgenv().SaveSettings["Locationfilecombo"]) then
                        local filecombo = readfile("Deity Hub Next Generation/ComboFile/" .. getgenv().SaveSettings["Locationfilecombo"])
                        if string.find(filecombo,"Type Your Combo Here <- Delete Me") then
                            
                        else
                            local comboset = filecombo:split("\n")
                            for i=1,#comboset do
                                pcall(function()
                                    if comboset[i]:split(" : ")[1] == "Wait" or comboset[i]:split(" : ")[1] == "wait" then
                                        wait(comboset[i]:split(" : ")[2])
                                    elseif comboset[i]:split(" : ")[1] == "Soru" then
                                        local args = {
                                            [1] = "Soru",
                                            [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(-0, 0, -0),
                                            [3] = game.Players[PlayerSelected].Character.HumanoidRootPart.CFrame * CFrame.Angles(-0, 0, -0)
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
                                        wait()
                                    elseif comboset[i]:split(" : ")[1] == "Click" or comboset[i]:split(" : ")[1] == "click" then
                                        game:GetService'VirtualUser':CaptureController()
                                        game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                                        wait()
                                    elseif #comboset[i]:split(" : ")[1] > 0 then
                                        if game.Players.LocalPlayer.Character:FindFirstChild(comboset[i]:split(" ")[1]) then
                                            Keyboard(comboset[i]:split(" : ")[2],comboset[i]:split(" : ")[3])
                                        else
                                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild(comboset[i]:split(" : ")[1]))
                                            repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild(comboset[i]:split(" : ")[1])
                                            Keyboard(comboset[i]:split(" : ")[2],comboset[i]:split(" : ")[3])
                                        end
                                    end
                                end)
                            end
                        end
                    else
                        if not isfolder("Deity Hub Next Generation") then
                            makefolder("Deity Hub Next Generation")
                        end
                        if not isfolder("Deity Hub Next Generation/ComboFile") then
                            makefolder("Deity Hub Next Generation/ComboFile")
                        end
                        writefile("Deity Hub Next Generation/ComboFile/" .. getgenv().SaveSettings["Locationfilecombo"], "Type Your Combo Here <- Delete Me")
                    end
                end
            end
        elseif Input.KeyCode == Enum.KeyCode.RightControl or (Input.KeyCode == Enum.KeyCode.RightShift and (not Processed)) then
            -- print("aaaaaaaaa")
        end
    end))

    if Config.AutoShow then task.spawn(Library.Toggle) end

    Window.Holder = Outer;

    return Window;
end;

local httpService = game:GetService('HttpService')
local ThemeManager = {} do
	ThemeManager.Folder = 'LinoriaLibSettings'
	-- if not isfolder(ThemeManager.Folder) then makefolder(ThemeManager.Folder) end

	ThemeManager.Library = nil
	ThemeManager.BuiltInThemes = {                                      --05d1e5
		['Default'] 		= { 1, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1c1c1c","AccentColor":"0EDEFF","BackgroundColor":"141414","OutlineColor":"323232"}') },
		['Dracula'] 		= { 2, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"232533","AccentColor":"6271a5","BackgroundColor":"1b1c27","OutlineColor":"7c82a7"}') },
		['Bitch Bot'] 		= { 3, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1e1e1e","AccentColor":"7e48a3","BackgroundColor":"232323","OutlineColor":"141414"}') },
		['Kiriot Hub'] 		= { 4, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"30333b","AccentColor":"ffaa00","BackgroundColor":"1a1c20","OutlineColor":"141414"}') },
		['Fatality'] 		= { 5, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1e1842","AccentColor":"c50754","BackgroundColor":"191335","OutlineColor":"3c355d"}') },
		['Green'] 			= { 6, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"141414","AccentColor":"00ff8b","BackgroundColor":"1c1c1c","OutlineColor":"3c3c3c"}') },
		['Jester'] 			= { 7, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"242424","AccentColor":"db4467","BackgroundColor":"1c1c1c","OutlineColor":"373737"}') },
		['Mint'] 			= { 8, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"242424","AccentColor":"3db488","BackgroundColor":"1c1c1c","OutlineColor":"373737"}') },
		['Tokyo Night'] 	= { 9, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"191925","AccentColor":"6759b3","BackgroundColor":"16161f","OutlineColor":"323232"}') },
		['Ubuntu'] 			= { 10, httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3e3e3e","AccentColor":"e2581e","BackgroundColor":"323232","OutlineColor":"191919"}') },
	}

	function ThemeManager:ApplyTheme(theme)
		local customThemeData = self:GetCustomTheme(theme)
		local data = customThemeData or self.BuiltInThemes[theme]

		if not data then return end

		-- custom themes are just regular dictionaries instead of an array with { index, dictionary }

		local scheme = data[2]
		for idx, col in next, customThemeData or scheme do
			self.Library[idx] = Color3.fromHex(col)
			
			if Options[idx] then
				Options[idx]:SetValueRGB(Color3.fromHex(col))
			end
		end

		self:ThemeUpdate()
	end

	function ThemeManager:ThemeUpdate()
		self.Library.FontColor = Options.FontColor.Value
		self.Library.MainColor = Options.MainColor.Value
		self.Library.AccentColor = Options.AccentColor.Value
		self.Library.BackgroundColor = Options.BackgroundColor.Value
		self.Library.OutlineColor = Options.OutlineColor.Value

		self.Library.AccentColorDark = self.Library:GetDarkerColor(self.Library.AccentColor);
		self.Library:UpdateColorsUsingRegistry()
	end

	function ThemeManager:LoadDefault()		
		local theme = 'Default'
		local content = isfile(self.Folder .. '/themes/default.txt') and readfile(self.Folder .. '/themes/default.txt')

		local isDefault = true
		if content then
			if self.BuiltInThemes[content] then
				theme = content
			elseif self:GetCustomTheme(content) then
				theme = content
				isDefault = false;
			end
		elseif self.BuiltInThemes[self.DefaultTheme] then
		 	theme = self.DefaultTheme
		end

		if isDefault then
			Options.ThemeManager_ThemeList:SetValue(theme)
		else
			self:ApplyTheme(theme)
		end
	end

	function ThemeManager:SaveDefault(theme)
		writefile(self.Folder .. '/themes/default.txt', theme)
	end

	function ThemeManager:CreateThemeManager(groupbox)
		groupbox:AddLabel('Background color'):AddColorPicker('BackgroundColor', { Default = self.Library.BackgroundColor });
		groupbox:AddLabel('Main color')	:AddColorPicker('MainColor', { Default = self.Library.MainColor });
		groupbox:AddLabel('Accent color'):AddColorPicker('AccentColor', { Default = self.Library.AccentColor });
		groupbox:AddLabel('Outline color'):AddColorPicker('OutlineColor', { Default = self.Library.OutlineColor });
		groupbox:AddLabel('Font color')	:AddColorPicker('FontColor', { Default = self.Library.FontColor });

		local ThemesArray = {}
		for Name, Theme in next, self.BuiltInThemes do
			table.insert(ThemesArray, Name)
		end

		table.sort(ThemesArray, function(a, b) return self.BuiltInThemes[a][1] < self.BuiltInThemes[b][1] end)

		groupbox:AddDivider()
		groupbox:AddDropdown('ThemeManager_ThemeList', { Text = 'Theme list', Values = ThemesArray, Default = 1 })

		groupbox:AddButton('Set as default', function()
			self:SaveDefault(Options.ThemeManager_ThemeList.Value)
			self.Library:Notify(string.format('Set default theme to %q', Options.ThemeManager_ThemeList.Value))
		end)

		Options.ThemeManager_ThemeList:OnChanged(function()
			self:ApplyTheme(Options.ThemeManager_ThemeList.Value)
		end)

		groupbox:AddDivider()
		groupbox:AddDropdown('ThemeManager_CustomThemeList', { Text = 'Custom themes', Values = self:ReloadCustomThemes(), AllowNull = true, Default = 1 })
		groupbox:AddInput('ThemeManager_CustomThemeName', { Text = 'Custom theme name' })

		groupbox:AddButton('Load custom theme', function() 
			self:ApplyTheme(Options.ThemeManager_CustomThemeList.Value) 
		end)

		groupbox:AddButton('Save custom theme', function() 
			self:SaveCustomTheme(Options.ThemeManager_CustomThemeName.Value)

			Options.ThemeManager_CustomThemeList.Values = self:ReloadCustomThemes()
			Options.ThemeManager_CustomThemeList:SetValues()
			Options.ThemeManager_CustomThemeList:SetValue(nil)
		end)

		groupbox:AddButton('Refresh list', function()
			Options.ThemeManager_CustomThemeList.Values = self:ReloadCustomThemes()
			Options.ThemeManager_CustomThemeList:SetValues()
			Options.ThemeManager_CustomThemeList:SetValue(nil)
		end)

		groupbox:AddButton('Set as default', function()
			if Options.ThemeManager_CustomThemeList.Value ~= nil and Options.ThemeManager_CustomThemeList.Value ~= '' then
				self:SaveDefault(Options.ThemeManager_CustomThemeList.Value)
				self.Library:Notify(string.format('Set default theme to %q', Options.ThemeManager_CustomThemeList.Value))
			end
		end)

		ThemeManager:LoadDefault()

		local function UpdateTheme()
			self:ThemeUpdate()
		end

		Options.BackgroundColor:OnChanged(UpdateTheme)
		Options.MainColor:OnChanged(UpdateTheme)
		Options.AccentColor:OnChanged(UpdateTheme)
		Options.OutlineColor:OnChanged(UpdateTheme)
		Options.FontColor:OnChanged(UpdateTheme)
	end

	function ThemeManager:GetCustomTheme(file)
		local path = self.Folder .. '/themes/' .. file
		if not isfile(path) then
			return nil
		end

		local data = readfile(path)
		local success, decoded = pcall(httpService.JSONDecode, httpService, data)
		
		if not success then
			return nil
		end

		return decoded
	end

	function ThemeManager:SaveCustomTheme(file)
		if file:gsub(' ', '') == '' then
			return self.Library:Notify('Invalid file name for theme (empty)', 3)
		end

		local theme = {}
		local fields = { "FontColor", "MainColor", "AccentColor", "BackgroundColor", "OutlineColor" }

		for _, field in next, fields do
			theme[field] = Options[field].Value:ToHex()
		end

		writefile(self.Folder .. '/themes/' .. file .. '.json', httpService:JSONEncode(theme))
	end

	function ThemeManager:ReloadCustomThemes()
		local list = listfiles(self.Folder .. '/themes')

		local out = {}
		for i = 1, #list do
			local file = list[i]
			if file:sub(-5) == '.json' then
				-- i hate this but it has to be done ...

				local pos = file:find('.json', 1, true)
				local char = file:sub(pos, pos)

				while char ~= '/' and char ~= '\\' and char ~= '' do
					pos = pos - 1
					char = file:sub(pos, pos)
				end

				if char == '/' or char == '\\' then
					table.insert(out, file:sub(pos + 1))
				end
			end
		end

		return out
	end

	function ThemeManager:SetLibrary(lib)
		self.Library = lib
	end

	function ThemeManager:BuildFolderTree()
		local paths = {}

		-- build the entire tree if a path is like some-hub/phantom-forces
		-- makefolder builds the entire tree on Synapse X but not other exploits

		local parts = self.Folder:split('/')
		for idx = 1, #parts do
			paths[#paths + 1] = table.concat(parts, '/', 1, idx)
		end

		table.insert(paths, self.Folder .. '/themes')
		table.insert(paths, self.Folder .. '/settings')

		for i = 1, #paths do
			local str = paths[i]
			if not isfolder(str) then
				makefolder(str)
			end
		end
	end

	function ThemeManager:SetFolder(folder)
		self.Folder = folder
		self:BuildFolderTree()
	end

	function ThemeManager:CreateGroupBox(tab)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		return tab:AddLeftGroupbox('Themes')
	end

	function ThemeManager:ApplyToTab(tab)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		local groupbox = self:CreateGroupBox(tab)
		self:CreateThemeManager(groupbox)
	end

	function ThemeManager:ApplyToGroupbox(groupbox)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		self:CreateThemeManager(groupbox)
	end

	ThemeManager:BuildFolderTree()
end
function toggleuilib()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,"RightControl",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
	wait(sec)
	game:GetService("VirtualInputManager"):SendKeyEvent(false,"RightControl",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end
local SaveManager = loadstring(game:HttpGet("https://pastebin.com/raw/QccQyYQA"))()






-- end ui










if game.PlaceId == 2753915549 then
    FirstWorld = true
elseif game.PlaceId == 4442272183 then
    SecondWorld = true
elseif game.PlaceId == 7449423635 then
    ThirdWorld = true
else
    game.Players.LocalPlayer:kick("Invalid Game.")
end
spawn(function()
    while wait() do
        pcall(function()
            local scripttime = game.Workspace.DistributedGameTime
            local seconds = scripttime%60
            local minutes = math.floor(scripttime/60%60)
            local hours = math.floor(scripttime/3600)
            Library:SetWatermarkVisibility(true)
            if getgenv().SaveSettings["UI Language"] == 1 then
                Library:SetWatermark(game.Players.LocalPlayer.Name .. " | "..hours.." ชั่วโมง, "..minutes.." นาที, "..math.floor(seconds).." วินาที")
            else
                Library:SetWatermark(game.Players.LocalPlayer.Name .. " | "..hours.." Hour(s), "..minutes.." Minute(s), "..math.floor(seconds).." Second(s)")
            end
            Plr = game.Players.LocalPlayer
            Char = Plr.Character
            Hum = Char.Humanoid
            RootPart = Char.HumanoidRootPart
        end)
    end
end)
function getplrlist()
    local plarlist = {}
    for i,v in pairs(game.Players:GetChildren()) do
        table.insert(plarlist,v.Name)
    end
    return plarlist
end
function noclip()
    if setfflag then
        if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
            setfflag("HumanoidParallelRemoveNoPhysics", "False")
            setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
            game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    else
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
end
function Tween(P1)
    Distance = (P1 - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if Distance < 250 then
        Speed = 1000
    elseif Distance < 500 then
        Speed = 300
    elseif Distance < 1000 then
        Speed = 200
    elseif Distance >= 1000 then
        Speed = 150
    end
    game:GetService("TweenService"):Create(
        game.Players.LocalPlayer.Character.HumanoidRootPart,
        TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(P1)}
    ):Play()
end

function CheckNowWorld(World,Teleport)
    local placeid = game.PlaceId
    if World == 1 then
        if placeid == 2753915549 then
            return true
        elseif Teleport then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
        end
    elseif World == 2 then
        if placeid == 4442272183 then
            return true
        elseif Teleport then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
        end
    elseif World == 3 then
        if placeid == 7449423635 then
            return true
        elseif Teleport then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
        end
    end
    return false
end
function Tween2(P1,Mode,Method)
    if Mode == "Vector" then
        if FirstWorld then
            if (game:GetService("Workspace").Map.Fishmen.Entrance.Position - P1).Magnitude > 3000 and (game:GetService("Workspace").Map.Fishmen.Entrance.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 3000 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(3864.6884765625, 6.736950397491455, -1926.214111328125))
            end
            if (game:GetService("Workspace").Map.Fishmen.Entrance.Position - P1).Magnitude < 3000 and (game:GetService("Workspace").Map.Fishmen.Entrance.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 3000 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
            end
        end
        if ThirdWorld then
            if (P1 - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(5746, 668, -287)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
            if (P1 - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(-12470, 389, -7586)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
                
            if (Vector3.new(-5263, 314, -2916) - P1).Magnitude < 3000 and (Vector3.new(-5263, 314, -2916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 3000 then
                local args = { 
                    [1] = "requestEntrance",
                    [2] = Vector3.new(-5181, 314, -3096)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
            
            if (Vector3.new(2104, 26, -6536) - P1).Magnitude < 3000 and (Vector3.new(2104, 26, -6536) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 8300 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(5746, 668, -287)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
        if SecondWorld then
            if (P1 - Vector3.new(955, 125, 32895)).Magnitude < 5000 and (Vector3.new(955, 125, 32895) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(955, 125, 32895)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
            if (P1 - Vector3.new(955, 125, 32895)).Magnitude > 7500 and (Vector3.new(955, 125, 32895) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 5000 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(-6508.55810546875, 89.03499603271484, -132.83953857421875)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
        CFrameposition = {
            X = 0,
            Y = 0,
            Z = 0,
        }
        CFrameposition.X = P1.X
        CFrameposition.Y = P1.Y
        CFrameposition.Z = P1.Z
        Distance = (P1 - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        if Distance < 250 then
            Speed = 1000
        elseif Distance < 500 then
            Speed = 400
        elseif Distance < 1000 then
            Speed = 350
        elseif Distance >= 1000 then
            Speed = 300
        end
        game:GetService("TweenService"):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
            {CFrame = CFrame.new(CFrameposition.X,CFrameposition.Y,CFrameposition.Z)}
        ):Play()
    else
        if ThirdWorld then
            if (P1.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(5746, 668, -287)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
            if (P1.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(-12470, 389, -7586)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
                
            if (Vector3.new(-5263, 314, -2916) - P1.Position).Magnitude < 3000 and (Vector3.new(-5263, 314, -2916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 3000 then
                local args = { 
                    [1] = "requestEntrance",
                    [2] = Vector3.new(-5181, 314, -3096)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
            
            if (Vector3.new(2104, 26, -6536) - P1.Position).Magnitude < 3000 and (Vector3.new(2104, 26, -6536) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 8300 then
                local args = {
                    [1] = "requestEntrance",
                    [2] = Vector3.new(5746, 668, -287)
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
        Distance = (P1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        if Distance < 250 then
            Speed = 1000
        elseif Distance < 500 then
            Speed = 400
        elseif Distance < 1000 then
            Speed = 350
        elseif Distance >= 1000 then
            Speed = 200
        end
        if Method == nil then
           Method = CFrame.new(0,0,0) 
        end
        game:GetService("TweenService"):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
            {CFrame = P1.CFrame * Method}
        ):Play()
    end
end
function getindex(table,Value)
    for i,v in pairs(table) do
        if v == Value then
            return i 
        end
    end
    return i
end
function useskill(Key,Time)
    game:service('VirtualInputManager'):SendKeyEvent(true, Key, false, game)
    if Time then
        wait(Time)
    end
    game:service('VirtualInputManager'):SendKeyEvent(false, Key, false, game) 
end
function "Refresh"(Method)
    local Result = {}
    if Method == "Boss" then
        for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
            if string.find(v.Name, "Boss") then
                table.insert(Result, v.Name)
            end
        end
        for i, v in pairs(game.workspace.Enemies:GetChildren()) do
            if string.find(v.Name, "Boss") then
                table.insert(Result, v.Name)
            end
        end
        if #Result > 1 then
            return Result
        else
            return {"--","---"}
        end
    elseif Method == "AllBoss" then
        for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
            if string.find(v.Name, "Boss") then
                table.insert(Result, v.Name)
            end
        end
        for i, v in pairs(game.workspace.Enemies:GetChildren()) do
            if string.find(v.Name, "Boss") then
                table.insert(Result, v.Name)
            end
        end
        return Result
        
        
    elseif Method == "Players" then
        for i, v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                table.insert(Result, v.Name)
            end
        end
        if #Result > 1 then
            return Result
        else
            table.insert(Result, game.Players.LocalPlayer.Name)
            table.insert(Result, "--")
            return Result
        end
    elseif Method == "Boat" then
        for i,v in pairs(game:GetService("Workspace").Boats:GetChildren()) do
            table.insert(Result,v.Name)
        end
        if #Result > 1 then
            return Result
        else
            return {"--","---"}
        end
    end
end



function HopServer()
    repeat wait() until game:IsLoaded()
    
    local Settings = {}
    local HttpService = game:GetService("HttpService")
    
    local SaveFileName = "ServerData.json"
    
    function SaveSettings()
        local HttpService = game:GetService("HttpService")
        if not isfolder("Deity Hub Next Generation") then
          makefolder("Deity Hub Next Generation")
        end
        if not isfolder("Deity Hub Next Generation/Bin") then
          makefolder("Deity Hub Next Generation/Bin")
        end
        writefile("Deity Hub Next Generation/Bin/" .. SaveFileName, HttpService:JSONEncode(Settings))
    end
    Library:Notify("Hoping Server . . .",3)
    function ReadSetting()
      local s,e = pcall(function()
            local HttpService = game:GetService("HttpService")
            if not isfolder("Deity Hub Next Generation") then
                makefolder("Deity Hub Next Generation")
            end
            if not isfolder("Deity Hub Next Generation/Bin") then
                makefolder("Deity Hub Next Generation/Bin")
            end
          return HttpService:JSONDecode(readfile("Deity Hub Next Generation/Bin/" .. SaveFileName))
      end)
      if s then return e
      else
          SaveSettings()
          return ReadSetting()
      end
    end
    Settings = ReadSetting()
    
    function HopServer()
      local function Hop()
          for i=1,100 do
              local huhu = game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer(i)
              for k,v in pairs(huhu) do
                  if k~=game.JobId and v.Count < 10 then
                      if not Settings[k] or tick() - Settings[k].Time > 60*10  then
                           Settings[k] = {
                               Time = tick()
                           }
                           SaveSettings()
                          game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer("teleport",k)
                          return true
                      elseif tick() - Settings[k].Time > 60*60 then
                          Settings[k] = nil
                      end
                  end
              end
          end
          return false
      end
      if not getgenv().Loaded then
          local function child(v)
              if v.Name == "ErrorPrompt" then
                  if v.Visible then
                      if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                          HopServer()
                      end
                  end
                  v:GetPropertyChangedSignal("Visible"):Connect(function()
                      if v.Visible then
                          if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                              HopServer()
                          end
                      end
                  end)
              end
          end
          for k,v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
              child(v)
          end
          game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(child)
          getgenv().Loaded = true
      end
      while not Hop() do wait() end
      SaveSettings()
    end
    HopServer()
end
function getdarkbladev2()
    local args = {
        [1] = "RobotTalk"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "IndraTalk"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "LoveLetter",
        [2] = 1
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "LoveLetter",
        [2] = 2
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "LoveLetter",
        [2] = 3
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "RobotTalk"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args)) 
end
-- if FirstWorld then
--     IslandTable = {
--         ["WindMill"] = CFrame.new(979.79895019531, 16.516613006592, 1429.0466308594),
--         ["Marine"] = CFrame.new(-2566.4296875, 6.8556680679321, 2045.2561035156),
--         ["Middle Town"] = CFrame.new(-690.33081054688, 15.09425163269, 1582.2380371094),
--         ["Jungle"] = CFrame.new(-1612.7957763672, 36.852081298828, 149.12843322754),
--         ["Pirate Village"] = CFrame.new(-1181.3093261719, 4.7514905929565, 3803.5456542969),
--         ["Desert"] = CFrame.new(944.15789794922, 20.919729232788, 4373.3002929688),
--         ["Snow Island"] = CFrame.new(1347.8067626953, 104.66806030273, -1319.7370605469),
--         ["MarineFord"] = CFrame.new(-4914.8212890625, 50.963626861572, 4281.0278320313),
--         ["Colosseum"] = CFrame.new(-1427.6203613281, 7.2881078720093, -2792.7722167969),
--         ["Sky Island 1"] = CFrame.new(-4869.1025390625, 733.46051025391, -2667.0180664063),
--         ["Sky Island 2"] = CFrame.new(-7874.0908203125, 5545.56640625, -370.306640625),
--         ["Sky Island 3"] = CFrame.new(-7994.10546875, 5756.033203125, -1942.4979248047),
--         ["Prison"] = CFrame.new(4875.330078125, 5.6519818305969, 734.85021972656),
--         ["Magma Village"] = CFrame.new(-5247.7163085938, 12.883934020996, 8504.96875),
--         ["Under Water Island"] = CFrame.new(3876.6374511719, 5.3731470108032, -1896.9306640625),
--         ["Fountain City"] = CFrame.new(5127.1284179688, 59.501365661621, 4105.4458007813),
--         ["Shank Room"] = CFrame.new(-1442.16553, 29.8788261, -28.3547478),
--         ["Mob Island"] = CFrame.new(-2850.20068, 7.39224768, 5354.99268),
--     }
-- elseif SecondWorld then
--     IslandTable = {
--         ["cafe"] = CFrame.new(-380.47927856445, 77.220390319824, 255.82550048828),
--         ["Frist Spot"] = CFrame.new(-11.311455726624, 29.276733398438, 2771.5224609375),
--         ["Dark Area"] = CFrame.new(3780.0302734375, 22.652164459229, -3498.5859375),
--         ["Flamingo Mansion"] = CFrame.new(-483.73370361328, 332.0383605957, 595.32708740234),
--         ["Flamingo Room"] = CFrame.new(2284.4140625, 15.152037620544, 875.72534179688),
--         ["Green Zone"] = CFrame.new(-2448.5300292969, 73.016105651855, -3210.6306152344),
--         ["Factory"] = CFrame.new(424.12698364258, 211.16171264648, -427.54049682617),
--         ["Colossuim"] = CFrame.new(-1503.6224365234, 219.7956237793, 1369.3101806641),
--         ["Zombie Island"] = CFrame.new(-5622.033203125, 492.19604492188, -781.78552246094),
--         ["Two Snow Mountain"] = CFrame.new(753.14288330078, 408.23559570313, -5274.6147460938),
--         ["Punk Hazard"] = CFrame.new(-6127.654296875, 15.951762199402, -5040.2861328125),
--         ["Cursed Ship"] = CFrame.new(923.40197753906, 125.05712890625, 32885.875),
--         ["Ice Castle"] = CFrame.new(6148.4116210938, 294.38687133789, -6741.1166992188),
--         ["Forgotten Island"] = CFrame.new(-3032.7641601563, 317.89672851563, -10075.373046875),
--         ["Ussop Island"] = CFrame.new(4816.8618164063, 8.4599885940552, 2863.8195800781),
--         ["Mini Sky Island"] = CFrame.new(-288.74060058594, 49326.31640625, -35248.59375),
--     }
-- elseif ThirdWorld then
--     IslandTable = {
--         ["Port Town"] = CFrame.new(-287, 29, 5388),
--         ["Boat Castle"] = CFrame.new(-4973, 315, -3023),
--         ["Haunted Castle"] = CFrame.new(-9513, 142, 5537),
--         ["Turtle"] = CFrame.new(-12550, 337, -7490),
--         ["CakeLoaf"] = CFrame.new(-2017, 38, -11951),
--         ["Peanut Island"] = CFrame.new(-2086, 38, -10170),
--         ["Ice Cream Island"] = CFrame.new(-837, 66, -10947),
--         ["Great Tree"] = CFrame.new(2291, 26, -6490),
--         ["Hydra"] = CFrame.new(4673, 51, -1397)
--     }
-- end
local SpawnPointData = {
    ["Town"] = Vector3.new(-720, 8, 1664),
    ["MarineBase"] = Vector3.new(-4923, 42, 4423),
    ["Sky"] = Vector3.new(-4919, 718, -2640),
    ["Jungle"] = Vector3.new(-1339, 12, 496),
    ["Colosseum"] = Vector3.new(-1395, 8, -2835),
    ["Magma"] = Vector3.new(-5227, 9, 8466),
    ["Fountain"] = Vector3.new(5193, 39, 4144),
    ["Ice"] = Vector3.new(1108, 7, -1169),
    ["Default"] = Vector3.new(-34, 29, 2765),
    ["Bar"] = Vector3.new(-379, 73, 249),
    ["Greenb"] = Vector3.new(-2220, 73, -2716),
    ["Graveyard"] = Vector3.new(-5391, 9, -709),
    ["Snowy"] = Vector3.new(396, 401, -5316),
    ["CircleIslandIce"] = Vector3.new(-5856, 23, -5028),
    ["CircleIslandFire"] = Vector3.new(-5507, 18, -5107),
    ["IceCastle"] = Vector3.new(5577, 28, -6113),
    ["ForgottenIsland"] = Vector3.new(-3071, 237, -10160),
}
local MobData = {
    ["Bandit [Lv. 5]"] = {
        QuestPosition = Vector3.new(1060, 16, 1549),
        MonsterPosition = Vector3.new(1087, 59, 1691),
        SpawnPoint = "Default",
        QuestName = "BanditQuest1",
        QuestIndex = 1,
        Reward = "Reward:\n$350\n300 Exp."
    },
    ["Chief Petty Officer [Lv. 120]"] = {
        QuestPosition = Vector3.new(-5038, 29, 4323),
        MonsterPosition = Vector3.new(-4769, 5, 4296),
        SpawnPoint = "MarineBase",
        QuestName = "MarineQuest2",
        QuestIndex = 1,
        Reward = "Reward:\n$6,000\n225,000 Exp."
    },
    ["Sky Bandit [Lv. 150]"] = {
        QuestPosition = Vector3.new(-4841, 718, -2620),
        MonsterPosition = Vector3.new(-4955, 366, -2922),
        QuestName = "SkyQuest",
        SpawnPoint = "Sky",
        QuestIndex = 1,
        Reward = "Reward:\n$7,000\n315,000 Exp."
    },
    ["Dark Master [Lv. 175]"] = {
        QuestPosition = Vector3.new(-4841, 718, -2620),
        MonsterPosition = Vector3.new(-5225, 430, -2280),
        QuestName = "SkyQuest",
        SpawnPoint = "Sky",
        QuestIndex = 2,
        Reward = "Reward:\n$7,500\n450,000 Exp."
    },
    ["Toga Warrior [Lv. 250]"] = {
        QuestPosition = Vector3.new(-1577, 8, -2987),
        MonsterPosition = Vector3.new(-1851, 40, -2925),
        QuestName = "ColosseumQuest",
        SpawnPoint = "Colosseum",
        QuestIndex = 1,
        Reward = "Reward:\n$7,000\n1,100,000 Exp."
    },
    ["Gladiator [Lv. 275]"] = {
        QuestPosition = Vector3.new(-1577, 8, -2987),
        MonsterPosition = Vector3.new(-1245, 43, -3090),
        QuestName = "ColosseumQuest",
        SpawnPoint = "Colosseum",
        QuestIndex = 2,
        Reward = "Reward:\n$7,500\n1,300,000 Exp."
    },
    ["Military Soldier [Lv. 300]"] = {
        QuestPosition = Vector3.new(-5315, 13, 8516),
        MonsterPosition = Vector3.new(-5465, 111, 8675),
        QuestName = "MagmaQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$8,250\n1,700,000 Exp."
    },
    ["Military Spy [Lv. 325]"] = {
        QuestPosition = Vector3.new(-5315, 13, 8516),
        MonsterPosition = Vector3.new(-5756, 172, 8771),
        QuestName = "MagmaQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$8,500\n2,000,000 Exp."
    },
    ["Fishman Warrior [Lv. 375]"] = {
        QuestPosition = Vector3.new(61123, 18, 1566),
        MonsterPosition = Vector3.new(60891, 96, 1545),
        QuestName = "FishmanQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$8,750\n3,050,000 Exp."
    },
    ["Fishman Commando [Lv. 400]"] = {
        QuestPosition = Vector3.new(61123, 18, 1566),
        MonsterPosition = Vector3.new(61955, 76, 1584),
        QuestName = "FishmanQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$9,000\n3,350,000 Exp."
    },
    ["God's Guard [Lv. 450]"] = {
        QuestPosition = Vector3.new(-4722, 845, -1949),
        MonsterPosition = Vector3.new(-4664, 931, -1737),
        QuestName = "SkyExp1Quest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$8,750\n4,250,000 Exp."
    },
    ["Shanda [Lv. 475]"] = {
        QuestPosition = Vector3.new(-7862, 5545, -381),
        MonsterPosition = Vector3.new(-7688, 5601, -441),
        QuestName = "SkyExp1Quest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$9,000\n5,000,000 Exp."
    },
    ["Royal Squad [Lv. 525]"] = {
        QuestPosition = Vector3.new(-7905, 5636, -1414),
        MonsterPosition = Vector3.new(-7633, 5637, -1428),
        QuestName = "SkyExp2Quest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$9,500\n5,800,000 Exp."
    },
    ["Royal Soldier [Lv. 550]"] = {
        QuestPosition = Vector3.new(-7905, 5636, -1414),
        MonsterPosition = Vector3.new(-7760, 5680, -1887),
        QuestName = "SkyExp2Quest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$9,750\n6,300,000 Exp."
    },
    ["Galley Pirate [Lv. 625]"] = {
        QuestPosition = Vector3.new(5258, 39, 4049),
        MonsterPosition = Vector3.new(5559, 152, 4000),
        QuestName = "FountainQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$10,000\n7,500,000 Exp."
    },
    ["Galley Captain [Lv. 650]"] = {
        QuestPosition = Vector3.new(5258, 39, 4049),
        MonsterPosition = Vector3.new(5678, 93, 4968),
        QuestName = "FountainQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$10,000\n8,500,000 Exp."
    },
    ["Ice Admiral [Lv. 700] [Boss]"] = {
        MonsterPosition = Vector3.new(1326, 43, -1340),
        SpawnPoint = "Ice",
    },
    ["Raider [Lv. 700]"] = {
        QuestPosition = Vector3.new(-428, 73, 1836),
        MonsterPosition = Vector3.new(-474, 99, 2318),
        QuestName = "Area1Quest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$10,250\n8,750,000 Exp."
    },
    ["Mercenary [Lv. 725]"] = {
        QuestPosition = Vector3.new(-428, 73, 1836),
        MonsterPosition = Vector3.new(-1095, 65, 1359),
        QuestName = "Area1Quest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$10,500\n9,750,000 Exp."
    },
    ["Swan Pirate [Lv. 775]"] = {
        QuestPosition = Vector3.new(635, 73, 919),
        MonsterPosition = Vector3.new(975, 121, 1290),
        QuestName = "Area2Quest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$10,750\n11,500,000 Exp."
    },
    ["Factory Staff [Lv. 800]"] = {
        QuestPosition = Vector3.new(635, 73, 919),
        MonsterPosition = Vector3.new(-34, 149, -167),
        QuestName = "Area2Quest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$11,000\n13,000,000 Exp."
    },
    ["Marine Lieutenant [Lv. 875]"] = {
        QuestPosition = Vector3.new(-2442, 73, -3218),
        MonsterPosition = Vector3.new(-2939, 152, -3063),
        QuestName = "MarineQuest3",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$11,250\n15,000,000 Exp."
    },
    ["Marine Captain [Lv. 900]"] = {
        QuestPosition = Vector3.new(-2442, 73, -3218),
        MonsterPosition = Vector3.new(-1838, 92, -3194),
        QuestName = "MarineQuest3",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$11,500\n16,500,000 Exp."
    },
    ["Zombie [Lv. 950]"] = {
        QuestPosition = Vector3.new(-5495, 48, -792),
        MonsterPosition = Vector3.new(-5588, 187, -846),
        QuestName = "ZombieQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$11,750\n19,000,000 Exp."
    },
    ["Vampire [Lv. 975]"] = {
        QuestPosition = Vector3.new(-5495, 48, -792),
        MonsterPosition = Vector3.new(-6059, 222, -1269),
        QuestName = "ZombieQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,000\n20,500,000 Exp."
    },
    ["Snow Trooper [Lv. 1000]"] = {
        QuestPosition = Vector3.new(610, 406, -5373),
        MonsterPosition = Vector3.new(529, 430, -5543),
        QuestName = "SnowMountainQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n22,500,000 Exp."
    },
    ["Winter Warrior [Lv. 1050]"] = {
        QuestPosition = Vector3.new(610, 406, -5373),
        MonsterPosition = Vector3.new(1264, 458, -5194),
        QuestName = "SnowMountainQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n24,000,000 Exp."
    },
    ["Lab Subordinate [Lv. 1100]"] = {
        QuestPosition = Vector3.new(-6064, 22, -4904),
        MonsterPosition = Vector3.new(-5780, 43, -4483),
        QuestName = "IceSideQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n25,500,000 Exp."
    },
    ["Horned Warrior [Lv. 1125]"] = {
        QuestPosition = Vector3.new(-6064, 22, -4904),
        MonsterPosition = Vector3.new(-6389, 28, -5870),
        QuestName = "IceSideQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n27,000,000 Exp."
    },
    ["Magma Ninja [Lv. 1175]"] = {
        QuestPosition = Vector3.new(-5430, 16, -5298),
        MonsterPosition = Vector3.new(-5429, 83, -6072),
        QuestName = "FireSideQuest",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n29,000,000 Exp."
    },
    ["Lava Pirate [Lv. 1200]"] = {
        QuestPosition = Vector3.new(-5430, 16, -5298),
        MonsterPosition = Vector3.new(-5284, 35, -4705),
        QuestName = "FireSideQuest",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n31,000,000 Exp."
    },
    ["Ship Deckhand [Lv. 1250]"] = {
        QuestPosition = Vector3.new(1043, 125, 32909),
        MonsterPosition = Vector3.new(918, 125, 32946),
        QuestName = "ShipQuest1",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n33,000,000 Exp."
    },
    ["Ship Engineer [Lv. 1275]"] = {
        QuestPosition = Vector3.new(1043, 125, 32909),
        MonsterPosition = Vector3.new(918, 125, 32946),
        QuestName = "ShipQuest1",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n35,500,000 Exp."
    },
    ["Ship Steward [Lv. 1300]"] = {
        QuestPosition = Vector3.new(971, 125, 33245),
        MonsterPosition = Vector3.new(915, 130, 33439),
        QuestName = "ShipQuest2",
        SpawnPoint = "Magma",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n37,500,000 Exp."
    },
    ["Ship Officer [Lv. 1325]"] = {
        QuestPosition = Vector3.new(971, 125, 33245),
        MonsterPosition = Vector3.new(911, 181, 33365),
        QuestName = "ShipQuest2",
        SpawnPoint = "Magma",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n39,500,000 Exp."
    },
    ["Arctic Warrior [Lv. 1350]"] = {
        QuestPosition = Vector3.new(5667, 28, -6484),
        MonsterPosition = Vector3.new(5992, 58, -6180),
        QuestName = "FrostQuest",
        SpawnPoint = "FrostQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n41,000,000 Exp."
    },
    ["Snow Lurker [Lv. 1375]"] = {
        QuestPosition = Vector3.new(5667, 28, -6484),
        MonsterPosition = Vector3.new(5518, 61, -6830),
        QuestName = "FrostQuest",
        SpawnPoint = "FrostQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n43,000,000 Exp."
    },
    ["Sea Soldier [Lv. 1425]"] = {
        QuestPosition = Vector3.new(-3053, 237, -10146),
        MonsterPosition = Vector3.new(-3028, 100, -9798),
        QuestName = "ForgottenQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$12,250\n47,000,000 Exp."
    },
    ["Water Fighter [Lv. 1450]"] = {
        QuestPosition = Vector3.new(-3053, 237, -10146),
        MonsterPosition = Vector3.new(-3229, 299, -10562),
        QuestName = "ForgottenQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$12,500\n49,000,000 Exp."
    },
    ["Jeremy [Lv. 850] [Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(2103, 449, 922),
    },
    ["Core"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(505, 143, -379),
    },
    ["Training Dummy [Lv. 1500]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(3804, 92, 270),
    },
    ["Soul Reaper [Lv. 2100] [Raid Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-9520, 316, 6657),
    },
    ["rip_indra True Form [Lv. 5000] [Raid Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-5428, 314, -2668),
    }, 
    ["Warden [Lv. 220] [Boss]"] = {
        QuestPosition = Vector3.new(5189, 4, 688),
        MonsterPosition = Vector3.new(5271.8110351563, 161.83946228027, 843.14056396484),
        QuestName = "ImpelQuest",
        SpawnPoint = "Prison",
        QuestIndex = 1,
        Reward = "Reward:\n$6,000\n850,000 Exp."
    },
    ["Chief Warden [Lv. 230] [Boss]"] = {
        QuestPosition = Vector3.new(5189, 4, 688),
        MonsterPosition = Vector3.new(5271.8110351563, 161.83946228027, 843.14056396484),
        QuestName = "ImpelQuest",
        SpawnPoint = "Prison",
        QuestIndex = 2,
        Reward = "Reward:\n$10,000\n1,000,000 Exp."
    },
    ["Swan [Lv. 240] [Boss]"] = {
        QuestPosition = Vector3.new(5189, 4, 688),
        MonsterPosition = Vector3.new(5271.8110351563, 161.83946228027, 843.14056396484),
        QuestName = "ImpelQuest",
        SpawnPoint = "Prison",
        QuestIndex = 3,
        Reward = "Reward:\n$15,000\n1,600,000 Exp."
    },
    ["The Gorilla King [Lv. 25] [Boss]"] = {
        QuestPosition = Vector3.new(-1600.2290039063, 36.8779296875, 153.01272583008),
        MonsterPosition = Vector3.new(-1127.2087402344, 74.843826293945, -511.47674560547),
        QuestName = "JungleQuest",
        SpawnPoint = "Jungle",
        QuestIndex = 3,
        Reward = "Reward:\n$2,000\n9,500 Exp."
    },
    ["Vice Admiral [Lv. 130] [Boss]"] = {
        QuestPosition = Vector3.new(-5037.822265625, 28.677835464478, 4324.57421875),
        MonsterPosition = Vector3.new(-5113.41796875, 169.67807006836, 4365.59375),
        QuestName = "MarineQuest2",
        SpawnPoint = "MarineBase",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n415,000 Exp."
    },
    ["Wysper [Lv. 500] [Boss]"] = {
        QuestPosition = Vector3.new(-7859, 5546, -379),
        MonsterPosition = Vector3.new(-8030, 5577, -609),
        QuestName = "SkyExp1Quest",
        SpawnPoint = "Sky2",
        QuestIndex = 3,
        Reward = "Reward:\n$15,000\n5,700,000 Exp."
    },
    ["Magma Admiral [Lv. 350] [Boss]"] = {
        QuestPosition = Vector3.new(-5314, 12, 8517),
        MonsterPosition = Vector3.new(-5495, 181, 8761),
        QuestName = "MagmaQuest",
        SpawnPoint = "Magma",
        QuestIndex = 3,
        Reward = "Reward:\n$15,000\n3,000,000 Exp."
    },
    ["Yeti [Lv. 110] [Boss]"] = {
        QuestPosition = Vector3.new(1386, 87, -1300),
        MonsterPosition = Vector3.new(1223, 138, -1487),
        QuestName = "SnowQuest",
        SpawnPoint = "Ice",
        QuestIndex = 3,
        Reward = "Reward:\n$10,000\n220,000 Exp."
    },
    ["Bobby [Lv. 55] [Boss]"] = {
        QuestPosition = Vector3.new(-1140.1296386719, 5.177855014801, 3830.4733886719),
        MonsterPosition = Vector3.new(-1152.2501220703, 57.187534332275, 4174.9418945313),
        QuestName = "BuggyQuest1",
        SpawnPoint = "Pirate",
        QuestIndex = 3,
        Reward = "Reward:\n$8,000\n45,000 Exp."
    },
    ["Fishman Lord [Lv. 425] [Boss]"] = {
        QuestPosition = Vector3.new(61121, 19, 1567),
        MonsterPosition = Vector3.new(61350, 31, 1128),
        QuestName = "FishmanQuest",
        SpawnPoint = "Fishman",
        QuestIndex = 3,
        Reward = "Reward:\n$15,000\n4,250,000 Exp."
    },
    ["Cyborg [Lv. 675] [Boss]"] = {
        QuestPosition = Vector3.new(5258.2646484375, 38.526931762695, 4049.0847167969),
        MonsterPosition = Vector3.new(6098.583984375, 59.527156829834, 4058.7717285156),
        QuestName = "FountainQuest",
        SpawnPoint = "Fountain",
        QuestIndex = 3,
        Reward = "Reward:\n$20,000\n10,000,000 Exp."
    },


    ["The Saw [Lv. 100] [Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-807.36236572266, 73.867568969727, 1613.8154296875),
        SpawnPoint = "Town",
    },
    ["Mob Leader [Lv. 120] [Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-2881.6022949219, 48.577754974365, 5411.3466796875),
        SpawnPoint = "Pirate",
    },
    ["Thunder God [Lv. 575] [Boss]"] = {
        QuestPosition = Vector3.new(-7905, 5636, -1412),
        MonsterPosition = Vector3.new(-7920, 5617, -2277),
        QuestName = "SkyExp2Quest",
        SpawnPoint = "Sky2",
        QuestIndex = 3, 
        Reward = "Reward:\n$20,000\n8,000,000 Exp."
    },
    ["Saber Expert [Lv. 200] [Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-1454, 30, -46),
        SpawnPoint = "Jungle",
    },
    ["Fajita [Lv. 925] [Boss]"] = {
        QuestPosition = "NoQuest",
        MonsterPosition = Vector3.new(-2313, 84, -4225),
        SpawnPoint = "Greenb",
    },
    ["Pirate Millionaire [Lv. 1500]"] = {
        QuestPosition = Vector3.new(-288, 44, 5579),
        MonsterPosition = Vector3.new(-294, 48, 5604),
        QuestName = "PiratePortQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n53,000,000 Exp."
    },
    ["Pistol Billionaire [Lv. 1525]"] = {
        QuestPosition = Vector3.new(-288, 44, 5579),
        MonsterPosition = Vector3.new(-387, 128, 5974),
        QuestName = "PiratePortQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n55,500,000 Exp."
    },
    ["Dragon Crew Warrior [Lv. 1575]"] = {
        QuestPosition = Vector3.new(5834, 51, -1104),
        MonsterPosition = Vector3.new(6212, 52, -1283),
        QuestName = "AmazonQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n58,000,000 Exp."
    },
    ["Dragon Crew Archer [Lv. 1600]"] = {
        QuestPosition = Vector3.new(5834, 51, -1104),
        MonsterPosition = Vector3.new(6617, 383, 160),
        QuestName = "AmazonQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n60,500,000 Exp."
    },
    ["Female Islander [Lv. 1625]"] = {
        QuestPosition = Vector3.new(5447, 602, 750),
        MonsterPosition = Vector3.new(5704, 825, 1016),
        QuestName = "AmazonQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n62,500,000 Exp."
    },
    ["Giant Islander [Lv. 1650]"] = {
        QuestPosition = Vector3.new(5447, 602, 750),
        MonsterPosition = Vector3.new(4944, 670, -22),
        QuestName = "AmazonQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n64,500,000 Exp."
    },
    ["Marine Commodore [Lv. 1700]"] = {
        QuestPosition = Vector3.new(2183, 29, -6739),
        MonsterPosition = Vector3.new(2622, 134, -7563),
        QuestName = "MarineTreeIsland",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n68,000,000 Exp."
    },
    ["Marine Rear Admiral [Lv. 1725]"] = {
        QuestPosition = Vector3.new(2183, 29, -6739),
        MonsterPosition = Vector3.new(3598, 161, -6984),
        QuestName = "MarineTreeIsland",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n70,500,000 Exp."
    },
    ["Fishman Raider [Lv. 1775]"] = {
        QuestPosition = Vector3.new(-10582, 332, -8759),
        MonsterPosition = Vector3.new(-10440, 332, -8377),
        QuestName = "DeepForestIsland3",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n73,000,000 Exp."
    },
    ["Fishman Captain [Lv. 1800]"] = {
        QuestPosition = Vector3.new(-10582, 332, -8759),
        MonsterPosition = Vector3.new(-11017, 332, -9077),
        QuestName = "DeepForestIsland3",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n75,500,000 Exp."
    },
    ["Forest Pirate [Lv. 1825]"] = {
        QuestPosition = Vector3.new(-13233, 332, -7627),
        MonsterPosition = Vector3.new(-13469, 412, -7816),
        QuestName = "DeepForestIsland",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n78,000,000 Exp."
    },
    ["Mythological Pirate [Lv. 1850]"] = {
        QuestPosition = Vector3.new(-13233, 332, -7627),
        MonsterPosition = Vector3.new(-13502, 578, -6983),
        QuestName = "DeepForestIsland",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$13,000\n81,000,000 Exp."
    },
    ["Jungle Pirate [Lv. 1900]"] = {
        QuestPosition = Vector3.new(-12684, 391, -9902),
        MonsterPosition = Vector3.new(-11838, 411, -10487),
        QuestName = "DeepForestIsland2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n85,000,000 Exp."
    },
    ["Musketeer Pirate [Lv. 1925]"] = {
        QuestPosition = Vector3.new(-12684, 391, -9902),
        MonsterPosition = Vector3.new(-13452, 556, -10049),
        QuestName = "DeepForestIsland2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$15,000\n87,500,000 Exp."
    }, 
    ["Reborn Skeleton [Lv. 1975]"] = {
        QuestPosition = Vector3.new(-9480, 142, 5562),
        MonsterPosition = Vector3.new(-8764, 180, 6167),
        QuestName = "HauntedQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n91,000,000 Exp."
    }, 
    ["Living Zombie [Lv. 2000]"] = {
        QuestPosition = Vector3.new(-9480, 142, 5562),
        MonsterPosition = Vector3.new(-10040, 224, 5912),
        QuestName = "HauntedQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$13,250\n93,500,000 Exp."
    }, 
    ["Demonic Soul [Lv. 2025]"] = {
        QuestPosition = Vector3.new(-9515, 172, 6078),
        MonsterPosition = Vector3.new(-9499, 272, 6250),
        QuestName = "HauntedQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,500\n96,000,000 Exp."
    }, 
    ["Posessed Mummy [Lv. 2050]"] = {
        QuestPosition = Vector3.new(-9515, 172, 6078),
        MonsterPosition = Vector3.new(-9651, 6, 6121),
        QuestName = "HauntedQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$13,750\n98,500,000 Exp."
    }, 
    ["Posessed Mummy [Lv. 2050]"] = {
        QuestPosition = Vector3.new(-9515, 172, 6078),
        MonsterPosition = Vector3.new(-9651, 6, 6121),
        QuestName = "HauntedQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$13,750\n98,500,000 Exp."
    }, 
    ["Peanut Scout [Lv. 2075]"] = {
        QuestPosition = Vector3.new(-2106, 38, -10193),
        MonsterPosition = Vector3.new(-2095, 190, -10269),
        QuestName = "NutsIslandQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,000\n100,000,000 Exp."
    }, 
    ["Peanut President [Lv. 2100]"] = {
        QuestPosition = Vector3.new(-2106, 38, -10193),
        MonsterPosition = Vector3.new(-2095, 190, -10269),
        QuestName = "NutsIslandQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,100\n102,500,000 Exp."
    }, 
    ["Ice Cream Chef [Lv. 2125]"] = {
        QuestPosition = Vector3.new(-823, 66, -10970),
        MonsterPosition = Vector3.new(-737, 212, -10976),
        QuestName = "IceCreamIslandQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,200\n105,000,000 Exp."
    }, 
    ["Ice Cream Commander [Lv. 2150]"] = {
        QuestPosition = Vector3.new(-823, 66, -10970),
        MonsterPosition = Vector3.new(-534, 174, -11225),
        QuestName = "IceCreamIslandQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,300\n107,500,000 Exp."
    }, 
    ["Cookie Crafter [Lv. 2200]"] = {
        QuestPosition = Vector3.new(-2021, 38, -12033),
        MonsterPosition = Vector3.new(-2416, 80, -12050),
        QuestName = "CakeQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,200\n110,000,000 Exp."
    }, 
    ["Cake Guard [Lv. 2225]"] = {
        QuestPosition = Vector3.new(-2021, 38, -12033),
        MonsterPosition = Vector3.new(-1563, 196, -12269),
        QuestName = "CakeQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,300\n112,500,000 Exp."
    }, 
    ["Baking Staff [Lv. 2250]"] = {
        QuestPosition = Vector3.new(-1926, 40, -12841),
        MonsterPosition = Vector3.new(-1681, 144, -12578),
        QuestName = "CakeQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,400\n115,000,000 Exp."
    }, 
    ["Head Baker [Lv. 2275]"] = {
        QuestPosition = Vector3.new(-1926, 40, -12841),
        MonsterPosition = Vector3.new(-2308, 106, -12926),
        QuestName = "CakeQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,500\n117,500,000 Exp."
    },
    ["Cocoa Warrior [Lv. 2300]"] = {
        QuestPosition = Vector3.new(233, 29, -12200),
        MonsterPosition = Vector3.new(82, 73, -12318),
        QuestName = "ChocQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,600\n120,000,000 Exp."
    },
    ["Chocolate Bar Battler [Lv. 2325]"] = {
        QuestPosition = Vector3.new(233, 29, -12200),
        MonsterPosition = Vector3.new(618, 79, -12571),
        QuestName = "ChocQuest1",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,700\n122,500,000 Exp."
    }, 
    ["Sweet Thief [Lv. 2350]"] = {
        QuestPosition = Vector3.new(149, 25, -12775),
        MonsterPosition = Vector3.new(-18, 66, -12690),
        QuestName = "ChocQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$14,800\n125,000,000 Exp."
    }, 
    ["Candy Rebel [Lv. 2375]"] = {
        QuestPosition = Vector3.new(149, 25, -12775),
        MonsterPosition = Vector3.new(133, 77, -12876),
        QuestName = "ChocQuest2",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 2,
        Reward = "Reward:\n$14,900\n127,500,000 Exp."
    }, 
    ["Cake Queen [Lv. 2175] [Boss]"] = {
        QuestPosition = Vector3.new(-823, 66, -10963),
        MonsterPosition = Vector3.new(-721, 382, -11005),
        QuestName = "IceCreamIslandQuest",
        SpawnPoint = "IceCream",
        QuestIndex = 3,
        Reward = "Reward:\n$30,000\n112,500,000 Exp."
    },
    ["Kilo Admiral [Lv. 1750] [Boss]"] = {
        QuestPosition = Vector3.new(2181, 29, -6743),
        MonsterPosition = Vector3.new(2855, 424, -7236),
        QuestName = "MarineTreeIsland",
        SpawnPoint = "GreatTree",
        QuestIndex = 3,
        Reward = "Reward:\n$35,000\n78,000,000 Exp."
    },
    ["Stone [Lv. 1550] [Boss]"] = {
        QuestPosition = Vector3.new(-289, 44, 5579),
        MonsterPosition = Vector3.new(-1144, 40, 6785),
        QuestName = "PiratePortQuest",
        SpawnPoint = "Default",
        QuestIndex = 3,
        Reward = "Reward:\n$25,000\n60,000,000 Exp."
    },
    ["Captain Elephant [Lv. 1875] [Boss]"] = {
        QuestPosition = Vector3.new(-13231, 332, -7626),
        MonsterPosition = Vector3.new(-13384, 367, -8539),
        QuestName = "DeepForestIsland",
        SpawnPoint = "BigMansion",
        QuestIndex = 3,
        Reward = "Reward:\n$40,000\n90,000,000 Exp."
    },
    ["Longma [Lv. 2000] [Boss]"] = {
        MonsterPosition = Vector3.new(-10183, 375, -9528),
        QuestPosition = "NoQuest",
        SpawnPoint = "PineappleTown",
    },
    ["Cursed Skeleton Boss [Lv. 2025] [Boss]"] = {
        MonsterPosition = Vector3.new(-12291, 599, -6551),
        QuestPosition = "NoQuest",
        SpawnPoint = "BigMansion",
    },
    ["Beautiful Pirate [Lv. 1950] [Boss]"] = {
        MonsterPosition = Vector3.new(5315, 23, -39),
        QuestPosition = "NoQuest",
        SpawnPoint = "BigMansion",
    },
    ["Island Empress [Lv. 1675] [Boss]"] = {
        QuestPosition = Vector3.new(5447, 602, 752),
        MonsterPosition = Vector3.new(5770, 661, 141),
        QuestName = "AmazonQuest2",
        SpawnPoint = "Hydra1",
        QuestIndex = 1,
        Reward = "Reward:\n$30,000\n112,500,000 Exp."
    },
    ["Ghost [Lv. 1500]"] = {
        MonsterPosition = Vector3.new(5229, 96, 1177),
        QuestPosition = "NoQuest",
        SpawnPoint = "Hydra1",
    },
    ["Greybeard [Lv. 750] [Raid Boss]"] = {
        MonsterPosition = Vector3.new(-4769, 5, 4296),
        QuestPosition = "NoQuest",
        SpawnPoint = "MarineBase",
    },
    ["Blackbeard [Lv. 1000] [Raid Boss]"] = {
        MonsterPosition = Vector3.new(3778, 15, -3499),
        QuestPosition = "NoQuest",
        SpawnPoint = "Bar",
    },






--  edit 1

--[[



                    




                    
                   
                    elseif _G.selectedboss == "Thunder God [Lv. 575] [Boss]" then -- Enel
                        _G.QUESTPOSBOSS = CFrame.new(-7905.1743164063, 5635.9887695313, -1411.2357177734)
                        _G.PUKPOSBOSS = CFrame.new(-7995.958984375, 5756.0576171875, -2084.2373046875)
                        _G.NAMEMONBOSS = "Thunder God [Lv. 575] [Boss]"
                        _G.QUESTNAMEBOSS = "SkyExp2Quest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$20,000\n5,800,000 Exp."
                    elseif _G.selectedboss == "Jeremy [Lv. 850] [Boss]" then -- jeramy
                        _G.QUESTPOSBOSS = CFrame.new(635.98907470703, 73.096328735352, 918.51379394531)
                        _G.PUKPOSBOSS = CFrame.new(2110.5737304688, 448.95666503906, 573.408325195311)
                        _G.NAMEMONBOSS = "Jeremy [Lv. 850] [Boss]"
                        _G.QUESTNAMEBOSS = "Area2Quest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$25,000\n11,500,000 Exp."
                    elseif _G.selectedboss == "Diamond [Lv. 750] [Boss]" then -- diamond
                        _G.QUESTPOSBOSS = CFrame.new(-428.22674560547, 72.996322631836, 1836.9592285156)
                        _G.PUKPOSBOSS = CFrame.new(-1743.6767578125, 198.70874023438, -58.437126159668)
                        _G.NAMEMONBOSS = "Diamond [Lv. 750] [Boss]"
                        _G.QUESTNAMEBOSS = "Area1Quest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$25,000\n9,000,000 Exp."
                    elseif _G.selectedboss == "Fajita [Lv. 925] [Boss]" then -- fujita
                        _G.QUESTPOSBOSS = CFrame.new(-2442.5795898438, 73.041854858398, -3216.841796875)
                        _G.PUKPOSBOSS = CFrame.new(-2336.7504882813, 73.621597290039, -4272.4375)
                        _G.NAMEMONBOSS = "Fajita [Lv. 925] [Boss]"
                        _G.QUESTNAMEBOSS = "MarineQuest3"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$25,000\n15,000,000 Exp."
                    elseif _G.selectedboss == "Cursed Captain [Lv. 1325] [Raid Boss]" then -- Cursed
                        _G.PUKPOSBOSS = CFrame.new(877.60272216797, 181.46482849121, 33301.6640625)
                        _G.NAMEMONBOSS = "Cursed Captain [Lv. 1325] [Raid Boss]"
                    elseif _G.selectedboss == "Tide Keeper [Lv. 1475] [Boss]" then -- Tide
                        _G.QUESTPOSBOSS = CFrame.new(-3053.734375, 236.87208557129, -10145.025390625)
                        _G.PUKPOSBOSS = CFrame.new(-3795.359375, 105.88877105713, -11407.432617188)
                        _G.NAMEMONBOSS = "Tide Keeper [Lv. 1475] [Boss]"
                        _G.QUESTNAMEBOSS = "ForgottenQuest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$12,500\n38,000,000 Exp."
                    elseif _G.selectedboss == "Awakened Ice Admiral [Lv. 1400] [Boss]" then -- awake ice
                        _G.QUESTPOSBOSS = CFrame.new(5668.0419921875, 28.202545166016, -6483.861328125)
                        _G.PUKPOSBOSS = CFrame.new(6400.8500976563, 340.43240356445, -6896.9921875)
                        _G.NAMEMONBOSS = "Awakened Ice Admiral [Lv. 1400] [Boss]"
                        _G.QUESTNAMEBOSS = "FrostQuest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$20,000\n36,000,000 Exp."
                    elseif _G.selectedboss == "Smoke Admiral [Lv. 1150] [Boss]" then -- Smoke Admiral
                        _G.QUESTPOSBOSS = CFrame.new(-6062.8588867188, 15.977560997009, -4904.6127929688)
                        _G.PUKPOSBOSS = CFrame.new(-5089.7158203125, 188.50866699219, -5346.1313476563)
                        _G.NAMEMONBOSS = "Smoke Admiral [Lv. 1150] [Boss]"
                        _G.QUESTNAMEBOSS = "IceSideQuest"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$20,000\n25,000,000 Exp."
                    elseif _G.selectedboss == "Don Swan [Lv. 1000] [Boss]" then -- Cursed
                        _G.PUKPOSBOSS = CFrame.new(2284.3132324219, 15.177842140198, 879.32080078125)
                        _G.NAMEMONBOSS = "Don Swan [Lv. 1000] [Boss]"
                    elseif _G.selectedboss == "Saber Expert [Lv. 200] [Boss]" then -- Cursed
                        _G.PUKPOSBOSS = CFrame.new(-1419.4379882813, 47.852024078369, 12.422969818115)
                        _G.NAMEMONBOSS = "Saber Expert [Lv. 200] [Boss]"
                    elseif _G.selectedboss == "Order [Lv. 1250] [Raid Boss]" then -- Cursed
                       _G.PUKPOSBOSS = CFrame.new(-6408.0727539063, 305.88467407227, -4954.5786132813)
                        _G.NAMEMONBOSS = "Order [Lv. 1250] [Raid Boss]"
                        
                        
                        
                        
                        
                        
                        
                        

                    elseif _G.selectedboss == "Island Empress [Lv. 1675] [Boss]" then -- elephant
                        _G.QUESTPOSBOSS = CFrame.new(5447.00390625, 601.94689941406, 751.08575439453)
                        _G.PUKPOSBOSS = CFrame.new(5822.9213867188, 662.63671875, 206.12593078613)
                        _G.NAMEMONBOSS = "Island Empress [Lv. 1675] [Boss]"
                        _G.QUESTNAMEBOSS = "AmazonQuest2"
                        _G.QUESTNUMBOSS = 3
                        _G.REWARDBOSS = "Reward:\n$30,000\n52,000,000 Exp."
                    elseif _G.selectedboss == "rip_indra True Form [Lv. 5000] [Raid Boss]" then -- rip indra
                        _G.PUKPOSBOSS = CFrame.new(-5333.3090820313, 424.32867431641, -2667.6750488281)
                        _G.NAMEMONBOSS = "rip_indra True Form [Lv. 5000] [Raid Boss]"
                    elseif _G.selectedboss == "Beautiful Pirate [Lv. 1950] [Boss]" then -- longma
                        _G.PUKPOSBOSS = CFrame.new(5313.85889, 22.5622349, -124.438652, -0.997363091, 8.28968965e-08, -0.0725729316, 8.24298425e-08, 1, 9.43069001e-09, 0.0725729316, 3.42364692e-09, -0.997363091)
                        _G.NAMEMONBOSS = "Beautiful Pirate [Lv. 1950] [Boss]"
                    elseif _G.selectedboss == "Cake Queen [Lv. 2175] [Boss]" then -- Cake Queen
                        _G.QUESTPOSBOSS = CFrame.new(-820, 66, -10965)
                        _G.PUKPOSBOSS = CFrame.new(-726, 380, -10974)
                        _G.NAMEMONBOSS = "Cake Queen [Lv. 2175] [Boss]"
                        _G.QUESTNAMEBOSS = "IceCreamIslandQuest"
                        _G.QUESTNUMBOSS = 3
                    end

]]



-- Cursed Captain [Lv. 1325] [Raid Boss]
}

IslandTable = {}
for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates:GetChildren()) do
    table.insert(IslandTable,v.Name)
end
function setspawnat(Name,checkone)
    if getgenv().SaveSettings["SelectedNextGenTeleport"] == "Tween" then
        if game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == Name and game:GetService("Players").LocalPlayer.Data.LastSpawnPoint.Value == Name then
            return true
        else
            Tween(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[Name].Part.Position)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetLastSpawnPoint",Name)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
        end
    else
        if checkone and game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == Name then
            return true 
        elseif game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == Name and game:GetService("Players").LocalPlayer.Data.LastSpawnPoint.Value == Name then
            return true
        elseif game.placeId == 4442272183 and getdistance(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[Name].Part.Position) < 2500 then
            return true
        elseif game.placeId == 2753915549 and getdistance(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[Name].Part.Position) < 700 then
            return true
        elseif game.placeId == 7449423635 and getdistance(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[Name].Part.Position) < 3000 then
            return true
        end
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
        repeat
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[Name].Part.CFrame
            task.wait()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetLastSpawnPoint",Name)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
        until (game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == Name and game:GetService("Players").LocalPlayer.Data.LastSpawnPoint.Value == Name)
        wait(5)
    end
end
function sp(inputstr, sep)
    if sep == nil then
            sep = "%s"
    end
    local t={}
    for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
            table.insert(t, str)
    end
    return t
end
function getdistance(Pos)
    return (Pos - RootPart.Position).Magnitude 
end
function getdistance2(Pos,Pos2)
    return (Pos - Pos2).Magnitude 
end
function GetToolFromTip(Tip,GetName)
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == Tip then
            if GetName then
                return v.Name
            else
                return v
            end
        end
    end
    local v = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") do
        if v:IsA("Tool") and v.ToolTip == Tip then
            if GetName then
                return v.Name
            else
                return v
            end
        end
    end
end
function getnear(TheMagnitude)
        local PlayerList = {}
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                if getgenv().SaveSettings["Ignoreaimbot"].Friend then
                    if not v:IsFriendsWith(game.Players.LocalPlayer.UserId) then
                        table.insert(PlayerList,v)
                    end
                elseif getgenv().SaveSettings["Ignoreaimbot"].Team then
                    if v.Team ~= game.Players.LocalPlayer.Team then
                        table.insert(PlayerList,v)
                    end
                elseif getgenv().SaveSettings["Ignoreaimbot"].Allies then
                    if not game:GetService("Players").LocalPlayer.PlayerGui.Main.Allies.Container.Allies.ScrollingFrame.Frame:FindFirstChild(v.Name) then
                        table.insert(PlayerList,v)
                    end
                else
                    table.insert(PlayerList,v)
                end
            end
        end
        local Nearcheck = {}
        for i,v in pairs(PlayerList) do
            if v.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= TheMagnitude then
               table.insert(Nearcheck,v)
            end
        end
        for i,v in pairs(Nearcheck) do
            for ii,vv in pairs(Nearcheck) do
                if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > (vv.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then
                   table.remove(Nearcheck,i)
                end
            end
        end
        if #Nearcheck == 1 then
           return unpack(Nearcheck)
        elseif #Nearcheck == 2 then
            if (Nearcheck[1].Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > (Nearcheck[2].Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then
                return Nearcheck[2]
            else
                return Nearcheck[1]
            end
        else
            for i,v in pairs(Nearcheck) do
                for ii,vv in pairs(Nearcheck) do
                    if math.floor((v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude) > math.floor((vv.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude) then
                       table.remove(Nearcheck,i)
                    end
                end
            end
            if #Nearcheck == 2 then
                if (Nearcheck[1].Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > (Nearcheck[2].Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then
                    return Nearcheck[2]
                else
                    return Nearcheck[1]
                end
            else
                return Nearcheck[1]
            end
        end
    return "None"
end
function comma_value(amount)
    local formatted = amount
    while true do  
      formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
      if (k==0) then
        break
      end
    end
    return formatted
end
function checkcoldown(Weapon,Skill)
    if not game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills:FindFirstChild(Weapon) then
        return false 
    end
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills:GetChildren()) do
        if v.Name == Weapon then
            if v:FindFirstChild(Skill) and v[Skill].Cooldown.AbsoluteSize.X == 0 and string.find(tostring(v[Skill].Title.TextColor3),"1, 1, 1") then
                return true
            else
                return false
            end
        end
    end
    return true
end
function EquipWeapon(Tools)
    for i,v in pairs(Char:GetChildren()) do
        if v:IsA("Tool") and (v.ToolTip == Tools or v.Name == Tools) then
            return
        end
    end
	if game.Players.LocalPlayer.Backpack:FindFirstChild(Tools) then
		local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Tools)
		wait()
		game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
	elseif GetToolFromTip(Tools) then
		game.Players.LocalPlayer.Character.Humanoid:EquipTool(GetToolFromTip(Tools))
	end
end
function BringMob(mob)
    for i,v in pairs(Workspace.Enemies:GetChildren()) do
        if v.Name == mob.Name and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0  and getdistance(v.HumanoidRootPart.Position) <= 470 then
            if isnetworkowner(v.HumanoidRootPart) then
                v.HumanoidRootPart.Size = Vector3.new(70,70,70)
                local CFrameTo = mob.HumanoidRootPart.Position
                v.HumanoidRootPart.CFrame = CFrame.new(CFrameTo)
                v.Humanoid.PlatformStand = true
                v.Humanoid.Sit = true					
                v.HumanoidRootPart.CanCollide = false
                if syn then
                    v.Humanoid:ChangeState(11) 
                end
            end
        end
    end
end
function findmob(Name,quest,requirelevel)
    if game:GetService("Workspace").Enemies:FindFirstChild(Name) and game:GetService("Workspace").Enemies[Name]:FindFirstChild("Humanoid") then
        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if v.Name == Name and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v 
            end
        end
        -- return game:GetService("Workspace").Enemies:FindFirstChild(Name)
    end
    if game:GetService("ReplicatedStorage"):FindFirstChild(Name) and game:GetService("ReplicatedStorage")[Name]:FindFirstChild("Humanoid") and game:GetService("ReplicatedStorage")[Name].Humanoid.Health > 0 then
        return game:GetService("ReplicatedStorage"):FindFirstChild(Name)
    end
    return "Undefind"
end
function getmastery(Weapon)
    if Weapon == "Gun" then
        for i,v in pairs(Plr.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Gun" then
                return v.Level.Value 
            end
        end
        for i,v in pairs(Char:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Gun" then
                return v.Level.Value 
            end
        end
        return 0
    elseif Weapon == "DevilFruit" then
        for i,v in pairs(Plr.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
                return v.Level.Value 
            end
        end
        for i,v in pairs(Char:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
                return v.Level.Value 
            end
        end
        return 0
    end
end

function killmob(MobName)
    local Mob = findmob(MobName)
    if Mob ~= "Undefind" then
        if Mob.Parent == game:GetService("Workspace").Enemies then
            if _G.AutoFarmgun and getmastery("Gun") <= getgenv().SaveSettings["lockmastery"] then
                local dis = getdistance(Mob.HumanoidRootPart.Position)
                if dis < 100 then
                    if Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth <= getgenv().SaveSettings["Healthpercen"] then
                        repeat
                            task.wait()
                            EquipWeapon("Gun")
                            _G.AimBotPosition = Mob.HumanoidRootPart.Position
                            _G.AimBotRootPart = Mob.HumanoidRootPart
                            _G.MonsterHealth = math.floor(Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth)
                            game:GetService'VirtualUser':CaptureController()
                            game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                            RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().SaveSettings["DistanceY"],getgenv().SaveSettings["DistanceZ"])
                            BringMob(Mob)
                            _G.UseSkillGun = true
                        until Mob.Parent == nil or Mob.Humanoid.Health <= 0 or not _G.AutoFarmgun or game.Players.LocalPlayer.Character.Humanoid.Health <= 0
                        _G.UseSkillGun = false
                    else
                        _G.MonsterHealth = math.floor(Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth)
                        _G.UseSkillGun = false
                        RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,25,0)
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    end
                    BringMob(Mob)
                else 
                    Tween(Mob.HumanoidRootPart.Position)
                end
            elseif _G.AutoFarmBloxFruit and getmastery("DevilFruit") <= getgenv().SaveSettings["lockmastery"] then
                local dis = getdistance(Mob.HumanoidRootPart.Position)
                if dis < 100 then
                    if Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth <= getgenv().SaveSettings["Healthpercen"] then
                        repeat
                            _G.MonsterHealth = math.floor(Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth)
                            task.wait()
                            EquipWeapon("Blox Fruit")
                            _G.AimBotPosition = Mob.HumanoidRootPart.Position
                            _G.AimBotRootPart = Mob.HumanoidRootPart
                            _G.UseSkillBloxFruit = true
                            RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().SaveSettings["DistanceY"],getgenv().SaveSettings["DistanceZ"])
                            BringMob(Mob)
                        until Mob.Parent == nil or Mob.Humanoid.Health <= 0 or not _G.AutoFarmBloxFruit or game.Players.LocalPlayer.Character.Humanoid.Health <= 0
                        _G.UseSkillBloxFruit = false
                    else
                        _G.MonsterHealth = math.floor(Mob.Humanoid.Health * 100 / Mob.Humanoid.MaxHealth)
                        RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,25,0)
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    end
                    _G.UseSkillBloxFruit = false
                    BringMob(Mob)
                else
                    Tween(Mob.HumanoidRootPart.Position)
                end
            else
                _G.UseSkillBloxFruit = false
                _G.UseSkillGun = false
                local dis = getdistance(Mob.HumanoidRootPart.Position)
                if dis < 100 then
                    RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,25,0)
                    BringMob(Mob)
                else 
                    Tween(Mob.HumanoidRootPart.Position)
                end
                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                Attack()
            end
        else
            Tween(MobData[MobName].MonsterPosition)
        end
    else
        Tween(MobData[MobName].MonsterPosition)
    end
end
function killboss(MobName)
    local Mob = findmob(MobName)
    if Mob ~= "Undefind" then
        if Mob.Parent == game:GetService("Workspace").Enemies then
            local dis = getdistance(Mob.HumanoidRootPart.Position)
            if dis < 100 then
                Attack()
                RootPart.CFrame = Mob.HumanoidRootPart.CFrame * CFrame.new(0,25,0)
                BringMob(Mob)
            else 
                Tween(Mob.HumanoidRootPart.Position)
            end
        else
            Tween(MobData[MobName].MonsterPosition)
        end
    else
        Tween(MobData[MobName].MonsterPosition)
    end
end
function findchest()
    for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v:IsA("Part") and string.find(v.Name,"Chest") then
            return v
        end
    end
    return "Undefind"
end
function acceptquest(QuestName,QuestIndex)
    local args = {
        [1] = "StartQuest",
        [2] = QuestName,
        [3] = QuestIndex
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end
function cancelquest()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
end
function Modify(Type)
    local Data = {
        Dodge = function(func)
            for i,v in next, getupvalues(func) do
                if tostring(v) == "0.4" then
                    repeat wait(.1)
                        setupvalue(func,i,0)
                    until game.Players.LocalPlayer.Character.Humanoid.Health <= 0
                end
            end
        end,
        Soru = function(func)
            for i,v in next, getupvalues(func) do
                if typeof(v) == "table"  then
                    repeat wait(.1)
                        v.LastUse = 0
                    until game.Players.LocalPlayer.Character.Humanoid.Health <= 0
                end
            end
        end,
        Geppo = function(func)
            repeat wait(.5)
                setupvalue(func,9,0)
            until game.Players.LocalPlayer.Character.Humanoid.Health <= 0 
        end,
    }
    for i,v in pairs(Type) do
        if not game.Players.LocalPlayer.Character:FindFirstChild(v) then return end
    end
    for i,v in next, getgc() do
        if typeof(v) == "function" then
            for _,SCRIPT_NAME in pairs(Type) do
                local Script = game.Players.LocalPlayer.Character:FindFirstChild(SCRIPT_NAME)
                if getfenv(v).script == Script then
                    spawn(function()
                        rawget(Data,SCRIPT_NAME)(v)
                    end)
                end
            end
        end
    end
end
function checkalivequest()
    return game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible 
end
function checkQuest(Name)
    if not getgenv().SaveSettings["AutoQuest"] then
        return true
    end
    if checkalivequest() then
        if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestReward.Title.Text == MobData[Name].Reward then
            return true
        else
            cancelquest()
        end
    else
        if getdistance(MobData[Name].QuestPosition) < 10 then
            wait(0.3)
            if getdistance(MobData[Name].QuestPosition) < 10 and Hum.Health > 0 then
                acceptquest(MobData[Name].QuestName,MobData[Name].QuestIndex)
            end
        else
            Tween(MobData[Name].QuestPosition)
        end
    end
end












local Window = Library:CreateWindow({
    Title = 'Deity Hub Next Generation - '..os.date("%A")..", "..os.date("%B").." "..os.date("%d") ..", ".. os.date("%Y")..".",
    Center = true, 
    AutoShow = true,
})
local Tabs = {
    MainTab = Window:AddTab('Main'), 
    AutomaticsTab = Window:AddTab('Automatics'), 
    Automatics2Tab = Window:AddTab('Weapon'), 
    PlayerTab = Window:AddTab('Player'), 
    TravelTab = Window:AddTab('Travel'), 
    DungeonTab = Window:AddTab('Etcetara'), 
    MiscTab = Window:AddTab('Misc'), 
    ['UI Settings'] = Window:AddTab('Settings'),
}
repeat
    wait()
until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") and game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Visible and tostring(game:GetService('Players').LocalPlayer.Team) == "nil" then
    if tostring(game:GetService('Players').LocalPlayer.Team) == "nil" then
        Library:Notify("Auto join 'Pirates' teams.", 3)
        selectteam("Pirates")
        -- toggleuilib()
    end
end
if game:GetService("Players").LocalPlayer.Team == nil then
    repeat
        pcall(function()
            selectteam("Pirates")
        end)
        wait()
    until game:GetService("Players").LocalPlayer.Team ~= nil
    Library:Notify("Auto join 'Pirates' teams.", 3)
end

local lastupdate = "09/17/2022"
Library:Notify("Last Update : " .. lastupdate, 5)
Library:Notify("Loadded | Blox Fruit", 5)
Library:Notify("Succesfully !!", 5)













local MainSection = Tabs.MainTab:AddLeftGroupbox('[ Main ]')
local BossSection = Tabs.MainTab:AddLeftGroupbox('[ Auto Boss ]')
local MasterySection = Tabs.MainTab:AddLeftGroupbox('[ Mastery ]')

local SettingSection = Tabs.MainTab:AddRightGroupbox('[ Setting ]')
local StatsSection = Tabs.MainTab:AddRightGroupbox('[ Auto Stats ]')
local AutoSkillSection = Tabs.MainTab:AddRightGroupbox('[ Auto Skill Setting ]')

local FightingStyleSection = Tabs.AutomaticsTab:AddRightGroupbox('[ Fighting Style ]')
local AutoFarmItemSection = Tabs.AutomaticsTab:AddLeftGroupbox('[ Auto Farm Item ]')
local settingitemfarmSection = Tabs.AutomaticsTab:AddLeftGroupbox('[ Settings ]')
local EventSection = Tabs.AutomaticsTab:AddRightGroupbox('[ Event ]')


local autoweaponTab = Tabs.Automatics2Tab:AddLeftGroupbox('[ Auto Get Sword ]')
local autoGunTab = Tabs.Automatics2Tab:AddLeftGroupbox('[ Auto Get Gun ]')
local autoaccesTab = Tabs.Automatics2Tab:AddLeftGroupbox('[ Auto Get Accessory ]')
local settingautoweaponTab = Tabs.Automatics2Tab:AddLeftGroupbox('[ Setting ]')

local automisc = Tabs.Automatics2Tab:AddRightTabbox()
local otherautoSection = automisc:AddTab('[ Automatics ]')
local LegendarySword = automisc:AddTab('[ Automatics #2 ]')

local DualCursedSwordSection = Tabs.Automatics2Tab:AddRightGroupbox('[ Dual Cursed Sword ]')
local SoulGuitarSection = Tabs.Automatics2Tab:AddRightGroupbox('[ Soul Guitar ]')




local PlayersSection = Tabs.PlayerTab:AddLeftGroupbox('[ Destroy Player ]')
local VisualSection = Tabs.PlayerTab:AddLeftGroupbox('[ Visual ]')
local playersettingSection = Tabs.PlayerTab:AddRightGroupbox('[ Setting ]')
local aimbotSection = Tabs.PlayerTab:AddLeftGroupbox('[ Aim Bot ]')

local huntandmodify = Tabs.PlayerTab:AddRightTabbox()
local ModifySection = huntandmodify:AddTab('Modify')
local PlayerHunt = huntandmodify:AddTab('Bounty')



local nocooldownSection = Tabs.PlayerTab:AddLeftGroupbox('[ No Cooldown Ability ]')
local autocomboSection = Tabs.PlayerTab:AddRightGroupbox('[ Auto Combo ]')
local TeamSection = Tabs.PlayerTab:AddLeftGroupbox('[ Teams ]')

local TeleportIslandSection = Tabs.TravelTab:AddLeftGroupbox('[ Teleport Island ]')
local worldSection = Tabs.TravelTab:AddRightGroupbox('[ World Teleport ]')



local DungeonSection = Tabs.DungeonTab:AddLeftGroupbox('[ Dungeon ]')
local DungeonSettingSection = Tabs.DungeonTab:AddRightGroupbox('[ Dungeon Control ]')

local DevilFruitSection = Tabs.MiscTab:AddLeftGroupbox('[ Devil Fruit ]')
local StealBoatSection = Tabs.MiscTab:AddLeftGroupbox('[ Steal Boat ]')

local GenerateImageSection = Tabs.MiscTab:AddLeftGroupbox('[ Generate Image ]')

local Shop = Tabs.MiscTab:AddRightTabbox()
local CombatSection = Shop:AddTab('Combat')
local GunSection = Shop:AddTab('Gun')
local SwordSection = Shop:AddTab('Sword')
local FragmentSection = Tabs.MiscTab:AddRightGroupbox('[ Fragment ]')


-- main tab

MainSection:AddToggle('AutoFarmLevel', {
    Text = 'Automatic Level Farm',
    Default = getgenv().SaveSettings["Auto Farm Level"], 
})
Toggles.AutoFarmLevel:OnChanged(function()
    if Toggles.AutoFarmLevel.Value == true then
        getgenv().SaveSettings["Auto Farm Level"] = true
        Save()
    elseif Toggles.AutoFarmLevel.Value == false then
        getgenv().SaveSettings["Auto Farm Level"] = false
        Save()
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
MainSection:AddToggle('AutoDressrosa', {
    Text = 'Auto Dressrosa',
    Default = getgenv().SaveSettings["AutoDressrosa"], 
})
Toggles.AutoDressrosa:OnChanged(function()
    if Toggles.AutoDressrosa.Value == true then
        getgenv().SaveSettings["AutoDressrosa"] = true
        Save()
    elseif Toggles.AutoDressrosa.Value == false then
        getgenv().SaveSettings["AutoDressrosa"] = false
        Save()
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
MainSection:AddToggle('AutoZou', {
    Text = 'Auto Zou',
    Default = getgenv().SaveSettings["AutoZou"], 
})
Toggles.AutoZou:OnChanged(function()
    if Toggles.AutoZou.Value == true then
        getgenv().SaveSettings["AutoZou"] = true
        Save()
    elseif Toggles.AutoZou.Value == false then
        getgenv().SaveSettings["AutoZou"] = false
        Save()
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
MainSection:AddButton('Redeem X2 EXP Code', function()
    X2Code = {
        "EXP_5B",
        "Sub2Fer999",
        "Enyu_is_Pro",
        "Magicbus",
        "JCWK",
        "Starcodeheo",
        "Bluxxy",
        "SUB2GAMERROBOT_EXP1",
        "Sub2NoobMaster123",
        "Sub2Daigrock",
        "Axiore",
        "TantaiGaming",
        "StrawHatMaine",
        "Sub2OfficialNoobie",
        "TheGreatAce"
    }
    for i,v in pairs(X2Code) do
        game:GetService("ReplicatedStorage").Remotes.Redeem:InvokeServer(v)
    end
end)

-- setting tab

SettingSection:AddToggle('AutoQuest', {
    Text = 'Auto Quest',
    Default = getgenv().SaveSettings["AutoQuest"], 
})
Toggles.AutoQuest:OnChanged(function()
    if Toggles.AutoQuest.Value == true then
        getgenv().SaveSettings["AutoQuest"] = true
        Save()
    elseif Toggles.AutoQuest.Value == false then
        getgenv().SaveSettings["AutoQuest"] = false
        Save()
    end
end)
SettingSection:AddToggle('AutoBuso', {
    Text = 'Auto Active Buso',
    Default = getgenv().SaveSettings["AutoBuso"], 
})
Toggles.AutoBuso:OnChanged(function()
    if Toggles.AutoBuso.Value == true then
        getgenv().SaveSettings["AutoBuso"] = true
        Save()
    elseif Toggles.AutoBuso.Value == false then
        getgenv().SaveSettings["AutoBuso"] = false
        Save()
    end
end)
SettingSection:AddToggle('FastAttack', {
    Text = 'Fast Attack',
    Default = getgenv().SaveSettings["FastAttack"], 
})
Toggles.FastAttack:OnChanged(function()
    if Toggles.FastAttack.Value == true then
        getgenv().SaveSettings["FastAttack"] = true
        Save()
    elseif Toggles.FastAttack.Value == false then
        getgenv().SaveSettings["FastAttack"] = false
        Save()
    end
end)
SettingSection:AddToggle('BigHitbox', {
    Text = 'Large Hitbox',
    Default = getgenv().SaveSettings["BigHitbox"], 
})
Toggles.BigHitbox:OnChanged(function()
    if Toggles.BigHitbox.Value == true then
        getgenv().SaveSettings["BigHitbox"] = true
        Save()
    elseif Toggles.BigHitbox.Value == false then
        getgenv().SaveSettings["BigHitbox"] = false
        Save()
    end
end)
SettingSection:AddDropdown('SelectedWeapon', {
        Values = {"Melee","Sword","Gun","BloxFruit"},
        Default = getindex({"Melee","Sword","Gun","BloxFruit"},getgenv().SaveSettings["WeaponSelected"]),
        Multi = false,
        Text = 'Select Weapon',
    })
Options.SelectedWeapon:OnChanged(function()
	getgenv().SaveSettings["WeaponSelected"] = Options.SelectedWeapon.Value
	Save()
end)
SettingSection:AddDropdown('FarmMode', {
        Values = {"Auto Update","Next Generation","Custom"},
        Default = getindex({"Auto Update","Next Generation","Custom"},getgenv().SaveSettings["FarmMode"]),
        Multi = false,
        Text = 'Select Farm Mode',
    })
Options.FarmMode:OnChanged(function()
	getgenv().SaveSettings["FarmMode"] = Options.FarmMode.Value
	Save()
end)
SettingSection:AddInput('CustomLevelFarm', {
    Default = getgenv().SaveSettings["CustomLevelFarm"],
    Numeric = true,
    Finished = true,

    Text = 'Custom Level Farm',
})

Options.CustomLevelFarm:OnChanged(function()
    getgenv().SaveSettings["CustomLevelFarm"] = Options.CustomLevelFarm.Value
    Save()
end)




-- stats tab





StatsSection:AddToggle('AutoMelee', {
    Text = 'Melee',
    Default = getgenv().SaveSettings["Melee"], 
})
Toggles.AutoMelee:OnChanged(function()
    if Toggles.AutoMelee.Value == true then
        getgenv().SaveSettings["Melee"] = true
        Save()
    elseif Toggles.AutoMelee.Value == false then
        getgenv().SaveSettings["Melee"] = false
        Save()
    end
end)
StatsSection:AddToggle('AutoDefense', {
    Text = 'Defense',
    Default = getgenv().SaveSettings["Defense"], 
})
Toggles.AutoDefense:OnChanged(function()
    if Toggles.AutoDefense.Value == true then
        getgenv().SaveSettings["Defense"] = true
        Save()
    elseif Toggles.AutoDefense.Value == false then
        getgenv().SaveSettings["Defense"] = false
        Save()
    end
end)
StatsSection:AddToggle('AutoSword', {
    Text = 'Sword',
    Default = getgenv().SaveSettings["Sword"], 
})
Toggles.AutoSword:OnChanged(function()
    if Toggles.AutoSword.Value == true then
        getgenv().SaveSettings["Sword"] = true
        Save()
    elseif Toggles.AutoSword.Value == false then
        getgenv().SaveSettings["Sword"] = false
        Save()
    end
end)
StatsSection:AddToggle('AutoGun', {
    Text = 'Gun',
    Default = getgenv().SaveSettings["Gun"], 
})
Toggles.AutoGun:OnChanged(function()
    if Toggles.AutoGun.Value == true then
        getgenv().SaveSettings["Gun"] = true
        Save()
    elseif Toggles.AutoGun.Value == false then
        getgenv().SaveSettings["Gun"] = false
        Save()
    end
end)
StatsSection:AddToggle('AutoBloxFruit', {
    Text = 'Blox Fruit',
    Default = getgenv().SaveSettings["BloxFruit"], 
})
Toggles.AutoBloxFruit:OnChanged(function()
    if Toggles.AutoBloxFruit.Value == true then
        getgenv().SaveSettings["BloxFruit"] = true
        Save()
    elseif Toggles.AutoBloxFruit.Value == false then
        getgenv().SaveSettings["BloxFruit"] = false
        Save()
    end
end)
StatsSection:AddSlider('PointsSlider', {
    Text = 'Points',

    Default = getgenv().SaveSettings["Points"],
    Min = 1,
    Max = 100,
    Rounding = 0,

    Compact = false,
})
Options.PointsSlider:OnChanged(function()
    getgenv().SaveSettings["Points"] = Options.PointsSlider.Value
    Save()
end)


-- boss

BossSection:AddToggle('AutoAllBoss', {
    Text = 'Auto Kill All Boss',
    Default = _G.AutoKillAllBoss, 
})
Toggles.AutoAllBoss:OnChanged(function()
    if Toggles.AutoAllBoss.Value == true then
        _G.AutoKillAllBoss = true
    elseif Toggles.AutoAllBoss.Value == false then
        _G.AutoKillAllBoss = false
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
BossSection:AddToggle('AutoBoss', {
    Text = 'Auto Kill Boss',
    Default = _G.AutoBoss, 
})
Toggles.AutoBoss:OnChanged(function()
    if Toggles.AutoBoss.Value == true then
        _G.AutoBoss = true
    elseif Toggles.AutoBoss.Value == false then
        _G.AutoBoss = false
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
BossSection:AddToggle('AutoBossQuest', {
    Text = 'Auto Quest',
    Default = getgenv().SaveSettings["AutoBossQuest"], 
})
Toggles.AutoBossQuest:OnChanged(function()
    if Toggles.AutoBossQuest.Value == true then
        getgenv().SaveSettings["AutoBossQuest"] = true
        Save()
    elseif Toggles.AutoBossQuest.Value == false then
        getgenv().SaveSettings["AutoBossQuest"] = false
        Save()
    end
end)
BossSection:AddDropdown('SelectedBoss', {
    Values = Refresh("Boss"),
    Default = 1,
    Multi = false,
    Text = 'Select Boss',
})
Options.SelectedBoss:OnChanged(function()
    local bosslist = Refresh("Boss")
    Options.SelectedBoss.Values = bosslist
    Options.SelectedBoss:SetValues()
	_G.SelectedBoss = Options.SelectedBoss.Value
end)




-- mastery
local monsterhealthmastery = MasterySection:AddLabel(_G.Blood_Icon .. " Monster Health : 0%")
MasterySection:AddLabel(" ")
MasterySection:AddToggle('automasterybloxfruit', {
    Text = 'Auto Farm Blox Fruit',
    Default = _G.AutoFarmBloxFruit, 
})
Toggles.automasterybloxfruit:OnChanged(function()
    if Toggles.automasterybloxfruit.Value == true then
        _G.AutoFarmBloxFruit = true
    elseif Toggles.automasterybloxfruit.Value == false then
        _G.AutoFarmBloxFruit = false
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
MasterySection:AddToggle('automasterygun', {
    Text = 'Auto Farm Gun',
    Default = _G.AutoFarmgun, 
})
Toggles.automasterygun:OnChanged(function()
    if Toggles.automasterygun.Value == true then
        _G.AutoFarmgun = true
    elseif Toggles.automasterygun.Value == false then
        _G.AutoFarmgun = false
        wait()
        for i=1,5 do
            wait()
            Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
        end
    end
end)
MasterySection:AddLabel("[ Setting ]",true,"Center")
MasterySection:AddSlider('DistanceY', {
    Text = 'Distance (Y)',

    Default = getgenv().SaveSettings["DistanceY"],
    Min = 1,
    Max = 100,
    Rounding = 0,

    Compact = false,
})
Options.DistanceY:OnChanged(function()
    getgenv().SaveSettings["DistanceY"] = Options.DistanceY.Value
    Save()
end)
MasterySection:AddSlider('DistanceZ', {
    Text = 'Distance (Z)',

    Default = getgenv().SaveSettings["DistanceZ"],
    Min = 1,
    Max = 100,
    Rounding = 0,

    Compact = false,
})
Options.DistanceZ:OnChanged(function()
    getgenv().SaveSettings["DistanceZ"] = Options.DistanceZ.Value
    Save()
end)
MasterySection:AddSlider('Healthpercen', {
    Text = 'Health %',

    Default = getgenv().SaveSettings["Healthpercen"],
    Min = 1,
    Max = 100,
    Rounding = 0,

    Compact = false,
})
Options.Healthpercen:OnChanged(function()
    getgenv().SaveSettings["Healthpercen"] = Options.Healthpercen.Value
    Save()
end)
MasterySection:AddSlider('lockmastery', {
    Text = 'Lock Mastery',

    Default = getgenv().SaveSettings["lockmastery"],
    Min = 1,
    Max = 600,
    Rounding = 0,

    Compact = false,
})
Options.lockmastery:OnChanged(function()
    getgenv().SaveSettings["lockmastery"] = Options.lockmastery.Value
    Save()
end)



-- auto skill setting




AutoSkillSection:AddToggle('SkillZ', {
    Text = 'Z',
    Default = getgenv().SaveSettings["Z"], 
})
Toggles.SkillZ:OnChanged(function()
    if Toggles.SkillZ.Value == true then
        getgenv().SaveSettings["Z"] = true
    elseif Toggles.SkillZ.Value == false then
        getgenv().SaveSettings["Z"] = false
    end
end)
AutoSkillSection:AddToggle('SkillX', {
    Text = 'X',
    Default = getgenv().SaveSettings["X"], 
})
Toggles.SkillX:OnChanged(function()
    if Toggles.SkillX.Value == true then
        getgenv().SaveSettings["X"] = true
    elseif Toggles.SkillX.Value == false then
        getgenv().SaveSettings["X"] = false
    end
end)
AutoSkillSection:AddToggle('SkillC', {
    Text = 'C',
    Default = getgenv().SaveSettings["C"], 
})
Toggles.SkillC:OnChanged(function()
    if Toggles.SkillC.Value == true then
        getgenv().SaveSettings["C"] = true
    elseif Toggles.SkillC.Value == false then
        getgenv().SaveSettings["C"] = false
    end
end)
AutoSkillSection:AddToggle('SkillV', {
    Text = 'V',
    Default = getgenv().SaveSettings["V"], 
})
Toggles.SkillV:OnChanged(function()
    if Toggles.SkillV.Value == true then
        getgenv().SaveSettings["V"] = true
    elseif Toggles.SkillV.Value == false then
        getgenv().SaveSettings["V"] = false
    end
end)

















-- FightingStyleSection tab

FightingStyleSection:AddToggle('electricclaw', {
    Text = 'Electric claw',
    Default = getgenv().SaveSettings["electricclaw"], 
})
Toggles.electricclaw:OnChanged(function()
    if Toggles.electricclaw.Value == true then
        getgenv().SaveSettings["electricclaw"] = true
        Save()
    elseif Toggles.electricclaw.Value == false then
        getgenv().SaveSettings["electricclaw"] = false
        Save()
    end
end)
FightingStyleSection:AddToggle('Superhuman', {
    Text = 'Superhuman',
    Default = getgenv().SaveSettings["Superhuman"], 
})
Toggles.Superhuman:OnChanged(function()
    if Toggles.Superhuman.Value == true then
        getgenv().SaveSettings["Superhuman"] = true
        Save()
    elseif Toggles.Superhuman.Value == false then
        getgenv().SaveSettings["Superhuman"] = false
        Save()
    end
end)
FightingStyleSection:AddToggle('deathstep', {
    Text = 'Death step',
    Default = getgenv().SaveSettings["deathstep"], 
})
Toggles.deathstep:OnChanged(function()
    if Toggles.deathstep.Value == true then
        getgenv().SaveSettings["deathstep"] = true
        Save()
    elseif Toggles.deathstep.Value == false then
        getgenv().SaveSettings["deathstep"] = false
        Save()
    end
end)
FightingStyleSection:AddToggle('sharkmankarate', {
    Text = 'Sharkman karate',
    Default = getgenv().SaveSettings["sharkmankarate"], 
})
Toggles.sharkmankarate:OnChanged(function()
    if Toggles.sharkmankarate.Value == true then
        getgenv().SaveSettings["sharkmankarate"] = true
        Save()
    elseif Toggles.sharkmankarate.Value == false then
        getgenv().SaveSettings["sharkmankarate"] = false
        Save()
    end
end)
FightingStyleSection:AddToggle('dragontalon', {
    Text = 'Dragon talon',
    Default = getgenv().SaveSettings["dragontalon"], 
})
Toggles.dragontalon:OnChanged(function()
    if Toggles.dragontalon.Value == true then
        getgenv().SaveSettings["dragontalon"] = true
        Save()
    elseif Toggles.dragontalon.Value == false then
        getgenv().SaveSettings["dragontalon"] = false
        Save()
    end
end)
FightingStyleSection:AddToggle('godhuman', {
    Text = 'Godhuman',
    Default = getgenv().SaveSettings["godhuman"], 
})
Toggles.godhuman:OnChanged(function()
    if Toggles.godhuman.Value == true then
        getgenv().SaveSettings["godhuman"] = true
        Save()
    elseif Toggles.godhuman.Value == false then
        getgenv().SaveSettings["godhuman"] = false
        Save()
    end
end)



FragmentSection:AddButton("Micro Ship (1000 Fragments)", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Microchip",
        [3] = "1"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Microchip",
        [3] = "2"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FragmentSection:AddButton("Reset Stats (2500 Fragments)", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Refund",
        [3] = "1"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Refund",
        [3] = "2"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FragmentSection:AddButton("Random Race (3000 Fragments)", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Reroll",
        [3] = math.random(1,4)
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)





-- auto farm item

AutoFarmItemSection:AddToggle('Magmaore', {
    Text = 'Magma ore',
    Default = getgenv().SaveSettings["Magmaore"], 
})
Toggles.Magmaore:OnChanged(function()
    if Toggles.Magmaore.Value == true then
        getgenv().SaveSettings["Magmaore"] = true
        Save()
    elseif Toggles.Magmaore.Value == false then
        getgenv().SaveSettings["Magmaore"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('meteorite', {
    Text = 'Meteorite',
    Default = getgenv().SaveSettings["meteorite"], 
})
Toggles.meteorite:OnChanged(function()
    if Toggles.meteorite.Value == true then
        getgenv().SaveSettings["meteorite"] = true
        Save()
    elseif Toggles.meteorite.Value == false then
        getgenv().SaveSettings["meteorite"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('radioactivematerial', {
    Text = 'Radioactive material',
    Default = getgenv().SaveSettings["radioactivematerial"], 
})
Toggles.radioactivematerial:OnChanged(function()
    if Toggles.radioactivematerial.Value == true then
        getgenv().SaveSettings["radioactivematerial"] = true
        Save()
    elseif Toggles.radioactivematerial.Value == false then
        getgenv().SaveSettings["radioactivematerial"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('vampirefang', {
    Text = 'Vampire fang',
    Default = getgenv().SaveSettings["vampirefang"], 
})
Toggles.vampirefang:OnChanged(function()
    if Toggles.vampirefang.Value == true then
        getgenv().SaveSettings["vampirefang"] = true
        Save()
    elseif Toggles.vampirefang.Value == false then
        getgenv().SaveSettings["vampirefang"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('minitusk', {
    Text = 'Mini tusk',
    Default = getgenv().SaveSettings["minitusk"], 
})
Toggles.minitusk:OnChanged(function()
    if Toggles.minitusk.Value == true then
        getgenv().SaveSettings["minitusk"] = true
        Save()
    elseif Toggles.minitusk.Value == false then
        getgenv().SaveSettings["minitusk"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('dragonscale', {
    Text = 'Dragon scale',
    Default = getgenv().SaveSettings["dragonscale"], 
})
Toggles.dragonscale:OnChanged(function()
    if Toggles.dragonscale.Value == true then
        getgenv().SaveSettings["dragonscale"] = true
        Save()
    elseif Toggles.dragonscale.Value == false then
        getgenv().SaveSettings["dragonscale"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('conjuredcocoa', {
    Text = 'Conjured cocoa',
    Default = getgenv().SaveSettings["conjuredcocoa"], 
})
Toggles.conjuredcocoa:OnChanged(function()
    if Toggles.conjuredcocoa.Value == true then
        getgenv().SaveSettings["conjuredcocoa"] = true
        Save()
    elseif Toggles.conjuredcocoa.Value == false then
        getgenv().SaveSettings["conjuredcocoa"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('demonicwisp', {
    Text = 'Demonic wisp',
    Default = getgenv().SaveSettings["demonicwisp"], 
})
Toggles.demonicwisp:OnChanged(function()
    if Toggles.demonicwisp.Value == true then
        getgenv().SaveSettings["demonicwisp"] = true
        Save()
    elseif Toggles.demonicwisp.Value == false then
        getgenv().SaveSettings["demonicwisp"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('leatherandscrapmetal', {
    Text = 'Leather & Scrap metal',
    Default = getgenv().SaveSettings["leatherandscrapmetal"], 
})
Toggles.leatherandscrapmetal:OnChanged(function()
    if Toggles.leatherandscrapmetal.Value == true then
        getgenv().SaveSettings["leatherandscrapmetal"] = true
        Save()
    elseif Toggles.leatherandscrapmetal.Value == false then
        getgenv().SaveSettings["leatherandscrapmetal"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('Mysticdroplet', {
    Text = 'Mystic droplet',
    Default = getgenv().SaveSettings["Mysticdroplet"], 
})
Toggles.Mysticdroplet:OnChanged(function()
    if Toggles.Mysticdroplet.Value == true then
        getgenv().SaveSettings["Mysticdroplet"] = true
        Save()
    elseif Toggles.Mysticdroplet.Value == false then
        getgenv().SaveSettings["Mysticdroplet"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('gunpowder', {
    Text = 'Gunpowder',
    Default = getgenv().SaveSettings["gunpowder"], 
})
Toggles.gunpowder:OnChanged(function()
    if Toggles.gunpowder.Value == true then
        getgenv().SaveSettings["gunpowder"] = true
        Save()
    elseif Toggles.gunpowder.Value == false then
        getgenv().SaveSettings["gunpowder"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('Yetifur', {
    Text = 'Yeti fur',
    Default = getgenv().SaveSettings["Yetifur"], 
})
Toggles.Yetifur:OnChanged(function()
    if Toggles.Yetifur.Value == true then
        getgenv().SaveSettings["Yetifur"] = true
        Save()
    elseif Toggles.Yetifur.Value == false then
        getgenv().SaveSettings["Yetifur"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('angelwings', {
    Text = 'Angel wings',
    Default = getgenv().SaveSettings["angelwings"], 
})
Toggles.angelwings:OnChanged(function()
    if Toggles.angelwings.Value == true then
        getgenv().SaveSettings["angelwings"] = true
        Save()
    elseif Toggles.angelwings.Value == false then
        getgenv().SaveSettings["angelwings"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('fishtail', {
    Text = 'Fish tail',
    Default = getgenv().SaveSettings["fishtail"], 
})
Toggles.fishtail:OnChanged(function()
    if Toggles.fishtail.Value == true then
        getgenv().SaveSettings["fishtail"] = true
        Save()
    elseif Toggles.fishtail.Value == false then
        getgenv().SaveSettings["fishtail"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('ectoplasm', {
    Text = 'Ectoplasm',
    Default = getgenv().SaveSettings["ectoplasm"], 
})
Toggles.ectoplasm:OnChanged(function()
    if Toggles.ectoplasm.Value == true then
        getgenv().SaveSettings["ectoplasm"] = true
        Save()
    elseif Toggles.ectoplasm.Value == false then
        getgenv().SaveSettings["ectoplasm"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('bone', {
    Text = 'Bone',
    Default = getgenv().SaveSettings["bone"], 
})
Toggles.bone:OnChanged(function()
    if Toggles.bone.Value == true then
        getgenv().SaveSettings["bone"] = true
        Save()
    elseif Toggles.bone.Value == false then
        getgenv().SaveSettings["bone"] = false
        Save()
        spawn(function()
            wait(1)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('mirrorfractal', {
    Text = 'Mirror fractal',
    Default = getgenv().SaveSettings["mirrorfractal"], 
})
Toggles.mirrorfractal:OnChanged(function()
    if Toggles.mirrorfractal.Value == true then
        getgenv().SaveSettings["mirrorfractal"] = true
        Save()
    elseif Toggles.mirrorfractal.Value == false then
        getgenv().SaveSettings["mirrorfractal"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
AutoFarmItemSection:AddToggle('darkfragment', {
    Text = 'Dark fragment',
    Default = getgenv().SaveSettings["darkfragment"], 
})
Toggles.darkfragment:OnChanged(function()
    if Toggles.darkfragment.Value == true then
        getgenv().SaveSettings["darkfragment"] = true
        Save()
    elseif Toggles.darkfragment.Value == false then
        getgenv().SaveSettings["darkfragment"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)






-- event tab



local killedcakemonster = EventSection:AddLabel(_G.Cake_icon .. " Monster Killed : 0")
EventSection:AddToggle('autocakeprince', {
    Text = 'Auto Farm Cake Prince',
    Default = _G.AutoCakePrince, 
})
Toggles.autocakeprince:OnChanged(function()
    if Toggles.autocakeprince.Value == true then
        _G.AutoCakePrince = true
    elseif Toggles.autocakeprince.Value == false then
        _G.AutoCakePrince = false
        spawn(function()
            wait(1)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
EventSection:AddLabel("-----------------------",true,"Center")
local Bonetotal = EventSection:AddLabel(_G.Bone_icon .. " Bone : 0")
EventSection:AddToggle('autofarmsoulreaper', {
    Text = 'Auto Farm Soul Reaper',
    Default = _G.autofarmsoulreaper, 
})
Toggles.autofarmsoulreaper:OnChanged(function()
    if Toggles.autofarmsoulreaper.Value == true then
        _G.autofarmsoulreaper = true
    elseif Toggles.autofarmsoulreaper.Value == false then
        _G.autofarmsoulreaper = false
    end
end)
EventSection:AddLabel("-----------------------",true,"Center")
local ripindra = EventSection:AddLabel(_G.man_icon .. " Rip Indra : Undefind")
EventSection:AddToggle('autoripindra', {
    Text = 'Auto Rip Indra',
    Default = _G.autoripindra, 
})
Toggles.autoripindra:OnChanged(function()
    if Toggles.autoripindra.Value == true then
        _G.autoripindra = true
    elseif Toggles.autoripindra.Value == false then
        _G.autoripindra = false
    end
end)
EventSection:AddToggle('autoripindrahop', {
    Text = 'Auto Rip Indra (Hop)',
    Default = getgenv().SaveSettings["autoripindrahop"], 
})
Toggles.autoripindrahop:OnChanged(function()
    if Toggles.autoripindrahop.Value == true then
        getgenv().SaveSettings["autoripindrahop"] = true
        Save()
    elseif Toggles.autoripindra.Value == false then
        getgenv().SaveSettings["autoripindrahop"] = false
        Save()
    end
end)
EventSection:AddLabel("-----------------------",true,"Center")
local EliteStatus = EventSection:AddLabel(_G.DeadX_icon .. " Elite Hunter : Undefind.")
local EliteTotal = EventSection:AddLabel(_G.coffin_icon .. " Hunted : Undefind")
EventSection:AddToggle('autoelite', {
    Text = 'Auto Farm Elite',
    Default = _G.AutoElite, 
})
Toggles.autoelite:OnChanged(function()
    if Toggles.autoelite.Value == true then
        _G.AutoElite = true
    elseif Toggles.autoelite.Value == false then
        _G.AutoElite = false
    end
end)
EventSection:AddToggle('autoelitehop', {
    Text = 'Auto Farm Elite (Hop)',
    Default = getgenv().SaveSettings["AutoEliteHop"], 
})
Toggles.autoelitehop:OnChanged(function()
    if Toggles.autoelitehop.Value == true then
        getgenv().SaveSettings["AutoEliteHop"] = true
        Save()
    elseif Toggles.autoelitehop.Value == false then
        getgenv().SaveSettings["AutoEliteHop"] = false
        Save()
    end
end)
EventSection:AddToggle('stopwhengodChalice', {
    Text = [[Stop hop when got God's Chalice]],
    Default = getgenv().SaveSettings["stopwhengodChalice"], 
})
Toggles.stopwhengodChalice:OnChanged(function()
    if Toggles.stopwhengodChalice.Value == true then
        getgenv().SaveSettings["stopwhengodChalice"] = true
        Save()
    elseif Toggles.stopwhengodChalice.Value == false then
        getgenv().SaveSettings["stopwhengodChalice"] = false
        Save()
    end
end)



settingitemfarmSection:AddToggle('settingitemfarmSection', {
    Text = [[Allow Hop Server]],
    Default = getgenv().SaveSettings["AutoFarmItemHop"], 
})
Toggles.settingitemfarmSection:OnChanged(function()
    if Toggles.settingitemfarmSection.Value == true then
        getgenv().SaveSettings["AutoFarmItemHop"] = true
        Save()
    elseif Toggles.settingitemfarmSection.Value == false then
        getgenv().SaveSettings["AutoFarmItemHop"] = false
        Save()
    end
end)

-- auto weapon





autoweaponTab:AddToggle('autosaber', {
    Text = _G.swordfight_icon.." Auto Saber",
    Default = getgenv().SaveSettings["autosaber"], 
})
Toggles.autosaber:OnChanged(function()
    if Toggles.autosaber.Value == true then
        getgenv().SaveSettings["autosaber"] = true
        Save()
    elseif Toggles.autosaber.Value == false then
        getgenv().SaveSettings["autosaber"] = false
        Save()
        wait()
        for i=1,5 do
            pcall(function()
                Tween2(RootPart.Position,"Vector") 
            end)
        end
    end
end)
autoweaponTab:AddToggle('autopole', {
    Text = _G.Lighning_icon .." Auto Pole",
    Default = getgenv().SaveSettings["autopole"], 
})
Toggles.autopole:OnChanged(function()
    if Toggles.autopole.Value == true then
        getgenv().SaveSettings["autopole"] = true
        Save()
    elseif Toggles.autopole.Value == false then
        getgenv().SaveSettings["autopole"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autosharksaw', {
    Text = _G.Shark_icon .. " Auto Shark Saw",
    Default = getgenv().SaveSettings["autosharksaw"], 
})
Toggles.autosharksaw:OnChanged(function()
    if Toggles.autosharksaw.Value == true then
        getgenv().SaveSettings["autosharksaw"] = true
        Save()
    elseif Toggles.autosharksaw.Value == false then
        getgenv().SaveSettings["autosharksaw"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autotrident', {
    Text = _G.Trident .. " Auto Trident",
    Default = getgenv().SaveSettings["autotrident"], 
})
Toggles.autotrident:OnChanged(function()
    if Toggles.autotrident.Value == true then
        getgenv().SaveSettings["autotrident"] = true
        Save()
    elseif Toggles.autotrident.Value == false then
        getgenv().SaveSettings["autotrident"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('automidnightblade', {
    Text = _G.knife_icn.." Auto Midnight Blade",
    Default = getgenv().SaveSettings["automidnightblade"], 
})
Toggles.automidnightblade:OnChanged(function()
    if Toggles.automidnightblade.Value == true then
        getgenv().SaveSettings["automidnightblade"] = true
        Save()
    elseif Toggles.automidnightblade.Value == false then
        getgenv().SaveSettings["automidnightblade"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autobisentov2', {
    Text = _G.crown_icon .. " Auto Bisento V2",
    Default = getgenv().SaveSettings["autobisentov2"], 
})
Toggles.autobisentov2:OnChanged(function()
    if Toggles.autobisentov2.Value == true then
        getgenv().SaveSettings["autobisentov2"] = true
        Save()
    elseif Toggles.autobisentov2.Value == false then
        getgenv().SaveSettings["autobisentov2"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autodarkdagger', {
    Text = _G.dubblesword_icon .. " Auto Dark Dagger",
    Default = getgenv().SaveSettings["autodarkdagger"], 
})
Toggles.autodarkdagger:OnChanged(function()
    if Toggles.autodarkdagger.Value == true then
        getgenv().SaveSettings["autodarkdagger"] = true
        Save()
    elseif Toggles.autodarkdagger.Value == false then
        getgenv().SaveSettings["autodarkdagger"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autoyama', {
    Text = _G.knife_icn .. " Auto Yama",
    Default = getgenv().SaveSettings["autoyama"], 
})
Toggles.autoyama:OnChanged(function()
    if Toggles.autoyama.Value == true then
        getgenv().SaveSettings["autoyama"] = true
        Save()
    elseif Toggles.autoyama.Value == false then
        getgenv().SaveSettings["autoyama"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autorengoku', {
    Text = _G.fire_icon .. " Auto Rengoku",
    Default = getgenv().SaveSettings["autorengoku"], 
})
Toggles.autorengoku:OnChanged(function()
    if Toggles.autorengoku.Value == true then
        getgenv().SaveSettings["autorengoku"] = true
        Save()
    elseif Toggles.autorengoku.Value == false then
        getgenv().SaveSettings["autorengoku"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autocanvander', {
    Text = _G.flower_icon .. " Auto Canvander",
    Default = getgenv().SaveSettings["autocanvander"], 
})
Toggles.autocanvander:OnChanged(function()
    if Toggles.autocanvander.Value == true then
        getgenv().SaveSettings["autocanvander"] = true
        Save()
    elseif Toggles.autocanvander.Value == false then
        getgenv().SaveSettings["autocanvander"] = false
        Save()
    end
end)
autoweaponTab:AddToggle('autobuddysword', {
    Text = _G.candy_icon .. " Auto Buddy Sword",
    Default = getgenv().SaveSettings["autobuddysword"], 
})
Toggles.autobuddysword:OnChanged(function()
    if Toggles.autobuddysword.Value == true then
        getgenv().SaveSettings["autobuddysword"] = true
        Save()
    elseif Toggles.autobuddysword.Value == false then
        getgenv().SaveSettings["autobuddysword"] = false
        Save()
    end
end)


-- auto gun tab

autoGunTab:AddToggle('AutoRefinedMusket', {
    Text = _G.Gun_icon .. " Auto Refined Musket",
    Default = getgenv().SaveSettings["AutoRefinedMusket"], 
})
Toggles.AutoRefinedMusket:OnChanged(function()
    if Toggles.AutoRefinedMusket.Value == true then
        getgenv().SaveSettings["AutoRefinedMusket"] = true
        Save()
    elseif Toggles.AutoRefinedMusket.Value == false then
        getgenv().SaveSettings["AutoRefinedMusket"] = false
        Save()
    end
end)
autoGunTab:AddToggle('Autoserpentbow', {
    Text = _G.bow_icon .. " Auto Serpent Bow",
    Default = getgenv().SaveSettings["Autoserpentbow"], 
})
Toggles.Autoserpentbow:OnChanged(function()
    if Toggles.Autoserpentbow.Value == true then
        getgenv().SaveSettings["Autoserpentbow"] = true
        Save()
    elseif Toggles.Autoserpentbow.Value == false then
        getgenv().SaveSettings["Autoserpentbow"] = false
        Save()
    end
end)



-- auto Accessory

autoaccesTab:AddToggle('AutoValkyrieHelmet', {
    Text = _G.Hat_icon .. " Auto Valkyrie Helmet",
    Default = getgenv().SaveSettings["AutoValkyrieHelmet"], 
})
Toggles.AutoValkyrieHelmet:OnChanged(function()
    if Toggles.AutoValkyrieHelmet.Value == true then
        getgenv().SaveSettings["AutoValkyrieHelmet"] = true
        Save()
    elseif Toggles.AutoValkyrieHelmet.Value == false then
        getgenv().SaveSettings["AutoValkyrieHelmet"] = false
        Save()
    end
end)
autoaccesTab:AddToggle('AutoMusketeerHat', {
    Text = _G.Hat2_icon .. " Auto Musketeer Hat",
    Default = getgenv().SaveSettings["AutoMusketeerHat"], 
})
Toggles.AutoMusketeerHat:OnChanged(function()
    if Toggles.AutoMusketeerHat.Value == true then
        getgenv().SaveSettings["AutoMusketeerHat"] = true
        Save()
    elseif Toggles.AutoMusketeerHat.Value == false then
        getgenv().SaveSettings["AutoMusketeerHat"] = false
        Save()
    end
end)
autoaccesTab:AddToggle('Autohuntercape', {
    Text = _G.shirt_icon .. " Auto Hunter Cape",
    Default = getgenv().SaveSettings["Autohuntercape"], 
})
Toggles.Autohuntercape:OnChanged(function()
    if Toggles.Autohuntercape.Value == true then
        getgenv().SaveSettings["Autohuntercape"] = true
        Save()
    elseif Toggles.Autohuntercape.Value == false then
        getgenv().SaveSettings["Autohuntercape"] = false
        Save()
    end
end)
autoaccesTab:AddToggle('Autobandanna', {
    Text = _G.band_icon .. " Auto Bandanna",
    Default = getgenv().SaveSettings["Autobandanna"], 
})
Toggles.Autobandanna:OnChanged(function()
    if Toggles.Autobandanna.Value == true then
        getgenv().SaveSettings["Autobandanna"] = true
        Save()
    elseif Toggles.Autobandanna.Value == false then
        getgenv().SaveSettings["Autobandanna"] = false
        Save()
    end
end)



-- AutomaticsTab


otherautoSection:AddToggle('EnchancementColor', {
    Text = "Auto Buy Enchancement Color",
    Default = getgenv().SaveSettings["EnchancementColor"], 
})
Toggles.EnchancementColor:OnChanged(function()
    if Toggles.EnchancementColor.Value == true then
        getgenv().SaveSettings["EnchancementColor"] = true
        Save()
    elseif Toggles.EnchancementColor.Value == false then
        getgenv().SaveSettings["EnchancementColor"] = false
        Save()
    end
end)
otherautoSection:AddToggle('Autotradedeathking', {
    Text = "Auto Trade Death King",
    Default = getgenv().SaveSettings["Autotradedeathking"], 
})
Toggles.Autotradedeathking:OnChanged(function()
    if Toggles.Autotradedeathking.Value == true then
        getgenv().SaveSettings["Autotradedeathking"] = true
        Save()
    elseif Toggles.Autotradedeathking.Value == false then
        getgenv().SaveSettings["Autotradedeathking"] = false
        Save()
    end
end)
otherautoSection:AddToggle('Autofarmchest', {
    Text = "Auto Farm Chest",
    Default = getgenv().SaveSettings["Autofarmchest"], 
})
Toggles.Autofarmchest:OnChanged(function()
    if Toggles.Autofarmchest.Value == true then
        getgenv().SaveSettings["Autofarmchest"] = true
        Save()
    elseif Toggles.Autofarmchest.Value == false then
        getgenv().SaveSettings["Autofarmchest"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
otherautoSection:AddToggle('Autoseabeast', {
    Text = "Auto Sea Beast",
    Default = getgenv().SaveSettings["Autoseabeast"], 
})
Toggles.Autoseabeast:OnChanged(function()
    if Toggles.Autoseabeast.Value == true then
        getgenv().SaveSettings["Autoseabeast"] = true
        Save()
    elseif Toggles.Autoseabeast.Value == false then
        getgenv().SaveSettings["Autoseabeast"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
otherautoSection:AddToggle('Autofactory', {
    Text = "Auto Factory",
    Default = getgenv().SaveSettings["Autofactory"], 
})
Toggles.Autofactory:OnChanged(function()
    if Toggles.Autofactory.Value == true then
        getgenv().SaveSettings["Autofactory"] = true
        Save()
    elseif Toggles.Autofactory.Value == false then
        getgenv().SaveSettings["Autofactory"] = false
        Save()
        spawn(function()
            wait(0.5)
            for i=1,5 do
                wait()
                Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
            end 
        end)
    end
end)
otherautoSection:AddToggle('Autotraningdummy', {
    Text = "Auto Traning Dummy",
    Default = getgenv().SaveSettings["Autotraningdummy"], 
})
Toggles.Autotraningdummy:OnChanged(function()
    if Toggles.Autotraningdummy.Value == true then
        getgenv().SaveSettings["Autotraningdummy"] = true
        Save()
    elseif Toggles.Autotraningdummy.Value == false then
        getgenv().SaveSettings["Autotraningdummy"] = false
        Save()
    end
end)
otherautoSection:AddToggle('AutoCastleRaid', {
    Text = "Auto Castle Raid",
    Default = getgenv().SaveSettings["AutoCastleRaid"], 
})
Toggles.AutoCastleRaid:OnChanged(function()
    if Toggles.AutoCastleRaid.Value == true then
        getgenv().SaveSettings["AutoCastleRaid"] = true
        Save()
    elseif Toggles.AutoCastleRaid.Value == false then
        getgenv().SaveSettings["AutoCastleRaid"] = false
        Save()
    end
end)
otherautoSection:AddToggle('AutoObservationhaki', {
    Text = "Auto Observation Haki",
    Default = getgenv().SaveSettings["AutoObservationhaki"], 
})
Toggles.AutoObservationhaki:OnChanged(function()
    if Toggles.AutoObservationhaki.Value == true then
        getgenv().SaveSettings["AutoObservationhaki"] = true
        Save()
    elseif Toggles.AutoObservationhaki.Value == false then
        getgenv().SaveSettings["AutoObservationhaki"] = false
        Save()
    end
end)
otherautoSection:AddToggle('AutoObservationhakiV2', {
    Text = "Auto Observation Haki V2",
    Default = getgenv().SaveSettings["AutoObservationhakiV2"], 
})
Toggles.AutoObservationhakiV2:OnChanged(function()
    if Toggles.AutoObservationhakiV2.Value == true then
        getgenv().SaveSettings["AutoObservationhakiV2"] = true
        Save()
    elseif Toggles.AutoObservationhakiV2.Value == false then
        getgenv().SaveSettings["AutoObservationhakiV2"] = false
        Save()
    end
end)
otherautoSection:AddButton('Unlock Dark Blade V2',getdarkbladev2)
otherautoSection:AddButton('Place All Torch (Tushita Quest)',function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TushitaProgress", "Torch", 1)
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TushitaProgress", "Torch", 2)
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TushitaProgress", "Torch", 3)
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TushitaProgress", "Torch", 4)
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TushitaProgress", "Torch", 5)
end)
otherautoSection:AddLabel("-----------------------",true,"Center")
local observationhakitotal = otherautoSection:AddLabel(_G.Earth_icon .. " Observation Level : 0")
local toggleobsercation = otherautoSection:AddToggle('AutoFarmObservationHop', {
    Text = 'Auto Farm (require Hop)',
    Default = getgenv().SaveSettings["AutoFarmObservationHop"], 
})
Toggles.AutoFarmObservationHop:OnChanged(function()
    if Toggles.AutoFarmObservationHop.Value == true then
        getgenv().SaveSettings["AutoFarmObservationHop"] = true
        Save()
    elseif Toggles.AutoFarmObservationHop.Value == false then
        getgenv().SaveSettings["AutoFarmObservationHop"] = false
        Save()
    end
end)

local dualswordlabel = DualCursedSwordSection:AddLabel(_G.dubblesword_icon .. " Output : Undefind")
local toggledualsword = DualCursedSwordSection:AddToggle('AutoDualCursedSword', {
    Text = 'Auto Dual Cursed Sword',
    Default = getgenv().SaveSettings["AutoDualCursedSword"], 
})
Toggles.AutoDualCursedSword:OnChanged(function()
    if Toggles.AutoDualCursedSword.Value == true then
        getgenv().SaveSettings["AutoDualCursedSword"] = true
        Save()
    elseif Toggles.AutoDualCursedSword.Value == false then
        getgenv().SaveSettings["AutoDualCursedSword"] = false
        Save()
    end
end)

local fullmoonlabel = SoulGuitarSection:AddLabel(_G.moon_icon .. " Full Moon : No")
SoulGuitarSection:AddToggle('AutoSoulGuitar', {
    Text = 'Auto Quest Soul Guitar',
    Default = getgenv().SaveSettings["AutoSoulGuitar"], 
})
Toggles.AutoSoulGuitar:OnChanged(function()
    if Toggles.AutoSoulGuitar.Value == true then
        getgenv().SaveSettings["AutoSoulGuitar"] = true
        Save()
    elseif Toggles.AutoSoulGuitar.Value == false then
        getgenv().SaveSettings["AutoSoulGuitar"] = false
        Save()
    end
end)
SoulGuitarSection:AddToggle('Autofindfullmoon', {
    Text = 'Find Full Moon (require Hop)',
    Default = getgenv().SaveSettings["Autofindfullmoon"], 
})
Toggles.Autofindfullmoon:OnChanged(function()
    if Toggles.Autofindfullmoon.Value == true then
        getgenv().SaveSettings["Autofindfullmoon"] = true
        Save()
    elseif Toggles.Autofindfullmoon.Value == false then
        getgenv().SaveSettings["Autofindfullmoon"] = false
        Save()
    end
end)



local WandoCheck = LegendarySword:AddLabel("Wando  : ".._G.X_Icon)
local ShisuiCheck = LegendarySword:AddLabel("Shisui : ".._G.X_Icon)
local SaddiCheck = LegendarySword:AddLabel("Saddi  : ".._G.X_Icon)
LegendarySword:AddToggle('AutoBuyLegendarysword', {
    Text = "Auto Buy Legendary Sword",
    Default = getgenv().SaveSettings["AutoBuyLegendarysword"], 
})
Toggles.AutoBuyLegendarysword:OnChanged(function()
    if Toggles.AutoBuyLegendarysword.Value == true then
        getgenv().SaveSettings["AutoBuyLegendarysword"] = true
        Save()
    elseif Toggles.AutoBuyLegendarysword.Value == false then
        getgenv().SaveSettings["AutoBuyLegendarysword"] = false
        Save()
    end
end)




-- auto swrod setting



settingautoweaponTab:AddToggle('settingautoweaponhop', {
    Text = "Hop Server",
    Default = getgenv().SaveSettings["settingautoweaponhop"], 
})
Toggles.settingautoweaponhop:OnChanged(function()
    if Toggles.settingautoweaponhop.Value == true then
        getgenv().SaveSettings["settingautoweaponhop"] = true
        Save()
    elseif Toggles.settingautoweaponhop.Value == false then
        getgenv().SaveSettings["settingautoweaponhop"] = false
        Save()
    end
end)
















-- player tab



PlayersSection:AddDropdown('SelectedPlayerDropDown', {
    Values = getplrlist(),
    Default = 2,
    Multi = false,
    Text = 'Select Player',
})
Options.SelectedPlayerDropDown:OnChanged(function()
    local plarlist = getplrlist()
    Options.SelectedPlayerDropDown.Values = plarlist
    Options.SelectedPlayerDropDown:SetValues()
	_G.SelectedPlayer = Options.SelectedPlayerDropDown.Value
end)
PlayersSection:AddToggle('Teleportplayer', {
    Text = 'Teleport',
    Default = _G.TeleportPlayer, 
})
Toggles.Teleportplayer:OnChanged(function()
    if Toggles.Teleportplayer.Value == true then
        _G.TeleportPlayer = true
    elseif Toggles.Teleportplayer.Value == false then
        _G.TeleportPlayer = false
        wait()
        for i=1,5 do
            pcall(function()
                Tween2(RootPart.Position,"Vector") 
            end)
        end
    end
end)
PlayersSection:AddToggle('spectateplayer', {
    Text = 'Spectate',
    Default = _G.spectateplayer, 
})
Toggles.spectateplayer:OnChanged(function()
    if Toggles.spectateplayer.Value == true then
        _G.spectateplayer = true
    elseif Toggles.spectateplayer.Value == false then
        _G.spectateplayer = false
        game.Workspace.Camera.CameraSubject = Hum
    end
    
end)
PlayersSection:AddToggle('KillPlayer', {
    Text = 'Kill Player',
    Default = _G.KillPlayer, 
})
Toggles.KillPlayer:OnChanged(function()
    if Toggles.KillPlayer.Value == true then
        _G.KillPlayer = true
    elseif Toggles.KillPlayer.Value == false then
        _G.KillPlayer = false
    end
end)
PlayersSection:AddToggle('AutoHuntQuest', {
    Text = 'Auto Hunt Quest',
    Default = _G.AutoHuntQuest, 
})
Toggles.AutoHuntQuest:OnChanged(function()
    if Toggles.AutoHuntQuest.Value == true then
        _G.AutoHuntQuest = true
    elseif Toggles.AutoHuntQuest.Value == false then
        _G.AutoHuntQuest = false
    end
end)


-- setting tab



local playercolorpciker = playersettingSection:AddLabel(_G.Setting_icon .. 'Player Color'):AddColorPicker('PlayerColor', {
    Default = Color3.new(getgenv().SaveSettings["PlayerColor"].R,getgenv().SaveSettings["PlayerColor"].G,getgenv().SaveSettings["PlayerColor"].B),
    Title = 'Some color', 
})
Options.PlayerColor:OnChanged(function()
    getgenv().SaveSettings["PlayerColor"].R = Options.PlayerColor.Value.R
    getgenv().SaveSettings["PlayerColor"].G = Options.PlayerColor.Value.G
    getgenv().SaveSettings["PlayerColor"].B = Options.PlayerColor.Value.B
    Save()
end)
local tragetcolorpciker = playersettingSection:AddLabel(_G.DeadX_icon .. ' Traget Color'):AddColorPicker('tragetcolor', {
    Default = Color3.new(getgenv().SaveSettings["tragetcolor"].R,getgenv().SaveSettings["tragetcolor"].G,getgenv().SaveSettings["tragetcolor"].B),
    Title = 'Some color', 
})
Options.tragetcolor:OnChanged(function()
    getgenv().SaveSettings["tragetcolor"].R = Options.tragetcolor.Value.R
    getgenv().SaveSettings["tragetcolor"].G = Options.tragetcolor.Value.G
    getgenv().SaveSettings["tragetcolor"].B = Options.tragetcolor.Value.B
    Save()
end)





playersettingSection:AddDropdown('SelectedKillType', {
        Values = {"Melee","Sword","Gun","BloxFruit"},
        Default = getindex({"Melee","Sword","Gun","BloxFruit"},getgenv().SaveSettings["SelectedKillType"]),
        Multi = false,
        Text = 'Select Weapon',
    })
Options.SelectedKillType:OnChanged(function()
	getgenv().SaveSettings["SelectedKillType"] = Options.SelectedKillType.Value
	Save()
end)
playersettingSection:AddDropdown('SelectedAimbotType', {
        Values = {"Custom","Automatics"},
        Default = getindex({"Custom","Automatics"},getgenv().SaveSettings["SelectedAimbotType"]),
        Multi = false,
        Text = 'Select Aimbot Mode',
    })
Options.SelectedAimbotType:OnChanged(function()
	getgenv().SaveSettings["SelectedAimbotType"] = Options.SelectedAimbotType.Value
	Save()
end)
playersettingSection:AddSlider('MinDistanceLock', {
    Text = 'Min Distance',

    Default = getgenv().SaveSettings["MinDistanceLock"],
    Min = 1,
    Max = 5000,
    Rounding = 0,

    Compact = false,
})
Options.MinDistanceLock:OnChanged(function()
    getgenv().SaveSettings["MinDistanceLock"] = Options.MinDistanceLock.Value
    Save()
end)



-- esp tab




VisualSection:AddToggle('ESPPLAYER', {
    Text = 'ESP',
    Default = getgenv().SaveSettings["ESPPLAYER"], 
})
Toggles.ESPPLAYER:OnChanged(function()
    if Toggles.ESPPLAYER.Value == true then
        getgenv().SaveSettings["ESPPLAYER"] = true
        Save()
    elseif Toggles.ESPPLAYER.Value == false then
        getgenv().SaveSettings["ESPPLAYER"] = false
        Save()
    end
end)


-- Modify tab

ModifySection:AddToggle('clicktp', {
    Text = 'CTRL + CLICK = TELEPORT',
    Default = getgenv().SaveSettings["clicktp"], 
})
Toggles.clicktp:OnChanged(function()
    if Toggles.clicktp.Value == true then
        getgenv().SaveSettings["clicktp"] = true
        Save()
    elseif Toggles.clicktp.Value == false then
        getgenv().SaveSettings["clicktp"] = false
        Save()
    end
end)
ModifySection:AddToggle('infrace', {
    Text = 'Infinity Evo Race (Client)',
    Default = getgenv().SaveSettings["infrace"], 
})
Toggles.infrace:OnChanged(function()
    if Toggles.infrace.Value == true then
        getgenv().SaveSettings["infrace"] = true
        Save()
    elseif Toggles.infrace.Value == false then
        getgenv().SaveSettings["infrace"] = false
        if not getgenv().SaveSettings["infrace"] and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
            game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility"):Destroy()
        end
        Save()
    end
end)

ModifySection:AddToggle('DamageAura', {
    Text = 'Damage Aura (Risk)',
    Default = getgenv().SaveSettings["DamageAura"], 
})
Toggles.DamageAura:OnChanged(function()
    if Toggles.DamageAura.Value == true then
        getgenv().SaveSettings["DamageAura"] = true
        Save()
    elseif Toggles.DamageAura.Value == false then
        getgenv().SaveSettings["DamageAura"] = false
        Save()
    end
end)
ModifySection:AddToggle('InfinityStamina', {
    Text = 'Infinity Stamina',
    Default = getgenv().SaveSettings["InfinityStamina"], 
})
Toggles.InfinityStamina:OnChanged(function()
    if Toggles.InfinityStamina.Value == true then
        getgenv().SaveSettings["InfinityStamina"] = true
        Save()
    elseif Toggles.InfinityStamina.Value == false then
        getgenv().SaveSettings["InfinityStamina"] = false
        Save()
    end
    if game.Players.LocalPlayer.Character.Energy:FindFirstChild("Checked") then
    else
        local CreateCheck = Instance.new("BoolValue",game.Players.LocalPlayer.Character.Energy)
        CreateCheck.Name = "Checked"
        game.Players.LocalPlayer.Character.Energy.Changed:Connect(function()
            if getgenv().SaveSettings["InfinityStamina"] then
                game.Players.LocalPlayer.Character.Energy.Value = sp(game.Players.LocalPlayer.PlayerGui.Main.Energy.TextLabel.Text)[2]:split("/")[2]
            end
        end)
    end
end)


ModifySection:AddToggle('Walkowater', {
    Text = 'Walk above water',
    Default = getgenv().SaveSettings["Walkowater"], 
})
Toggles.Walkowater:OnChanged(function()
    if Toggles.Walkowater.Value == true then
        getgenv().SaveSettings["Walkowater"] = true
        Save()
    elseif Toggles.Walkowater.Value == false then
        getgenv().SaveSettings["Walkowater"] = false
        Save()
    end
end)
ModifySection:AddToggle('FastLoadCharacter', {
    Text = 'Fast Load Character (CD : 10)',
    Default = getgenv().SaveSettings["FastLoadCharacter"], 
    Tooltip = "Fast load character when died."
})
Toggles.FastLoadCharacter:OnChanged(function()
    if Toggles.FastLoadCharacter.Value == true then
        getgenv().SaveSettings["FastLoadCharacter"] = true
        Save()
    elseif Toggles.FastLoadCharacter.Value == false then
        getgenv().SaveSettings["FastLoadCharacter"] = false
        Save()
    end
end)
ModifySection:AddToggle('minkv4', {
    Text = 'Unlock Mink V4 (Client)',
    Default = _G.MinkV4, 
})
Toggles.minkv4:OnChanged(function()
    pcall(function()
        if Toggles.minkv4.Value == true then
            -- syn.set_thread_identity(5)
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Player = game:GetService("Players").LocalPlayer
            local ArgsTransform = {
                Character = game.Players.LocalPlayer.Character,
                CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
                Color1 = Color3.fromRGB(102, 255, 153),
                Color2 = Color3.fromRGB(102, 255, 153),
                Color3 = Color3.fromRGB(102, 255, 153),
            }
            Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
            delay(1, function()
                pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
            end)
            local agility = game:GetService("ReplicatedStorage").FX.Agility:Clone()
            agility.Enabled = false
            agility.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
            _G.MinkV4 = true
        elseif Toggles.minkv4.Value == false then
            _G.MinkV4 = false
            if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
            game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility"):Destroy()
        end
        end
    end)
end)
ModifySection:AddButton("Infinity Ken Distance",function()
    if Plr:FindFirstChild("VisionRadius") then
        Plr.VisionRadius.Value = 9999999999999
    end
end)


-- bounty hunt



_G.CollectFirstBounty = Plr.leaderstats["Bounty/Honor"].Value
local Huntingname = PlayerHunt:AddLabel("Name : Undefind")
local earnedbounty = PlayerHunt:AddLabel("Earned Bounty : 0")
PlayerHunt:AddDivider()
PlayerHunt:AddToggle('autohuntbounty', {
    Text = 'Auto Hunt Bounty (Beta)',
    Default = getgenv().SaveSettings["autohuntbounty"], 
})
Toggles.autohuntbounty:OnChanged(function()
    if Toggles.autohuntbounty.Value == true then
        getgenv().SaveSettings["autohuntbounty"] = true
        Save()
    elseif Toggles.autohuntbounty.Value == false then
        getgenv().SaveSettings["autohuntbounty"] = false
        Save()
    end
end)
PlayerHunt:AddToggle('safemode', {
    Text = 'Safe Mode',
    Default = getgenv().SaveSettings["safemode"], 
})
Toggles.safemode:OnChanged(function()
    if Toggles.safemode.Value == true then
        getgenv().SaveSettings["safemode"] = true
        Save()
    elseif Toggles.safemode.Value == false then
        getgenv().SaveSettings["safemode"] = false
        Save()
    end
end)
PlayerHunt:AddLabel("")
PlayerHunt:AddSlider('healthslider', {
    Text = 'Health %',

    Default = getgenv().SaveSettings["healthslider"],
    Min = 1,
    Max = 100,
    Rounding = 0,

    Compact = false,
})
Options.healthslider:OnChanged(function()
    getgenv().SaveSettings["healthslider"] = Options.healthslider.Value
    Save()
end)
PlayerHunt:AddButton("Next Player",function()
    _G.NextPlayer = true
end)









-- aimbot tab


local tragetnow = aimbotSection:AddLabel(_G.DeadX_icon .. " Traget : Undefind")
aimbotSection:AddToggle('aimbotskill', {
    Text = 'Aimbot Skill',
    Default = getgenv().SaveSettings["aimbotskill"], 
})
Toggles.aimbotskill:OnChanged(function()
    if Toggles.aimbotskill.Value == true then
        getgenv().SaveSettings["aimbotskill"] = true
        Save()
    elseif Toggles.aimbotskill.Value == false then
        getgenv().SaveSettings["aimbotskill"] = false
        Save()
    end
end)
aimbotSection:AddToggle('aimbotgun', {
    Text = 'Aimbot Gun',
    Default = getgenv().SaveSettings["aimbotgun"], 
})
Toggles.aimbotgun:OnChanged(function()
    if Toggles.aimbotgun.Value == true then
        getgenv().SaveSettings["aimbotgun"] = true
        Save()
    elseif Toggles.aimbotgun.Value == false then
        getgenv().SaveSettings["aimbotgun"] = false
        Save()
    end
end)
aimbotSection:AddDropdown('Ignoreaimbot', {
    Values = {"Allies","Friend","Team"},
    Default = 2,
    Multi = true,
    Text = 'Ignore',
})
Options.Ignoreaimbot:OnChanged(function()
    if loaddedlist_ignoreaimbot then
        if  Options.Ignoreaimbot.Value.Allies == true then
            getgenv().SaveSettings["Ignoreaimbot"].Allies = true
        else
            getgenv().SaveSettings["Ignoreaimbot"].Allies = false
        end
        if  Options.Ignoreaimbot.Value.Friend == true then
            getgenv().SaveSettings["Ignoreaimbot"].Friend = true
        else
            getgenv().SaveSettings["Ignoreaimbot"].Friend = false
        end
        if  Options.Ignoreaimbot.Value.Team == true then
            getgenv().SaveSettings["Ignoreaimbot"].Team = true
        else
            getgenv().SaveSettings["Ignoreaimbot"].Team = false
        end
        Save()
    end
end)
loaddedlist_ignoreaimbot = true
local saveingirelist = {}
if getgenv().SaveSettings["Ignoreaimbot"].Team then
    saveingirelist.Team = true
end
if getgenv().SaveSettings["Ignoreaimbot"].Friend then
    saveingirelist.Friend = true
end
if getgenv().SaveSettings["Ignoreaimbot"].Allies then
    saveingirelist.Allies = true
end
Options.Ignoreaimbot:SetValue(saveingirelist)




-- no cooldown ability




-- nocooldownSection:AddDropdown('SelectedAbility', {
--     Values = {"Soru","Dash","Geppo"},
--     Default = getindex({"Soru","Dash","Geppo"},getgenv().SaveSettings["AbilitySelected"]),
--     Multi = true,
--     Text = 'Select Ability',
-- })
-- Options.SelectedAbility:OnChanged(function()
--     _G.SelectedAbility = Options.SelectedAbility.Value
-- end)


nocooldownSection:AddDropdown('SelectedAbility', {
    Values = {"Soru","Dash","Geppo"},
    Default = 1,
    Multi = true,
    Text = 'Select Ability',
})
Options.SelectedAbility:OnChanged(function()
    if loaddedlist_abilitynocd then
        if  Options.SelectedAbility.Value.Soru == true then
            getgenv().SaveSettings["AbilityList"].Soru = true
        else
            getgenv().SaveSettings["AbilityList"].Soru = false
        end
        if  Options.SelectedAbility.Value.Dash == true then
            getgenv().SaveSettings["AbilityList"].Dash = true
        else
            getgenv().SaveSettings["AbilityList"].Dash = false
        end
        if  Options.SelectedAbility.Value.Geppo == true then
            getgenv().SaveSettings["AbilityList"].Geppo = true
        else
            getgenv().SaveSettings["AbilityList"].Geppo = false
        end
        Save()
    end
end)
loaddedlist_abilitynocd = true
local saveingabilitylist = {}
if getgenv().SaveSettings["AbilityList"].Soru then
    saveingabilitylist.Soru = true
end
if getgenv().SaveSettings["AbilityList"].Dash then
    saveingabilitylist.Dash = true
end
if getgenv().SaveSettings["AbilityList"].Geppo then
    saveingabilitylist.Geppo = true
end
Options.SelectedAbility:SetValue(saveingabilitylist)
nocooldownSection:AddButton("Remove Cooldown",function()
    for i,v in pairs(getgenv().SaveSettings["AbilityList"]) do
        Modify({i})
    end
end)
TeamSection:AddButton("Pirates",function()
    local args = {
        [1] = "SetTeam",
        [2] = "Pirates"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
TeamSection:AddButton("Marines",function()
    local args = {
        [1] = "SetTeam",
        [2] = "Marines"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)




-- combo tab

autocomboSection:AddToggle('autocombotoggle', {
    Text = 'Enabled',
    Default = getgenv().SaveSettings["autocombotoggle"], 
})
Toggles.autocombotoggle:OnChanged(function()
    if Toggles.autocombotoggle.Value == true then
        getgenv().SaveSettings["autocombotoggle"] = true
        Save()
    elseif Toggles.autocombotoggle.Value == false then
        getgenv().SaveSettings["autocombotoggle"] = false
        Save()
    end
end)
autocomboSection:AddInput('comboFileName', {
    Default = 'fse',
    Numeric = false,
    Finished = true,

    Text = 'Combo file',
})

Options.comboFileName:OnChanged(function()
    if loaddedlist_combofile then
        getgenv().SaveSettings["Locationfilecombo"] = Options.comboFileName.Value
        Save()
    end
end)
loaddedlist_combofile = true
Options.comboFileName:SetValue(getgenv().SaveSettings["Locationfilecombo"])
autocomboSection:AddLabel('Combo Bind'):AddKeyPicker('ComboBind', { 
    Default = 'G', 
    NoUI = true, 
}) 
Library.ComboBind = Options.ComboBind 






-- teleport tab

TeleportIslandSection:AddToggle('teleportisland', {
    Text = 'Teleport Island',
    Default = _G.teleportisland, 
})
Toggles.teleportisland:OnChanged(function()
    if Toggles.teleportisland.Value == true then
        _G.teleportisland = true
    elseif Toggles.teleportisland.Value == false then
        _G.teleportisland = false
        wait()
        for i=1,5 do
            pcall(function()
                Tween2(RootPart.Position,"Vector") 
            end)
        end
    end
end)
local rushteleport = TeleportIslandSection:AddButton('Teleport Island (Quickly)', function()
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
    local timenow = os.time() + 7
    repeat
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[_G.SelectedIsland].Part.CFrame
        task.wait()
    until (game:GetService("Workspace").NPCs:FindFirstChild("Set Home Point") and game:GetService("Workspace").NPCs["Set Home Point"]:FindFirstChild("HumanoidRootPart") and getdistance2(game:GetService("Workspace").NPCs["Set Home Point"].HumanoidRootPart.Position,game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[_G.SelectedIsland].Part.Position) < 1500) or os.time() >= timenow
    repeat
        if (game:GetService("Workspace").NPCs:FindFirstChild("Set Home Point") and game:GetService("Workspace").NPCs["Set Home Point"]:FindFirstChild("HumanoidRootPart") and getdistance2(game:GetService("Workspace").NPCs["Set Home Point"].HumanoidRootPart.Position,game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[_G.SelectedIsland].Part.Position) < 1500) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NPCs["Set Home Point"]:FindFirstChild("HumanoidRootPart").CFrame
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[_G.SelectedIsland].Part.CFrame
        end
        task.wait()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetLastSpawnPoint",_G.SelectedIsland)
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
    until (game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == _G.SelectedIsland and game:GetService("Players").LocalPlayer.Data.LastSpawnPoint.Value == _G.SelectedIsland) or os.time() >= timenow
    if (game:GetService("Players").LocalPlayer.Data.SpawnPoint.Value == _G.SelectedIsland and game:GetService("Players").LocalPlayer.Data.LastSpawnPoint.Value == _G.SelectedIsland) then
        if getgenv().SaveSettings["FastLoadCharacter"] then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Pirates","Deity")
        end
        Library:Notify("Teleport Island | Succesfully",5)
        wait(5)
    else
        Library:Notify("Teleport Island | Failed (Time Out)",5)
    end
end)
rushteleport:AddTooltip("This function will set spawnpoint at seleted location \nand reset character (require PVE)")

local NameOfIsland = {}
for i,v in pairs(IslandTable) do
    table.insert(NameOfIsland,v)
end
TeleportIslandSection:AddDropdown('SelectedIsland', {
    Values = NameOfIsland,
    Default = 1,
    Multi = false,
    Text = 'Select Island',
})
Options.SelectedIsland:OnChanged(function()
    _G.SelectedIsland = Options.SelectedIsland.Value
end)

worldSection:AddButton("Travel Main", function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
end)
worldSection:AddButton("Travel Dressrosa", function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
end)
worldSection:AddButton("Travel Zou", function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
end)

-- auto dugneon

DungeonSection:AddToggle('autokillaura', {
    Text = 'Kill Aura',
    Default = getgenv().SaveSettings["autokillaura"], 
})
Toggles.autokillaura:OnChanged(function()
    if Toggles.autokillaura.Value == true then
        getgenv().SaveSettings["autokillaura"] = true
        Save()
    elseif Toggles.autokillaura.Value == false then
        getgenv().SaveSettings["autokillaura"] = false
        Save()
    end
end)
DungeonSection:AddToggle('autonextisland', {
    Text = 'Next Island',
    Default = getgenv().SaveSettings["autonextisland"], 
})
Toggles.autonextisland:OnChanged(function()
    if Toggles.autonextisland.Value == true then
        getgenv().SaveSettings["autonextisland"] = true
        Save()
    elseif Toggles.autonextisland.Value == false then
        getgenv().SaveSettings["autonextisland"] = false
        Save()
    end
end)
DungeonSection:AddToggle('AutoAwake', {
    Text = 'Auto Awake Skill',
    Default = getgenv().SaveSettings["AutoAwake"], 
})
Toggles.AutoAwake:OnChanged(function()
    if Toggles.AutoAwake.Value == true then
        getgenv().SaveSettings["AutoAwake"] = true
        Save()
    elseif Toggles.AutoAwake.Value == false then
        getgenv().SaveSettings["AutoAwake"] = false
        Save()
    end
end)
DungeonSection:AddToggle('Autobuychip', {
    Text = 'Auto Buy Chip',
    Default = _G.Autobuychip, 
})
Toggles.Autobuychip:OnChanged(function()
    if Toggles.Autobuychip.Value == true then
         _G.Autobuychip = true
        Save()
    elseif Toggles.Autobuychip.Value == false then
         _G.Autobuychip = false
        Save()
    end
end)
DungeonSection:AddToggle('AutoStartDungeon', {
    Text = 'Auto Start Dungeon',
    Default = _G.AutoStartDungeon, 
})
Toggles.AutoStartDungeon:OnChanged(function()
    if Toggles.AutoStartDungeon.Value == true then
         _G.AutoStartDungeon = true
        Save()
    elseif Toggles.AutoStartDungeon.Value == false then
         _G.AutoStartDungeon = false
        Save()
    end
end)

DungeonSettingSection:AddDropdown('selecteddungeontype', {
        Values = {"Flame","Ice","Quake","Light","Dark","String","Rumble","Magma","Buddha","Sand","Phoenix","Dough"},
        Default = getindex({"Flame","Ice","Quake","Light","Dark","String","Rumble","Magma","Buddha","Sand","Phoenix","Dough"},getgenv().SaveSettings["selecteddungeontype"]),
        Multi = false,
        Text = 'Select Dungeon',
    })
Options.selecteddungeontype:OnChanged(function()
	getgenv().SaveSettings["selecteddungeontype"] = Options.selecteddungeontype.Value
	Save()
end)
local DungeonShipData = {
    ["Flame"] = {"RaidsNpc","Select","Flame"},
    ['Ice'] = {"RaidsNpc","Select","Ice"},
    ['Quake'] = {"RaidsNpc","Select","Quake"},
    ['Light'] = {"RaidsNpc","Select","Light"},
    ['Dark'] = {"RaidsNpc","Select","Dark"},
    ['String'] = {"RaidsNpc","Select","String"},
    ['Rumble'] = {"RaidsNpc","Select","Rumble"},
    ['Magma'] = {"RaidsNpc","Select","Magma"},
    ['Buddha'] = {"RaidsNpc","Select","Human: Buddha"},
    ['Sand'] = {"RaidsNpc","Select", "Sand"},
	['Phoenix'] = {"RaidsNpc","Select", "Bird: Phoenix"},
	['Dough'] = {"RaidsNpc","Select", "Dough"},
}
DungeonSettingSection:AddButton('Buy Chip', function() 
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(DungeonShipData[getgenv().SaveSettings["selecteddungeontype"]]))
end)
DungeonSettingSection:AddButton('Start Dungeon', function() 
    if ThirdWorld then
        fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
    end
    if SecondWorld then
        fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
    end
end)
DungeonSettingSection:AddButton('Unlock Ken Haki & Geppo', function() 
    if game.Players.LocalPlayer.Character:FindFirstChild("KenDisabled") then
        game.Players.LocalPlayer.Character:FindFirstChild("KenDisabled"):Destroy()
    elseif game.Players.LocalPlayer.Character:FindFirstChild("GeppoCount") then
        game.Players.LocalPlayer.Character:FindFirstChild("GeppoCount"):Destroy()
    end
end)





-- misc


DevilFruitSection:AddToggle('DevilFruitRandom', {
    Text = 'Auto Random Fruit',
    Default = getgenv().SaveSettings["DevilFruitRandom"], 
})
Toggles.DevilFruitRandom:OnChanged(function()
    if Toggles.DevilFruitRandom.Value == true then
        getgenv().SaveSettings["DevilFruitRandom"] = true
        Save()
    elseif Toggles.DevilFruitRandom.Value == false then
        getgenv().SaveSettings["DevilFruitRandom"] = false
        Save()
    end
end)
DevilFruitSection:AddToggle('DevilFruitStore', {
    Text = 'Auto Store Fruit',
    Default = getgenv().SaveSettings["DevilFruitStore"], 
})
Toggles.DevilFruitStore:OnChanged(function()
    if Toggles.DevilFruitStore.Value == true then
        getgenv().SaveSettings["DevilFruitStore"] = true
        Save()
    elseif Toggles.DevilFruitStore.Value == false then
        getgenv().SaveSettings["DevilFruitStore"] = false
        Save()
    end
end)
DevilFruitSection:AddButton("Fruit Shop",function()
    Plr.PlayerGui.Main.FruitShop.Visible = not Plr.PlayerGui.Main.FruitShop.Visible
end)

-- warppppp





StealBoatSection:AddDropdown('SelectedBoat', {
    Values = Refresh("Boat"),
    Default = 1,
    Multi = false,
    Text = 'Attack Method (Next Generation)',
})

Options.SelectedBoat:OnChanged(function()
    local bosslist = Refresh("Boat")
    Options.SelectedBoat.Values = bosslist
    Options.SelectedBoat:SetValues()
	_G.BoatSelected = Options.SelectedBoat.Value
end)
StealBoatSection:AddButton("Steel",function()
    RootPart.CFrame = game:GetService("Workspace").Boats[_G.BoatSelected].VehicleSeat.CFrame
end)

-- warppp

CombatSection:AddButton("Black Leg", function()
    local args = {
        [1] = "BuyBlackLeg"
    }

    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Electro", function()
    local args = {
        [1] = "BuyElectro"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Fishman Karate", function()
    local args = {
        [1] = "BuyFishmanKarate"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Dragon Claw", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "1"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Super Human", function()
    local args = {
        [1] = "BuySuperhuman"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Death Step", function()
    local args = {
        [1] = "BuyDeathStep"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate",
        [2] = true
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

    local args = {
        [1] = "BuySharkmanKarate"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw",
        [2] = true
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    local args = {
        [1] = "BuyElectricClaw"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
CombatSection:AddButton("God Human", function()
    local args = {
        [1] = "BuyGodhuman"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Kabucha (2,500 Fragments)",function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "Slingshot",
        [3] = "1"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Slingshot (5,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Slingshot"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Musket (8,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Musket"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Flintlock (10,500 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Flintlock"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Refined Slingshot (30,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Refined Slingshot"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Refined Slingshot (30,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Refined Slingshot"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Refined Flintlock (65,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Refined Flintlock"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Cannon (100,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Cannon"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
GunSection:AddButton("Bizarre Rifle (25 Ectoplasm)",function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Ectoplasm","Buy",1,1)
end)



SwordSection:AddButton("Katana (1,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Katana"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Cutlass (1,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Cutlass"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Dual Katana (12,000 Beli)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Dual Katana"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Iron Mace (25,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Iron Mace"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Soul Cane (750,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Soul Cane"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Dual-Deaded Blade (400,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Dual-Deaded Blade"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Bisento (1,000,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Bisento"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Triple Katana (60,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Triple Katana"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
SwordSection:AddButton("Pipe (100,000)",function()
    local args = {
        [1] = "BuyItem",
        [2] = "Pipe"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)




--fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
function genimage()
    _G.hidebeli = true
    function getitemfromiven(Name)
        Plr.PlayerGui.Main.InventoryContainer.Right.Content.Search.TextBox.Text = Name
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
            if v:FindFirstChild("ItemName") and v.ItemName.Text == Name and v.Icon.Visible then
                return v 
            end
        end
        return "Not Found"
    end
    function checkmelee(Style)
        local args = {
            [1] = "Buy"..Style,
            [2] = true
        }
        return game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
    
    
    if Plr.PlayerGui.Main.HP.Visible then
        Plr.PlayerGui.Main.HP.Visible = false 
    end
    if Plr.PlayerGui.Main.Energy.Visible then
        Plr.PlayerGui.Main.Energy.Visible = false 
    end
    if Plr.PlayerGui.Main.Level.Visible then
        Plr.PlayerGui.Main.Level.Visible = false 
    end
    if Plr.PlayerGui.Main.Beli.Visible then
        Plr.PlayerGui.Main.Beli.Visible = false 
    end
    if Plr.PlayerGui.Main.StatsButton.Visible then
        Plr.PlayerGui.Main.StatsButton.Visible = false 
    end
    if Plr.PlayerGui.Main.ShopButton.Visible then
        Plr.PlayerGui.Main.ShopButton.Visible = false 
    end
    if Plr.PlayerGui.Main.InventoryButton.Visible then
        Plr.PlayerGui.Main.InventoryButton.Visible = false 
    end
    if Plr.PlayerGui.Main.MenuButton.Visible then
        Plr.PlayerGui.Main.MenuButton.Visible = false 
    end    
    if Plr.PlayerGui.Main.Code.Visible then 
        Plr.PlayerGui.Main.Code.Visible = false 
    end   
    if Plr.PlayerGui.Main.CrewButton.Visible then 
        Plr.PlayerGui.Main.CrewButton.Visible = false 
    end 
    if Plr.PlayerGui.Main.HomeButton.Visible then 
        Plr.PlayerGui.Main.HomeButton.Visible = false 
    end 
    if Plr.PlayerGui.Main.Mute.Visible then 
        Plr.PlayerGui.Main.Mute.Visible = false 
    end 
    if Plr.PlayerGui.Main.Settings.Visible then 
        Plr.PlayerGui.Main.Settings.Visible = false 
    end 
    if Plr.PlayerGui.Main.AlliesButton.Visible then 
        Plr.PlayerGui.Main.AlliesButton.Visible = false 
    end 
    if Plr.PlayerGui.Main.Compass.Visible then 
        Plr.PlayerGui.Main.Compass.Visible = false 
    end 
    if not Plr.PlayerGui.Main.FruitInventory.Visible then 
        Plr.PlayerGui.Main.FruitInventory.Visible = true 
    end 
    Plr.PlayerGui.Main.FruitInventory.Position = UDim2.new(15,0,15,0)
    if not Plr.PlayerGui.Main.AwakeningToggler.Visible then 
        Plr.PlayerGui.Main.AwakeningToggler.Visible = true 
    end 
    Plr.PlayerGui.Main.AwakeningToggler.Size = UDim2.new(0.2,0,0.2,0)
    Plr.PlayerGui.Main.AwakeningToggler.Position = UDim2.new(0.5,0,0.9,0)
    
    if game.CoreGui:FindFirstChild("ShowData") then
        game.CoreGui:FindFirstChild("ShowData"):Destroy()
    end
    if game.CoreGui:FindFirstChild("ShowData") then
        game.CoreGui:FindFirstChild("ShowData"):Destroy()
    end
    local folder = Instance.new("Folder",game.CoreGui)
    folder.Name = "ShowData"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    -- UI
    
    local ScreenGui = Instance.new("ScreenGui")
    local TextLable = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local combatstyle = Instance.new("Frame")
    local UIGridLayout = Instance.new("UIGridLayout")
    
    
    local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
    local weapon = Instance.new("Frame")
    local UIGridLayout_2 = Instance.new("UIGridLayout")
    
    
    local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
    
    local fruit = Instance.new("Frame")
    local UIGridLayout_3 = Instance.new("UIGridLayout")
    local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")
    
    
    ScreenGui.Parent = game.CoreGui.ShowData
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    TextLable.Name = "TextLable"
    TextLable.Parent = ScreenGui
    TextLable.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLable.BackgroundTransparency = 1
    TextLable.Position = UDim2.new(0.00498442352, 0, 0.697674394, 0)
    TextLable.Size = UDim2.new(0.309657335, 0, 0.302325577, 0)
    
    UIListLayout.Parent = TextLable
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    
    UIAspectRatioConstraint.Parent = TextLable
    UIAspectRatioConstraint.AspectRatio = 2.012
    
    combatstyle.Name = "combat style"
    combatstyle.Parent = ScreenGui
    combatstyle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    combatstyle.BackgroundTransparency = 1
    combatstyle.Position = UDim2.new(0.00498442352, 0, 0.0220318232, 0)
    combatstyle.Size = UDim2.new(0.373831779, 0, 0.122399017, 0)
    
    UIGridLayout.Parent = combatstyle
    UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout.CellSize = UDim2.new(0, 95, 0, 95)
    
    
    UIAspectRatioConstraint_3.Parent = combatstyle
    UIAspectRatioConstraint_3.AspectRatio = 6.000
    
    weapon.Name = "weapon"
    weapon.Parent = ScreenGui
    weapon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    weapon.BackgroundTransparency = 1
    weapon.Position = UDim2.new(0.00498442352, 0, 0.181150556, 0)
    weapon.Size = UDim2.new(0.309657335, 0, 0.493268043, 0)
    
    UIGridLayout_2.Parent = weapon
    UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout_2.CellSize = UDim2.new(0, 92, 0, 92)
    
    UIAspectRatioConstraint_5.Parent = weapon
    UIAspectRatioConstraint_5.AspectRatio = 1.233
    
    fruit.Name = "fruit"
    fruit.Parent = ScreenGui
    fruit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    fruit.BackgroundTransparency = 1
    fruit.Position = UDim2.new(0.678504646, 0, 0.0220318232, 0)
    fruit.Size = UDim2.new(0.309657365, 0, 0.552019596, 0)
    
    UIGridLayout_3.Parent = fruit
    UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout_3.CellSize = UDim2.new(0, 93 , 0, 93)
    UIGridLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Right
    
    UIAspectRatioConstraint_10.Parent = fruit
    UIAspectRatioConstraint_10.AspectRatio = 1.233
    
    function addfruit(pathh)
        local Template_3 = pathh:Clone()
        -- local Template_3 = Instance.new("ImageLabel")
        local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")
        Template_3.Name = "Template"
        Template_3.Parent = fruit
        Template_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Template_3.Size = UDim2.new(0.191146865, 0, 0.235732004, 0)
        Template_3.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        UIAspectRatioConstraint_9.Parent = Template_3
    end
    function gettipitem(Tip)
        for i,v in pairs(Plr.Backpack:GetChildren()) do
            if v.ToolTip == Tip then
                return v
            end
        end
    end
    
    
    function addcombat(assetid)
        local Template = Instance.new("ImageLabel")
        Template.Name = "Template"
        Template.Parent = combatstyle
        Template.BackgroundTransparency = 1
        Template.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Template.Size = UDim2.new(0.158333331, 0, 0.949999988, 0)
        Template.Image = assetid
        local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
        UIAspectRatioConstraint_2.Parent = Template
    end
    function addweapon(Pathh) 
        local Template_2 = Pathh:Clone()
        Template_2.Name = "Template"
        Template_2.Parent = weapon
        local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
        UIAspectRatioConstraint_4.Parent = Template_2
    end
    function getmastery(Weapon)
        Plr.Character.Humanoid:EquipTool(Weapon)
        wait(0.3)
        Plr.PlayerGui.Main.Skills.Visible = true
        Plr.PlayerGui.Main.Skills.BackgroundTransparency = 1
        Plr.PlayerGui.Main.Skills.Title.BackgroundTransparency = 0.3
        for i,v in pairs(Plr.PlayerGui.Main.Skills:GetChildren()) do
            if v.Name ~= "Title" and v.Name ~= "Level" and v.Name ~= "Rage" then
                v.Visible = false
            end
        end
        local masteryt = Plr.PlayerGui.Main.Skills:Clone()
        return masteryt
    end
    
    
    
    
    
    
    
    -- check combat style
    
    if checkmelee("Superhuman") == 1 then
        addcombat("rbxassetid://4831781711")
    end
    if checkmelee("DeathStep") == 1 then
        addcombat("rbxassetid://6085350468")
    end
    if checkmelee("SharkmanKarate") == 1 then
        addcombat("rbxassetid://6525157144")
    end
    if checkmelee("ElectricClaw") == 1 then
        addcombat("rbxassetid://6866994470")
    end
    if checkmelee("DragonTalon") == 1 then
        addcombat("rbxassetid://7831677967")
    end
    if checkmelee("Godhuman") == 1 then
        addcombat("rbxassetid://10338473987")
    end
    
    -- check weapon
    
    if getitemfromiven("Pole (1st Form)") ~= "Not Found" then
        addweapon(getitemfromiven("Pole (1st Form)"))
    end
    if getitemfromiven("Saddi") ~= "Not Found" then
        addweapon(getitemfromiven("Saddi"))
    end
    if getitemfromiven("Saber") ~= "Not Found" then
        addweapon(getitemfromiven("Saber"))
    end
    if getitemfromiven("Pole (2nd Form)") ~= "Not Found" then
        addweapon(getitemfromiven("Pole (2nd Form)"))
    end
    if getitemfromiven("Wando") ~= "Not Found" then
        addweapon(getitemfromiven("Wando"))
    end
    if getitemfromiven("Shisui") ~= "Not Found" then
        addweapon(getitemfromiven("Shisui"))
    end
    if getitemfromiven("True Triple Katana") ~= "Not Found" then
        addweapon(getitemfromiven("True Triple Katana"))
    end
    if getitemfromiven("Koko") ~= "Not Found" then
        addweapon(getitemfromiven("Koko"))
    end
    if getitemfromiven("Midnight Blade") ~= "Not Found" then
        addweapon(getitemfromiven("Midnight Blade"))
    end
    if getitemfromiven("Rengoku") ~= "Not Found" then
        addweapon(getitemfromiven("Rengoku"))
    end
    if getitemfromiven("Tushita") ~= "Not Found" then
        addweapon(getitemfromiven("Tushita"))
    end
    if getitemfromiven("Yama") ~= "Not Found" then
        addweapon(getitemfromiven("Yama"))
    end
    if getitemfromiven("Dark Dagger") ~= "Not Found" then
        addweapon(getitemfromiven("Dark Dagger"))
    end
    if getitemfromiven("Canvander") ~= "Not Found" then
        addweapon(getitemfromiven("Canvander"))
    end
    if getitemfromiven("Hallow Scythe") ~= "Not Found" then
        addweapon(getitemfromiven("Hallow Scythe"))
    end
    if getitemfromiven("Buddy Sword") ~= "Not Found" then
        addweapon(getitemfromiven("Buddy Sword"))
    end
    if getitemfromiven("Spikey Trident") ~= "Not Found" then
        addweapon(getitemfromiven("Spikey Trident"))
    end
    if getitemfromiven("Dark Blade") ~= "Not Found" then
        addweapon(getitemfromiven("Dark Blade"))
    end
    if getitemfromiven("Triple Dark Blade") ~= "Not Found" then
        addweapon(getitemfromiven("Triple Dark Blade"))
    end
    
    -- icon shop

    if syn and getgenv().SaveSettings["ShowIconShop"] then
        local url = getgenv().SaveSettings["IconShop"]
        local z,b = xpcall(function()
            writefile(getgenv().SaveSettings["ShopName"]..'.png', syn.request({Url=url}).Body)
        end,function()
            return Library:Notify("Fail to load image",5)
        end)
        local LogoShop = Instance.new("ImageLabel")
        local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
        local TextLabel = Instance.new("TextLabel")
        local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
        local id = Instance.new("TextLabel")
        local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
        LogoShop.Name = "LogoShop"
        LogoShop.Parent = game.CoreGui.ShowData.ScreenGui
        LogoShop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        LogoShop.BackgroundTransparency = 1
        
        LogoShop.Position = UDim2.new(0.003,0,0.85,0)
        LogoShop.Size = UDim2.new(0.0697819293, 0, 0.137086898, 0)
        LogoShop.Image = getsynasset(getgenv().SaveSettings["ShopName"]..".png")
        -- TextLabel.Parent = LogoShop
        -- TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        -- TextLabel.BackgroundTransparency = 1.000
        -- TextLabel.Position = UDim2.new(-0.339285731, 0, 1, 0)
        -- TextLabel.Size = UDim2.new(1.78571439, 0, 0.446428597, 0)
        -- TextLabel.Font = Enum.Font.GothamBold
        -- TextLabel.Text = getgenv().SaveSettings["ShopName"]
        -- TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        -- TextLabel.TextScaled = true
        -- TextLabel.TextSize = 14.000
        -- TextLabel.TextWrapped = true
        -- UIAspectRatioConstraint_7.Parent = TextLabel
        -- UIAspectRatioConstraint_7.AspectRatio = 4.000
        -- UIAspectRatioConstraint_6.Parent = LogoShop 
        -- id.Name = "id"
        -- id.Parent = LogoShop
        -- id.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        -- id.BackgroundTransparency = 1.000
        -- id.Position = UDim2.new(-0.0178571437, 0, 1.38392866, 0)
        -- id.Size = UDim2.new(1.03571439, 0, 0.258928597, 0)
        -- id.Font = Enum.Font.GothamBold
        -- id.Text = "ID ".. _G.NumberID
        -- id.TextColor3 = Color3.fromRGB(255, 255, 255)
        -- id.TextScaled = true
        -- id.TextSize = 14.000
        -- id.TextWrapped = true
        
        -- UIAspectRatioConstraint_8.Parent = id
        -- UIAspectRatioConstraint_8.AspectRatio = 4.000
    end
    
    
    
    
    
    
    
    
    local function format(number)
        local i, k, j = tostring(number):match("(%-?%d?)(%d*)(%.?.*)")
        return i..k:reverse():gsub("(%d%d%d)", "%1,"):reverse()..j
    end
    
    -- show text label
    
    
    
    -- local NameUer = Plr.PlayerGui.Main.Beli:Clone()
    -- NameUer.Parent = folder.ScreenGui
    -- NameUer.Name = "UserName"
    -- NameUer.Visible = true
    -- NameUer.Position = UDim2.new(0.003,0,0.78,0)
    -- NameUer.Text = Plr.Name 
    -- NameUer.TextColor3 = Color3.fromRGB(255,255,255)
    
    if getgenv().SaveSettings["ShowIconShop"] then
        local NameUer = Plr.PlayerGui.Main.Beli:Clone()
        NameUer.Parent = folder.ScreenGui
        NameUer.Name = "Lv"
        NameUer.Visible = true
        NameUer.Position = UDim2.new(0.09,0,0.83,0)
        NameUer.Text = "Lv. " .. Plr.Data.Level.Value
        NameUer.TextColor3 = Color3.fromRGB(255,255,255)
        
        local NameUer = Plr.PlayerGui.Main.Beli:Clone()
        NameUer.Parent = folder.ScreenGui
        NameUer.Name = "Lv"
        NameUer.Visible = true
        NameUer.Position = UDim2.new(0.09,0,0.88,0)
        NameUer.Text = "\198\146"..format(Plr.Data.Fragments.Value)
        NameUer.TextColor3 = Color3.fromRGB(152, 113, 245)
        
        local moneytemplate = Plr.PlayerGui.Main.Beli:Clone()
        moneytemplate.Parent = folder.ScreenGui
        moneytemplate.Visible = true
        moneytemplate.Position = UDim2.new(0.09,0,0.93,0)
    else
        local NameUer = Plr.PlayerGui.Main.Beli:Clone()
        NameUer.Parent = folder.ScreenGui
        NameUer.Name = "Lv"
        NameUer.Visible = true
        NameUer.Position = UDim2.new(0.003,0,0.83,0)
        NameUer.Text = "Lv. " .. Plr.Data.Level.Value
        NameUer.TextColor3 = Color3.fromRGB(255,255,255)
        
        local NameUer = Plr.PlayerGui.Main.Beli:Clone()
        NameUer.Parent = folder.ScreenGui
        NameUer.Name = "Lv"
        NameUer.Visible = true
        NameUer.Position = UDim2.new(0.003,0,0.88,0)
        NameUer.Text = "\198\146"..format(Plr.Data.Fragments.Value)
        NameUer.TextColor3 = Color3.fromRGB(152, 113, 245)
        
        local moneytemplate = Plr.PlayerGui.Main.Beli:Clone()
        moneytemplate.Parent = folder.ScreenGui
        moneytemplate.Visible = true
        moneytemplate.Position = UDim2.new(0.003,0,0.93,0)
    end
    
    
    
    for i,v in pairs(Plr.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:GetChildren()) do
        if v.Name ~= "Template" and v.Name ~= "UIGridLayout" then
            addfruit(v)
        end
    end
    
    local swordmas = getmastery(gettipitem("Sword"))
    swordmas.Position = UDim2.new(0.825,0,0.88,0)
    swordmas.Parent = game:GetService("CoreGui").ShowData.ScreenGui
    
    local Combatmas = getmastery(gettipitem("Melee"))
    Combatmas.Position = UDim2.new(0.825,0,0.73,0)
    Combatmas.Parent = game:GetService("CoreGui").ShowData.ScreenGui
    
    local BloxFruitmas = getmastery(gettipitem("Blox Fruit"))
    BloxFruitmas.Position = UDim2.new(0.825,0,0.6,0)
    BloxFruitmas.Parent = game:GetService("CoreGui").ShowData.ScreenGui
    
    
    
    
    if Plr.Character.HumanoidRootPart:FindFirstChild("CrewBBG") then
        Plr.Character.HumanoidRootPart:FindFirstChild("CrewBBG"):Destroy()
    end
    
    if Plr.PlayerGui.Main.PvpDisabled.Visible then
        Plr.PlayerGui.Main.PvpDisabled.Visible = false
    end
    
    if Plr.PlayerGui.Main.SafeZone.Visible then
        Plr.PlayerGui.Main.SafeZone.Visible = false
    end
    

end

GenerateImageSection:AddToggle('IconShop', {
    Text = 'Show Icon Shop',
    Default = getgenv().SaveSettings["ShowIconShop"], 
    Tooltip = "Synapse X Only"
})
Toggles.IconShop:OnChanged(function()
    if syn then
        if Toggles.IconShop.Value == true then
            getgenv().SaveSettings["ShowIconShop"] = true
            Save()
        elseif Toggles.IconShop.Value == false then
            getgenv().SaveSettings["ShowIconShop"] = false
            Save()
        end
    end
end)
GenerateImageSection:AddInput('ShopName', {
    Default = getgenv().SaveSettings["ShopName"],
    Numeric = false,
    Finished = false, -- true / false, only calls callback when you press enter
    Text = 'Logo Name',
    Tooltip = "Synapse X Only"
})
Options.ShopName:OnChanged(function()
    getgenv().SaveSettings["ShopName"] = Options.ShopName.Value
    Save()
end)
GenerateImageSection:AddInput('URLLogoShop', {
    Default = getgenv().SaveSettings["IconShop"],
    Numeric = false,
    Finished = false, -- true / false, only calls callback when you press enter
    Text = 'URL Logo Shop',
    Tooltip = "Synapse X Only"
})
Options.URLLogoShop:OnChanged(function()
    getgenv().SaveSettings["IconShop"] = Options.URLLogoShop.Value
    Save()
end)
GenerateImageSection:AddLabel(" ")

function Unload()
    _G.hidebeli = false
    local Plr = game.Players.LocalPlayer
    if not Plr.PlayerGui.Main.HP.Visible then
        Plr.PlayerGui.Main.HP.Visible = true 
    end
    if not Plr.PlayerGui.Main.Energy.Visible then
        Plr.PlayerGui.Main.Energy.Visible = true 
    end
    if not Plr.PlayerGui.Main.Level.Visible then
        Plr.PlayerGui.Main.Level.Visible = true 
    end
    if not Plr.PlayerGui.Main.Beli.Visible then
        Plr.PlayerGui.Main.Beli.Visible = true 
    end
    if not Plr.PlayerGui.Main.StatsButton.Visible then
        Plr.PlayerGui.Main.StatsButton.Visible = true 
    end
    if not Plr.PlayerGui.Main.ShopButton.Visible then
        Plr.PlayerGui.Main.ShopButton.Visible = true 
    end
    if not Plr.PlayerGui.Main.InventoryButton.Visible then
        Plr.PlayerGui.Main.InventoryButton.Visible = true 
    end
    if not Plr.PlayerGui.Main.MenuButton.Visible then
        Plr.PlayerGui.Main.MenuButton.Visible = true 
    end    
    if not Plr.PlayerGui.Main.Code.Visible then 
        Plr.PlayerGui.Main.Code.Visible = true 
    end   
    if not Plr.PlayerGui.Main.CrewButton.Visible then 
        Plr.PlayerGui.Main.CrewButton.Visible = true 
    end 
    if not Plr.PlayerGui.Main.HomeButton.Visible then 
        Plr.PlayerGui.Main.HomeButton.Visible = true 
    end 
    if not Plr.PlayerGui.Main.Mute.Visible then 
        Plr.PlayerGui.Main.Mute.Visible = true 
    end 
    if not Plr.PlayerGui.Main.Settings.Visible then 
        Plr.PlayerGui.Main.Settings.Visible = true 
    end 
    if not Plr.PlayerGui.Main.AlliesButton.Visible then 
        Plr.PlayerGui.Main.AlliesButton.Visible = true 
    end 
    if not Plr.PlayerGui.Main.Compass.Visible then 
        Plr.PlayerGui.Main.Compass.Visible = true 
    end 
    if not Plr.PlayerGui.Main.FruitInventory.Visible then 
        Plr.PlayerGui.Main.FruitInventory.Visible = false 
    end 
    Plr.PlayerGui.Main.FruitInventory.Position = UDim2.new(15,0,15,0)
    if Plr.PlayerGui.Main.AwakeningToggler.Visible then 
        Plr.PlayerGui.Main.AwakeningToggler.Visible = false 
    end 
    Plr.PlayerGui.Main.AwakeningToggler.Size = UDim2.new(0.2,0,0.2,0)
    Plr.PlayerGui.Main.AwakeningToggler.Position = UDim2.new(0.5,0,0.9,0)
    
    if game.CoreGui:FindFirstChild("ShowData") then
        game.CoreGui:FindFirstChild("ShowData"):Destroy()
    end
    if game.CoreGui:FindFirstChild("ShowData") then
        game.CoreGui:FindFirstChild("ShowData"):Destroy()
    end
    Plr.PlayerGui.Main.Skills.BackgroundTransparency = 0.3
    Plr.PlayerGui.Main.Skills.Title.BackgroundTransparency = 0.3
    for i,v in pairs(Plr.PlayerGui.Main.Skills:GetChildren()) do
        if v.Name ~= "Title" and v.Name ~= "Level" and v.Name ~= "Rage" then
            v.Visible = true
        end
    end
end

GenerateImageSection:AddButton("Unload Photo",Unload)
GenerateImageSection:AddButton("Generate Photo",genimage)

spawn(function()
    while wait() do
        if _G.hidebeli then
            if Plr.PlayerGui.Main.Beli.Visible then
                Plr.PlayerGui.Main.Beli.Visible = false 
            end
        end
    end
end)


-- setting



local MenuGroup = Tabs['UI Settings']:AddRightGroupbox('Global Settings')
local Server = Tabs['UI Settings']:AddRightGroupbox('Server')
-- MenuGroup:AddDropdown('SelectUILanguage', {
--     Values = {"Thailand","English"},
--     Default = getgenv().SaveSettings["UI Language"],
--     Multi = false,
--     Text = 'Select UI Language',
-- })

-- Options.SelectUILanguage:OnChanged(function()
--     if Options.SelectUILanguage.Value == "Thailand" then
--         getgenv().SaveSettings["UI Language"] = 1
--         Save()
--     else
--         getgenv().SaveSettings["UI Language"] = 2
--         Save()
--     end
-- end)
MenuGroup:AddToggle('whitescreen', {
    Text = 'White Screen (GPU 0%)',
    Default = getgenv().SaveSettings["whitescreen"], 
})
Toggles.whitescreen:OnChanged(function()
    if Toggles.whitescreen.Value == true then
        getgenv().SaveSettings["whitescreen"] = true
        Save()
    elseif Toggles.whitescreen.Value == false then
        getgenv().SaveSettings["whitescreen"] = false
        Save()
    end
end)
MenuGroup:AddDropdown('SelectedNextGenFastAttack', {
        Values = {"Extreme","Normal","Default"},
        Default = getindex({"Extreme","Normal","Default"},getgenv().SaveSettings["SelectedNextGenFastAttack"]),
        Multi = false,
        Text = 'Attack Method (Next Generation)',
    })
Options.SelectedNextGenFastAttack:OnChanged(function()
	getgenv().SaveSettings["SelectedNextGenFastAttack"] = Options.SelectedNextGenFastAttack.Value
	Save()
end)
MenuGroup:AddDropdown('SelectedNextGenTeleport', {
        Values = {"Set Spawn","Tween"},
        Default = getindex({"Set Spawn","Tween"},getgenv().SaveSettings["SelectedNextGenTeleport"]),
        Multi = false,
        Text = 'Travel Method (Next Generation)',
    })
Options.SelectedNextGenTeleport:OnChanged(function()
	getgenv().SaveSettings["SelectedNextGenTeleport"] = Options.SelectedNextGenTeleport.Value
	Save()
end)

Server:AddButton("Rejoin Server",function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, Plr)
end)
Server:AddButton("Hop Server",HopServer)
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' }) 
Library.ToggleKeybind = Options.MenuKeybind 
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
























































-- script


-- local highlights = {}

-- function esp(target, color)
--     pcall(function()
--         if target.Character then
--             if not highlights[target] then
--                 local highlight = Instance.new("Highlight", game:GetService("CoreGui"))
--                 highlight.Name = target.Name
--                 highlight.Adornee = target.Character
--                 highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
--                 highlight.FillColor = color
--                 highlight.Visible = false
--                 highlights[target] = highlight
--             else
--                 highlights[target].FillColor = color
--             end
--         end
--     end)
-- end

-- game:GetService("Players").PlayerAdded:Connect(function(v)
--     v.CharacterAdded:Connect(function()
--         esp(v, Color3.fromRGB(getgenv().SaveSettings["PlayerColor"].R*255, getgenv().SaveSettings["PlayerColor"].G*255, getgenv().SaveSettings["PlayerColor"].B*255) and v.TeamColor.Color or ((plr.TeamColor == v.TeamColor) and Color3.fromRGB(getgenv().SaveSettings["tragetcolor"].R*255, getgenv().SaveSettings["tragetcolor"].G*255, getgenv().SaveSettings["tragetcolor"].B*255)))
--     end)
-- end)

-- game:GetService("Players").PlayerRemoving:Connect(function(v)
--     if highlights[v] then
--         highlights[v]:Destroy()
--         highlights[v] = nil
--     end
-- end)

-- for i, v in pairs(game:GetService("Players"):GetPlayers()) do
--     if v ~= game:GetService("Players").LocalPlayer then
--         local color = Color3.fromRGB(getgenv().SaveSettings["PlayerColor"].R*255, getgenv().SaveSettings["PlayerColor"].G*255, getgenv().SaveSettings["PlayerColor"].B*255) and v.TeamColor.Color or ((plr.TeamColor == v.TeamColor) and Color3.fromRGB(getgenv().SaveSettings["tragetcolor"].R*255, getgenv().SaveSettings["tragetcolor"].G*255, getgenv().SaveSettings["tragetcolor"].B*255))
--         v.CharacterAdded:Connect(function()
--             local color = Color3.fromRGB(getgenv().SaveSettings["PlayerColor"].R*255, getgenv().SaveSettings["PlayerColor"].G*255, getgenv().SaveSettings["PlayerColor"].B*255) and v.TeamColor.Color or ((plr.TeamColor == v.TeamColor) and Color3.fromRGB(getgenv().SaveSettings["tragetcolor"].R*255, getgenv().SaveSettings["tragetcolor"].G*255, getgenv().SaveSettings["tragetcolor"].B*255))
--             esp(v, color)
--         end)
        
--         esp(v, color)
--     end
-- end

-- spawn(function()
--     while task.wait() do
--         for i, v in pairs(highlights) do
--             local color = Color3.fromRGB(getgenv().SaveSettings["PlayerColor"].R*255, getgenv().SaveSettings["PlayerColor"].G*255, getgenv().SaveSettings["PlayerColor"].B*255) and i.TeamColor.Color or ((plr.TeamColor == i.TeamColor) and Color3.fromRGB(getgenv().SaveSettings["tragetcolor"].R*255, getgenv().SaveSettings["tragetcolor"].G*255, getgenv().SaveSettings["tragetcolor"].B*255))
--             v.FillColor = color
--             if getgenv().SaveSettings["ESPPLAYERoutline"] then
--                 v.Visible = true
--             else
--                 v.Visible = false
--             end
--         end
--     end
-- end)




spawn(function()
    while wait() do
        Controller = Tablereturn().activeController
        if getgenv().SaveSettings["FastLoadCharacter"] and Hum.Health <= 0 then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Pirates","Deity")
            wait(3)
        end
    end
end)
spawn(function()
    while wait() do
        pcall(function()
            if _G.teleportisland then
                Tween2(game:GetService("Workspace")["_WorldOrigin"].PlayerSpawns.Pirates[_G.SelectedIsland].Part.CFrame.Position,"Vector")
            end
        end)
    end
end)





------------ Quest ------------

if not game:GetService("Workspace"):FindFirstChild("QuestPosition") then
    local QuestPos = Instance.new("Part",game.Workspace)
    QuestPos.Anchored = true
    QuestPos.Transparency = 1 
    QuestPos.CanCollide = false
    QuestPos.Name = "QuestPosition"
end

function GetQuestData(data,Method)
    if data == "Mon" then
        if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible then
            local Text = game.Players.LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text:split(" ")
            local RealText = ""
            local List = #Text
            local Is = true
            if Text[List]:find("/1)") then
                Is = false
            end
            table.remove(Text,1)
            table.remove(Text,1)
            table.remove(Text,#Text)
            for i=1,#Text do local v = Text[i]
                RealText = RealText..v
                if #Text ~= i then
                    RealText = RealText.." "
                end
            end
            if Is then
                RealText = RealText:sub(1,#RealText-1)
            end
            return RealText
        end
    elseif data == "PositionQuest" then
        local Npc = require(game:GetService("ReplicatedStorage").GuideModule)
        local CFrameQuest
        for i,v in pairs(Npc.Data.NPCList) do
            if v.NPCName == Npc.Data.LastClosestNPC then
                game.Workspace.QuestPosition.CFrame = CFrame.new(v.Position)
                if Method == "Vector" then
                    CFrameQuest = game.Workspace.QuestPosition.Position
                else
                    CFrameQuest = game.Workspace.QuestPosition.CFrame
                end
            end
        end
        return CFrameQuest
    elseif data == "Quest" then
        Level = game.Players.LocalPlayer.Data.Level.Value
        local ValueQuest
        local IndexQuest
        -- First Sea
        if game.PlaceId == 2753915549 then
            if Level == 1 or Level <= 9 then
                 ValueQuest = "BanditQuest1"
                 IndexQuest = 1
            elseif Level == 10 or Level <= 14 then
                 ValueQuest = "JungleQuest"
                 IndexQuest = 1
            elseif Level == 15 or Level <= 29 then
                 ValueQuest = "JungleQuest"
                 IndexQuest = 2
            elseif Level == 30 or Level <= 39 then
                 ValueQuest = "BuggyQuest1"
                 IndexQuest = 1
            elseif Level == 40 or Level <= 59 then
                 ValueQuest = "BuggyQuest1"
                 IndexQuest = 2
            elseif Level == 60 or Level <= 74 then
                 ValueQuest = "DesertQuest"
                 IndexQuest = 1
            elseif Level == 75 or Level <= 89 then
                 ValueQuest = "DesertQuest"
                 IndexQuest = 2
            elseif Level == 90 or Level <= 99 then
                 ValueQuest = "SnowQuest"
                 IndexQuest = 1
            elseif Level == 100 or Level <= 119 then
                 ValueQuest = "SnowQuest"
                 IndexQuest = 2
            elseif Level == 120 or Level <= 149 then 
                 ValueQuest = "MarineQuest2"
                 IndexQuest = 1
            elseif Level == 150 or Level <= 174 then
                 ValueQuest = "SkyQuest"
                 IndexQuest = 1
            elseif Level == 174 or Level <= 189 then
                 ValueQuest = "SkyQuest"
                 IndexQuest = 2
            elseif Level == 190 or Level <= 249 then
                 ValueQuest = "PrisonerQuest"
                 IndexQuest = 1
            -- elseif Level == 220 or Level <= 224 then
            --      ValueQuest = "PrisonerQuest"
            --      IndexQuest = 2
            elseif Level == 250  or Level <= 274 then
                 ValueQuest = "ColosseumQuest"
                 IndexQuest = 1
            elseif Level == 275  or Level <= 299 then
                 ValueQuest = "ColosseumQuest"
                 IndexQuest = 2
            elseif Level == 300  or Level <= 329 then
                 ValueQuest = "MagmaQuest"
                 IndexQuest = 1
            elseif Level == 330  or Level <= 374 then
                 ValueQuest = "MagmaQuest"
                 IndexQuest = 2
            elseif Level == 375  or Level <= 399 then
                 ValueQuest = "FishmanQuest"
                 IndexQuest = 1
            elseif Level == 400  or Level <= 449 then
                 ValueQuest = "FishmanQuest"
                 IndexQuest = 2
            elseif Level == 450  or Level <= 474 then
                 ValueQuest = "SkyExp1Quest"
                 IndexQuest = 1
            elseif Level == 475  or Level <= 524 then
                 ValueQuest = "SkyExp1Quest"
                 IndexQuest = 2
            elseif Level == 525  or Level <= 549 then
                 ValueQuest = "SkyExp2Quest"
                 IndexQuest = 1
            elseif Level == 550  or Level <= 624 then
                 ValueQuest = "SkyExp2Quest"
                 IndexQuest = 2
            elseif Level == 625  or Level <= 649 then
                 ValueQuest = "FountainQuest"
                 IndexQuest = 1
            elseif Level >= 650  then
                 ValueQuest = "FountainQuest"
                 IndexQuest = 2
            end
        -- Second Sea
        elseif game.PlaceId == 4442272183 then
            if Level == 700  or Level <= 724 then
                 ValueQuest = "Area1Quest"
                 IndexQuest = 1
            elseif Level == 725  or Level <= 774 then
                 ValueQuest = "Area1Quest"
                 IndexQuest = 2
            elseif Level == 775  or Level <= 799 then  
                 ValueQuest = "Area2Quest"
                 IndexQuest = 1
            elseif Level == 800  or Level <= 874 then
                 ValueQuest = "Area2Quest"
                 IndexQuest = 2
            elseif Level == 875  or Level <= 899 then
                 ValueQuest = "MarineQuest3"
                 IndexQuest = 1
            elseif Level == 900  or Level <= 949 then
                 ValueQuest = "MarineQuest3"
                 IndexQuest = 2
            elseif Level == 950  or Level <= 974 then
                 ValueQuest = "ZombieQuest"
                 IndexQuest = 1
            elseif Level == 975 or Level <= 999 then
                 ValueQuest = "ZombieQuest"
                 IndexQuest = 2
            elseif Level == 1000 or Level <= 1049 then
                 ValueQuest = "SnowMountainQuest"
                 IndexQuest = 1
            elseif Level == 1050 or Level <= 1099 then
                 ValueQuest = "SnowMountainQuest"
                 IndexQuest = 2
            elseif Level == 1100 or Level <= 1124 then
                 ValueQuest = "IceSideQuest"
                 IndexQuest = 1
            elseif Level == 1125 or Level <= 1174 then
                 ValueQuest = "IceSideQuest"
                 IndexQuest = 2
            elseif Level == 1175 or Level <= 1199 then
                 ValueQuest = "FireSideQuest"
                 IndexQuest = 1
            elseif Level == 1200 or Level <= 1249 then
                 ValueQuest = "FireSideQuest"
                 IndexQuest = 2
            elseif Level == 1250 or Level <= 1274 then
                 ValueQuest = "ShipQuest1"
                 IndexQuest = 1
            elseif Level == 1275 or Level <= 1299 then 
                 ValueQuest = "ShipQuest1"
                 IndexQuest = 2
            elseif Level == 1300 or Level <= 1324 then
                 ValueQuest = "ShipQuest2"
                 IndexQuest = 1
            elseif Level == 1325 or Level <= 1349 then
                 ValueQuest = "ShipQuest2"
                 IndexQuest = 2
            elseif Level == 1350 or Level <= 1374 then
                 ValueQuest = "FrostQuest"
                 IndexQuest = 1
            elseif Level == 1375 or Level <= 1424 then 
                 ValueQuest = "FrostQuest"
                 IndexQuest = 2
            elseif Level == 1425 or Level <= 1449 then
                 ValueQuest = "ForgottenQuest"
                 IndexQuest = 1
            elseif Level >= 1450 then
                 ValueQuest = "ForgottenQuest"
                 IndexQuest = 2
            end
        -- Third Sea
        else
            if Level == 1450 or Level <= 1524 then
                 ValueQuest = "PiratePortQuest"
                 IndexQuest = 1
            elseif Level == 1525 or Level <= 1574 then
                 ValueQuest = "PiratePortQuest"
                 IndexQuest = 2
            elseif Level == 1575 or Level <= 1599 then
                 ValueQuest = "AmazonQuest"
                 IndexQuest = 1
            elseif Level == 1600 or Level <= 1624 then
                 ValueQuest = "AmazonQuest"
                 IndexQuest = 2
            elseif Level == 1624 or Level <= 1649 then
                 ValueQuest = "AmazonQuest2"
                 IndexQuest = 1
            elseif Level == 1650 or Level <= 1699 then
                 ValueQuest = "AmazonQuest2"
                 IndexQuest = 2
            elseif Level == 1700 or Level <= 1724 then
                 ValueQuest = "MarineTreeIsland"
                 IndexQuest = 1
            elseif Level == 1725 or Level <= 1774 then
                 ValueQuest = "MarineTreeIsland"
                 IndexQuest = 2
            elseif Level == 1775 or Level <= 1799 then
                 ValueQuest = "DeepForestIsland3"
                 IndexQuest = 1
            elseif Level == 1800 or Level <= 1824 then
                 ValueQuest = "DeepForestIsland3"
                 IndexQuest = 2
            elseif Level == 1825 or Level <= 1849 then
                 ValueQuest = "DeepForestIsland"
                 IndexQuest = 1
            elseif Level == 1850 or Level <= 1899 then
                 ValueQuest = "DeepForestIsland"
                 IndexQuest = 2
            elseif Level == 1900 or Level <= 1924 then
                 ValueQuest = "DeepForestIsland2"
                 IndexQuest = 1
            elseif Level  ==  1925 or Level <= 1974 then
                 ValueQuest = "DeepForestIsland2"
                 IndexQuest = 2
            elseif Level  ==  1975 or Level <= 1999 then
                 ValueQuest = "HauntedQuest1"
                 IndexQuest = 1
            elseif Level  ==  2000 or Level <= 2024 then
                 ValueQuest = "HauntedQuest1"
                 IndexQuest = 2
            elseif Level  ==  2025 or Level <= 2049 then
                 ValueQuest = "HauntedQuest2"
                 IndexQuest = 1
            elseif Level  ==  2050 or Level <= 2074 then
                 ValueQuest = "HauntedQuest2"
                 IndexQuest = 2
            elseif Level  ==  2075 or Level <= 2099 then
                 ValueQuest = "NutsIslandQuest"
                 IndexQuest = 1
            elseif Level  ==  2100 or Level <= 2124 then
                 ValueQuest = "NutsIslandQuest"
                 IndexQuest = 2
            elseif Level  ==  2125 or Level <= 2149 then
                 ValueQuest = "IceCreamIslandQuest"
                 IndexQuest = 1
            elseif Level  ==  2150 or Level <= 2199 then
                 ValueQuest = "IceCreamIslandQuest"
                 IndexQuest = 2
            elseif Level  ==  2200 or Level <= 2224 then
                 ValueQuest = "CakeQuest1"
                 IndexQuest = 1
            elseif Level  ==  2225 or Level <= 2249 then
                 ValueQuest = "CakeQuest1"
                 IndexQuest = 2
            elseif Level  ==  2250 or Level <= 2274 then
                 ValueQuest = "CakeQuest2"
                 IndexQuest = 1
            elseif Level  ==  2275 or Level <= 2299 then
                 ValueQuest = "CakeQuest2"
                 IndexQuest = 2
            elseif Level  ==  2300 or Level <= 2324 then
                ValueQuest = "ChocQuest1"
                IndexQuest = 1
            elseif Level  ==  2325 or Level <= 2349 then
                ValueQuest = "ChocQuest1"
                IndexQuest = 2
            elseif Level  ==  2350 or Level <= 2374 then
                ValueQuest = "ChocQuest2"
                IndexQuest = 1
            elseif Level  >= 2374 then
                ValueQuest = "ChocQuest2"
                IndexQuest = 2
            end
        end
        return {["NameQuest"] = ValueQuest,["LevelQuest"] = IndexQuest}
    end
end

-------------- Quest --------------

function Is_Quest_Doing()
    return game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible
end

function Accept_Quest()
    if not game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible then
        Level = game.Players.LocalPlayer.Data.Level.Value
        if Level >= 375 and Level <= 449 and Distance(v.Model:FindFirstChild("QuestFloor",true).Position) > 50000 then
            local TouchInterest = game:GetService("Workspace").Map.TeleportSpawn.Entrance
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = TouchInterest.CFrame
            SetSpawn()
            wait(1)
        elseif Level >= 450 and Level <= 524 and Distance(v.Model:FindFirstChild("QuestFloor",true).Position) > 4000 then
            game.ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance", game:GetService("Workspace").Map.SkyArea1.PathwayTemple.ExitPoint.Position);
            SetSpawn()
            wait(1)
        elseif Level >= 1250 and Level <= 1349 and Distance(v.Model:FindFirstChild("QuestFloor",true).Position) > 50000 then
            local TouchInterest = game:GetService("Workspace").Map.GhostShip.Teleport
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = TouchInterest.CFrame
            wait(.5)
            SetSpawn()
            wait(1)
        elseif Level >= 1350 and (Vector3.new(920.4775390625, 154.9010009765625, 32838.96484375) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1000 then
            local args = {
                [1] = "requestEntrance",
                [2] = Vector3.new(-6508.55810546875, 89.03499603271484, -132.83953857421875)
            }

            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            wait(1)
        end

        repeat
            Distance = (GetQuestData("PositionQuest","Vector") - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if Distance < 250 then
                Speed = 1000
            elseif Distance < 500 then
                Speed = 400
            elseif Distance < 1000 then
                Speed = 350
            elseif Distance >= 1000 then
                Speed = 200
            end
            
            game:GetService("TweenService"):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
            {CFrame = GetQuestData("PositionQuest")}
            ):Play()
            task.wait()
   
        until (GetQuestData("PositionQuest","Vector") - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 or not getgenv().SaveSettings["Auto Farm Level"] or game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible or not getgenv().SaveSettings["Auto Farm Level"]
        wait(1)
        if (GetQuestData("PositionQuest","Vector") - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
            local args = {
                [1] = "StartQuest",
                [2] = GetQuestData("Quest").NameQuest,
                [3] = GetQuestData("Quest").LevelQuest
            }
            
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            repeat wait() until Is_Quest_Doing()
        end
    end
end



-- weapon



------ fast -------

local RigC = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local cd = 0
function Tablereturn()
    for i,v in pairs(getupvalues(RigC)) do
        if type(v) == "table" then
            return v
        end
    end
end
function GetCurrentBlade() 
    local CbFw2 = getupvalues(require(Plr.PlayerScripts.CombatFramework))[2]
    local p13 = CbFw2.activeController
    local ret = p13.blades[1]
    if not ret then return end
    while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
    return ret
end

-- function Attack()
--     if getgenv().SaveSettings["FastAttack"] then
--         coroutine.wrap(function()
--             pcall(function()
--                 if Controller and tick() >= cd then
--                     cd = tick() + 0.1
--                     -- coroutine.wrap(function() game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(GetCurrentBlade())) end)()
--                     Controller:attack()
--                 end
--             end)
--         end)()
--     else
--         pcall(function()
--             Controller:attack()
--         end)
--     end
-- end

spawn(function()
    while wait() do
        if getgenv().SaveSettings["SelectedNextGenFastAttack"] == "Extreme" then
            if superattack then
                superattack = false
                wait(5)
            else
                superattack = true
                wait(1)
            end
        end
    end
end)
function Attack(WantMode)
    if cd <= tick() or getgenv().SaveSettings["SelectedNextGenFastAttack"] == "Default" or WantMode == "Default" then
        if getgenv().SaveSettings["SelectedNextGenFastAttack"] ==  "Default" or WantMode == "Default" then
            coroutine.wrap(function()
                game:GetService'VirtualUser':CaptureController()
                game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
            end)()
        else
            if WantMode ~= nil then
                if WantMode == "Normal" then
                    cd = tick() + 0.05
                else
                    if superattack then
                        cd = tick() + 0.0275
                    else
                        cd = tick() + 0.0005
                    end
                end
            else
                if getgenv().SaveSettings["SelectedNextGenFastAttack"] == "Normal" then
                    cd = tick() + 0.05
                else
                    if superattack then
                        cd = tick() + 0.0275
                    else
                        cd = tick() + 0.0005
                    end
                end
            end
            
            coroutine.wrap(function()
                pcall(function()
                    local CbFw2 = getupvalues(require(Plr.PlayerScripts.CombatFramework))[2]
                    local AC = CbFw2.activeController
                    for i = 1, 1 do 
                        local bladehit = require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
                            Plr.Character,
                            {Plr.Character.HumanoidRootPart},
                            60
                        )
                        local cac=task.wait
                        local cac = {}
                        local hash = {}
                        for k, v in pairs(bladehit) do
                            if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
                                table.insert(cac, v.Parent.HumanoidRootPart)
                                hash[v.Parent] = true
                            end
                        end
                        bladehit = cac
                        if #bladehit > 0 then
                            local u8 = debug.getupvalue(AC.attack, 5)
                            local u9 = debug.getupvalue(AC.attack, 6)
                            local u7 = debug.getupvalue(AC.attack, 4)
                            local u10 = debug.getupvalue(AC.attack, 7)
                            local u12 = (u8 * 798405 + u7 * 727595) % u9
                            local u13 = u7 * 798405
                            (function()
                                u12 = (u12 * u9 + u13) % 1099511627776
                                u8 = math.floor(u12 / u9)
                                u7 = u12 - u8 * u9
                            end)()
                            u10 = u10 + 1
                            debug.setupvalue(AC.attack, 5, u8)
                            debug.setupvalue(AC.attack, 6, u9)
                            debug.setupvalue(AC.attack, 4, u7)
                            debug.setupvalue(AC.attack, 7, u10)
                            pcall(function()
                                for k, v in pairs(AC.animator.anims.basic) do
                                    v:Play()
                                end                  
                            end)
                            if Plr.Character:FindFirstChildOfClass("Tool") and AC.blades and AC.blades[1] then 
                                game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(GetCurrentBlade()))
                                game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(u12 / 1099511627776 * 16777215), u10)
                                game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, i, "") 
                            end
                        end
                    end
                end)
            end)()
        end
    end
end



------- Misc -------


function CheckMonInFolderEnemies()
    for i,v in pairs(game:GetService("CollectionService"):GetTagged("ActiveRig")) do
        if string.find(v.Name,GetQuestData("Mon")) then
           return true 
        end
    end
    return false
end


isnetworkowner = isnetworkowner or function() return true end



function farmlevel()
    if game.PlaceId == 2753915549 then
        if Lv >= 15 and Lv <= 119 then
            if RootPart.Position.Y > 5400 then
                if getdistance(Vector3.new(-7682, 5608, -447)) > 900 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                else
                    killmob("Shanda [Lv. 475]")
                    
                    
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
            end
        elseif Lv >= 120 and Lv <= 149 then
            if setspawnat("MarineBase") then
                if getdistance(MobData["Chief Petty Officer [Lv. 120]"].MonsterPosition) < 3000 then
                    if checkQuest("Chief Petty Officer [Lv. 120]") == true then
                        killmob("Chief Petty Officer [Lv. 120]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("MarineBase")
            end
        elseif Lv >= 120 and Lv <= 174 then
            if setspawnat("Sky") then
                if getdistance(MobData["Sky Bandit [Lv. 150]"].MonsterPosition) < 3000 then
                    if checkQuest("Sky Bandit [Lv. 150]") == true then
                        killmob("Sky Bandit [Lv. 150]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Sky")
            end
        elseif Lv >= 175 and Lv <= 249 then
            if setspawnat("Sky") then
                if getdistance(MobData["Dark Master [Lv. 175]"].MonsterPosition) < 3000 then
                    if checkQuest("Dark Master [Lv. 175]") == true then
                        killmob("Dark Master [Lv. 175]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Sky")
            end
        elseif Lv >= 250 and Lv <= 299 then
            if setspawnat("Colosseum") then
                if getdistance(MobData["Toga Warrior [Lv. 250]"].MonsterPosition) < 3000 then
                    if checkQuest("Toga Warrior [Lv. 250]") == true then
                        killmob("Toga Warrior [Lv. 250]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Colosseum")
            end
        -- elseif Lv >= 275 and Lv <= 299 then
        --     if setspawnat("Colosseum") then
        --         if getdistance(MobData["Gladiator [Lv. 275]"].MonsterPosition) < 3000 then
        --             if checkQuest("Gladiator [Lv. 275]") == true then
        --                 killmob("Gladiator [Lv. 275]")
                        
                        
        --             end
        --         elseif  not Plr.PlayerGui.Main.Timer.Visible then
        --             Hum.Health = 0
        --             wait(5)
        --         end
        --     else
        --         setspawnat("Colosseum")
        --     end
        elseif Lv >= 300 and Lv <= 324 then
            if setspawnat("Magma") then
                if getdistance(MobData["Military Soldier [Lv. 300]"].MonsterPosition) < 3000 then
                    if checkQuest("Military Soldier [Lv. 300]") == true then
                        killmob("Military Soldier [Lv. 300]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Magma")
            end
        elseif Lv >= 325 and Lv <= 374 then
            if setspawnat("Magma") then
                if getdistance(MobData["Military Spy [Lv. 325]"].MonsterPosition) < 3000 then
                    if checkQuest("Military Spy [Lv. 325]") == true then
                        killmob("Military Spy [Lv. 325]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Magma")
            end
        elseif Lv >= 375 and Lv <= 399 then
            if getdistance(Vector3.new(61188, 18, 1576)) < 10000 then
                if getdistance(MobData["Fishman Warrior [Lv. 375]"].MonsterPosition) < 3000 then
                    if checkQuest("Fishman Warrior [Lv. 375]") == true then
                        killmob("Fishman Warrior [Lv. 375]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
            end
        elseif Lv >= 400 and Lv <= 449 then
            if getdistance(Vector3.new(61188, 18, 1576)) < 10000 then
                if getdistance(MobData["Fishman Commando [Lv. 400]"].MonsterPosition) < 3000 then
                    if checkQuest("Fishman Commando [Lv. 400]") == true then
                        killmob("Fishman Commando [Lv. 400]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
            end
        elseif Lv >= 450 and Lv <= 474 then
            if getdistance(Vector3.new(-4722, 845, -1953)) < 3000 and RootPart.Position.Y > 810 then
                if getdistance(MobData["God's Guard [Lv. 450]"].MonsterPosition) < 3000 then
                    if checkQuest("God's Guard [Lv. 450]") == true then
                        killmob("God's Guard [Lv. 450]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-4658, 873, -1770))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-4658, 873, -1770))
            end
        elseif Lv >= 475 and Lv <= 524 then
            if getdistance(Vector3.new(-7862, 5545, -381)) < 1000 then
                if getdistance(MobData["Shanda [Lv. 475]"].MonsterPosition) < 3000 then
                    if checkQuest("Shanda [Lv. 475]") == true then
                        killmob("Shanda [Lv. 475]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
            end
        elseif Lv >= 525 and Lv <= 549 then
            if RootPart.Position.Y > 5500 then
                if checkQuest("Royal Squad [Lv. 525]") == true then
                    killmob("Royal Squad [Lv. 525]")
                    
                    
                end
            elseif  not Plr.PlayerGui.Main.Timer.Visible then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
            end
        elseif Lv >= 550 and Lv <= 624 then
            if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y > 5500 then
                if checkQuest("Royal Soldier [Lv. 550]") == true then
                    killmob("Royal Soldier [Lv. 550]")
                    
                    
                end
            elseif  not Plr.PlayerGui.Main.Timer.Visible then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
            end
        elseif Lv >= 625 and Lv <= 649 then
            if setspawnat("Fountain") then
                if getdistance(MobData["Galley Pirate [Lv. 625]"].MonsterPosition) < 3000 then
                    if checkQuest("Galley Pirate [Lv. 625]") == true then
                        killmob("Galley Pirate [Lv. 625]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Fountain")
            end
        elseif Lv >= 650 then
            if setspawnat("Fountain") then
                if getdistance(MobData["Galley Captain [Lv. 650]"].MonsterPosition) < 3000 then
                    if checkQuest("Galley Captain [Lv. 650]") == true then
                        killmob("Galley Captain [Lv. 650]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Fountain")
            end
        end
    end
    if game.PlaceId == 4442272183 then
        if Lv >= 700 and Lv <= 724 then
            if setspawnat("Default") then
                if getdistance(MobData["Raider [Lv. 700]"].MonsterPosition) < 3000 then
                    if checkQuest("Raider [Lv. 700]") == true then
                        killmob("Raider [Lv. 700]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Default")
            end
        elseif Lv >= 725 and Lv <= 774 then
            if setspawnat("Default") then
                if getdistance(MobData["Mercenary [Lv. 725]"].MonsterPosition) < 3000 then
                    if checkQuest("Mercenary [Lv. 725]") == true then
                        killmob("Mercenary [Lv. 725]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Default")
            end
        elseif Lv >= 725 and Lv <= 874 then
            if setspawnat("Bar") then
                if getdistance(MobData["Swan Pirate [Lv. 775]"].MonsterPosition) < 3000 then
                    if checkQuest("Swan Pirate [Lv. 775]") == true then
                        killmob("Swan Pirate [Lv. 775]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Bar")
            end
        elseif Lv >= 875 and Lv <= 899 then
            if setspawnat("Greenb") then
                if getdistance(MobData["Marine Lieutenant [Lv. 875]"].MonsterPosition) < 3000 then
                    if checkQuest("Marine Lieutenant [Lv. 875]") == true then
                        killmob("Marine Lieutenant [Lv. 875]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Greenb")
            end
        elseif Lv >= 900 and Lv <= 949 then
            if setspawnat("Greenb") then
                if getdistance(MobData["Marine Captain [Lv. 900]"].MonsterPosition) < 3000 then
                    if checkQuest("Marine Captain [Lv. 900]") == true then
                        killmob("Marine Captain [Lv. 900]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Greenb")
            end
        elseif Lv >= 950 and Lv <= 974 then
            if setspawnat("Graveyard") then
                if getdistance(MobData["Zombie [Lv. 950]"].MonsterPosition) < 3000 then
                    if checkQuest("Zombie [Lv. 950]") == true then
                        killmob("Zombie [Lv. 950]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Graveyard")
            end
        elseif Lv >= 975 and Lv <= 999 then
            if setspawnat("Graveyard") then
                if getdistance(MobData["Vampire [Lv. 975]"].MonsterPosition) < 3000 then
                    if checkQuest("Vampire [Lv. 975]") == true then
                        killmob("Vampire [Lv. 975]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Graveyard")
            end
         elseif Lv >= 1000 and Lv <= 1049 then
            if setspawnat("Snowy") then
                if getdistance(MobData["Snow Trooper [Lv. 1000]"].MonsterPosition) < 3000 then
                    if checkQuest("Snow Trooper [Lv. 1000]") == true then
                        killmob("Snow Trooper [Lv. 1000]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Snowy")
            end
        elseif Lv >= 1050 and Lv <= 1099 then
            if setspawnat("Snowy") then
                if getdistance(MobData["Winter Warrior [Lv. 1050]"].MonsterPosition) < 3000 then
                    if checkQuest("Winter Warrior [Lv. 1050]") == true then
                        killmob("Winter Warrior [Lv. 1050]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Snowy")
            end
        elseif Lv >= 1100 and Lv <= 1124 then
            if setspawnat("CircleIslandIce") then
                if getdistance(MobData["Lab Subordinate [Lv. 1100]"].MonsterPosition) < 3000 then
                    if checkQuest("Lab Subordinate [Lv. 1100]") == true then
                        killmob("Lab Subordinate [Lv. 1100]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("CircleIslandIce")
            end
        elseif Lv >= 1125 and Lv <= 1174 then
            if setspawnat("CircleIslandIce") then
                if getdistance(MobData["Horned Warrior [Lv. 1125]"].MonsterPosition) < 3000 then
                    if checkQuest("Horned Warrior [Lv. 1125]") == true then
                        killmob("Horned Warrior [Lv. 1125]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("CircleIslandIce")
            end
        elseif Lv >= 1175 and Lv <= 1199 then 
            if setspawnat("CircleIslandFire") then
                if getdistance(MobData["Magma Ninja [Lv. 1175]"].MonsterPosition) < 3000 then
                    if checkQuest("Magma Ninja [Lv. 1175]") == true then
                        killmob("Magma Ninja [Lv. 1175]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("CircleIslandFire")
            end
        elseif Lv >= 1200 and Lv <= 1249 then 
            if setspawnat("CircleIslandFire") then
                if getdistance(MobData["Lava Pirate [Lv. 1200]"].MonsterPosition) < 3000 then
                    if checkQuest("Lava Pirate [Lv. 1200]") == true then
                        killmob("Lava Pirate [Lv. 1200]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("CircleIslandFire")
            end
        elseif Lv >= 1250 and Lv <= 1274 then 
            if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                if getdistance(MobData["Ship Deckhand [Lv. 1250]"].MonsterPosition) < 3000 then
                    if checkQuest("Ship Deckhand [Lv. 1250]") == true then
                        killmob("Ship Deckhand [Lv. 1250]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
            end
        elseif Lv >= 1275 and Lv <= 1299 then 
            if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                if getdistance(MobData["Ship Engineer [Lv. 1275]"].MonsterPosition) < 3000 then
                    if checkQuest("Ship Engineer [Lv. 1275]") == true then
                        killmob("Ship Engineer [Lv. 1275]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
            end
        elseif Lv >= 1300 and Lv <= 1324 then 
            if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                if getdistance(MobData["Ship Steward [Lv. 1300]"].MonsterPosition) < 3000 then
                    if checkQuest("Ship Steward [Lv. 1300]") == true then
                        killmob("Ship Steward [Lv. 1300]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
            end
        elseif Lv >= 1325 and Lv <= 1349 then 
            if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                if getdistance(MobData["Ship Officer [Lv. 1325]"].MonsterPosition) < 3000 then
                    if checkQuest("Ship Officer [Lv. 1325]") == true then
                        killmob("Ship Officer [Lv. 1325]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
            end
        elseif Lv >= 1325 and Lv <= 1349 then 
            if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                if getdistance(MobData["Ship Officer [Lv. 1325]"].MonsterPosition) < 3000 then
                    if checkQuest("Ship Officer [Lv. 1325]") == true then
                        killmob("Ship Officer [Lv. 1325]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                end
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
            end
        elseif Lv >= 1350 and Lv <= 1374 then 
            if setspawnat("IceCastle") then
                if getdistance(MobData["Arctic Warrior [Lv. 1350]"].MonsterPosition) < 3000 then
                    if checkQuest("Arctic Warrior [Lv. 1350]") == true then
                        killmob("Arctic Warrior [Lv. 1350]")
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("IceCastle")
            end
        elseif Lv >= 1375 and Lv <= 1424 then 
            if setspawnat("IceCastle") then
                if getdistance(MobData["Snow Lurker [Lv. 1375]"].MonsterPosition) < 3000 then
                    if checkQuest("Snow Lurker [Lv. 1375]") == true then
                        killmob("Snow Lurker [Lv. 1375]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("IceCastle")
            end
        elseif Lv >= 1375 and Lv <= 1424 then 
            if setspawnat("IceCastle") then
                if getdistance(MobData["Snow Lurker [Lv. 1375]"].MonsterPosition) < 3000 then
                    if checkQuest("Snow Lurker [Lv. 1375]") == true then
                        killmob("Snow Lurker [Lv. 1375]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("IceCastle")
            end
        elseif Lv >= 1425 and Lv <= 1449 then 
            if setspawnat("ForgottenIsland") then
                if getdistance(MobData["Sea Soldier [Lv. 1425]"].MonsterPosition) < 3000 then
                    if checkQuest("Sea Soldier [Lv. 1425]") == true then
                        killmob("Sea Soldier [Lv. 1425]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("ForgottenIsland")
            end
        elseif Lv >= 1450 then 
            if setspawnat("ForgottenIsland") then
                if getdistance(MobData["Water Fighter [Lv. 1450]"].MonsterPosition) < 3000 then
                    if checkQuest("Water Fighter [Lv. 1450]") == true then
                        killmob("Water Fighter [Lv. 1450]")
                        
                        
                    end
                elseif  not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("ForgottenIsland")
            end
            
            --[[
            
            Pirate Millionaire [Lv. 1500]"] = {
        QuestPosition = Vector3.new(-288, 44, 5579),
        MonsterPosition = Vector3.new(-294, 48, 5604),
        QuestName = "PiratePortQuest",
        SpawnPoint = "ForgottenQuest",
        QuestIndex = 1,
        Reward = "Reward:\n$13,000\n53,000,000 Exp."
    },
    ["Pistol Billionaire [Lv. 1525]
            
            ]]
        end 
    end
    if game.PlaceId == 7449423635 then
       if Lv >= 1500 and Lv <= 1524 then
            if setspawnat("Default") then
                MonsterNameForKill = "Pirate Millionaire [Lv. 1500]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Default")
            end
        elseif Lv >= 1525 and Lv <= 1574 then
            if setspawnat("Default") then
                MonsterNameForKill = "Pistol Billionaire [Lv. 1525]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Default")
            end
        elseif Lv >= 1575 and Lv <= 1599 then
            if setspawnat("Hydra3") then
                MonsterNameForKill = "Dragon Crew Warrior [Lv. 1575]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Hydra3")
            end
        elseif Lv >= 1600 and Lv <= 1624 then
            if setspawnat("Hydra3") then
                MonsterNameForKill = "Dragon Crew Archer [Lv. 1600]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Hydra3")
            end
        elseif Lv >= 1625 and Lv <= 1649 then
            if setspawnat("Hydra1") then
                MonsterNameForKill = "Female Islander [Lv. 1625]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Hydra1")
            end
        elseif Lv >= 1650 and Lv <= 1699 then
            if setspawnat("Hydra1") then
                MonsterNameForKill = "Giant Islander [Lv. 1650]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 3000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("Hydra1")
            end
        elseif Lv >= 1700 and Lv <= 1724 then
            if setspawnat("GreatTree") then
                MonsterNameForKill = "Marine Commodore [Lv. 1700]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 10000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("GreatTree")
            end
        elseif Lv >= 1725 and Lv <= 1774 then
            if setspawnat("GreatTree") then
                MonsterNameForKill = "Marine Rear Admiral [Lv. 1725]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 10000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end
            else
                setspawnat("GreatTree")
            end
        elseif Lv >= 1775 and Lv <= 1799 then
            if setspawnat("PineappleTown") then
                MonsterNameForKill = "Fishman Raider [Lv. 1775]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 100000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end  
            else 
                setspawnat("PineappleTown")
            end
        elseif Lv >= 1800 and Lv <= 1824 then
            if setspawnat("PineappleTown") then
                MonsterNameForKill = "Fishman Captain [Lv. 1800]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 100000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("PineappleTown")
            end
        elseif Lv >= 1825 and Lv <= 1849 then
            if setspawnat("BigMansion") then
                MonsterNameForKill = "Forest Pirate [Lv. 1825]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 100000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("BigMansion")
            end
        elseif Lv >= 1850 and Lv <= 1899 then
            if setspawnat("BigMansion") then
                MonsterNameForKill = "Mythological Pirate [Lv. 1850]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 100000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("BigMansion")
            end
        elseif Lv >= 1900 and Lv <= 1924 then
            MonsterNameForKill = "Jungle Pirate [Lv. 1900]"
            if checkQuest(MonsterNameForKill) == true then
                killmob(MonsterNameForKill)
            end
        elseif Lv >= 1925 and Lv <= 1974 then
            if setspawnat("BigMansion") then
                MonsterNameForKill = "Musketeer Pirate [Lv. 1925]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 100000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("BigMansion")
            end
        elseif Lv >= 1975 and Lv <= 1999 then
            if setspawnat("HauntedCastle") then
                MonsterNameForKill = "Reborn Skeleton [Lv. 1975]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("HauntedCastle")
            end
        elseif Lv >= 2000 and Lv <= 2024 then
            if setspawnat("HauntedCastle") then
                MonsterNameForKill = "Living Zombie [Lv. 2000]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("HauntedCastle")
            end
        elseif Lv >= 2025 and Lv <= 2049 then
            if setspawnat("HauntedCastle") then
                MonsterNameForKill = "Demonic Soul [Lv. 2025]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("HauntedCastle")
            end
        elseif Lv >= 2050 and Lv <= 2074 then
            if setspawnat("HauntedCastle") then
                MonsterNameForKill = "Posessed Mummy [Lv. 2050]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("HauntedCastle")
            end
        elseif Lv >= 2050 and Lv <= 2074 then
            if setspawnat("HauntedCastle") then
                MonsterNameForKill = "Posessed Mummy [Lv. 2050]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("HauntedCastle")
            end
        elseif Lv >= 2075 and Lv <= 2099 then
            if setspawnat("Peanut") then
                MonsterNameForKill = "Peanut Scout [Lv. 2075]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Peanut")
            end
        elseif Lv >= 2100 and Lv <= 2124 then
            if setspawnat("Peanut") then 
                MonsterNameForKill = "Peanut President [Lv. 2100]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Peanut")
            end
        elseif Lv >= 2125 and Lv <= 2149 then
            if setspawnat("IceCream") then
                MonsterNameForKill = "Ice Cream Chef [Lv. 2125]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("IceCream")
            end
        elseif Lv >= 2150 and Lv <= 2199 then
            if setspawnat("IceCream") then -- 
                MonsterNameForKill = "Ice Cream Commander [Lv. 2150]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("IceCream")
            end
        elseif Lv >= 2200 and Lv <= 2224 then
            if setspawnat("Loaf") then -- 
                MonsterNameForKill = "Cookie Crafter [Lv. 2200]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Loaf")
            end
        elseif Lv >= 2225 and Lv <= 2249 then
            if setspawnat("Loaf") then -- 
                MonsterNameForKill = "Cake Guard [Lv. 2225]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Loaf")
            end
        elseif Lv >= 2250 and Lv <= 2274 then
            if setspawnat("Loaf") then -- 
                MonsterNameForKill = "Baking Staff [Lv. 2250]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Loaf")
            end
        elseif Lv >= 2275 and Lv <= 2299 then
            if setspawnat("Loaf") then -- 
                MonsterNameForKill = "Head Baker [Lv. 2275]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Loaf")
            end
        elseif Lv >= 2300 and Lv <= 2324 then
            if setspawnat("Chocolate") then -- 
                MonsterNameForKill = "Cocoa Warrior [Lv. 2300]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Chocolate")
            end
        elseif Lv >= 2325 and Lv <= 2349 then
            if setspawnat("Chocolate") then -- 
                MonsterNameForKill = "Chocolate Bar Battler [Lv. 2325]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Chocolate")
            end
        elseif Lv >= 2350 and Lv <= 2374 then
            if setspawnat("Chocolate") then -- 
                MonsterNameForKill = "Sweet Thief [Lv. 2350]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Chocolate")
            end
        elseif Lv >= 2374 then
            if setspawnat("Chocolate") then -- 
                MonsterNameForKill = "Candy Rebel [Lv. 2375]"
                if getdistance(MobData[MonsterNameForKill].MonsterPosition) < 1000 then
                    if checkQuest(MonsterNameForKill) == true then
                        killmob(MonsterNameForKill)
                    end
                elseif not Plr.PlayerGui.Main.Timer.Visible then
                    Hum.Health = 0
                    wait(5)
                end 
            else
                setspawnat("Chocolate")
            end
        end
    end
end

function checkdressrosa()
    if getgenv().SaveSettings["AutoDressrosa"] and _G.ShankQuest == false and Plr.Data.Level.Value >= 700  then
        return false
    end
    if getgenv().SaveSettings["AutoDressrosa"] and  _G.ShankQuest == true and  _G.CheckNewWorld ~= "cango" and Plr.Data.Level.Value >= 700  then
        return false
    end
    return true
end

spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["Auto Farm Level"] and checkdressrosa() then
                if getgenv().SaveSettings["FarmMode"] == "Auto Update" or getgenv().SaveSettings["FarmMode"] == "Next Generation" then
                    Lv = Plr.Data.Level.Value
                else
                    Lv = tonumber(getgenv().SaveSettings["CustomLevelFarm"])
                end
                if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
                    if getgenv().SaveSettings["FarmMode"] == "Auto Update" then
                        Accept_Quest()
                        if Is_Quest_Doing() then
                            if not CheckMonInFolderEnemies() then
                                Distance = (GetQuestData("PositionQuest","Vector") - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                if Distance < 250 then
                                    Speed = 1000
                                elseif Distance < 500 then
                                    Speed = 400
                                elseif Distance < 1000 then
                                    Speed = 350
                                elseif Distance >= 1000 then
                                    Speed = 200
                                end
                                game:GetService("TweenService"):Create(
                                game.Players.LocalPlayer.Character.HumanoidRootPart,
                                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                {CFrame = CFrame.new(GetQuestData("PositionQuest","Vector"))}
                                ):Play()
                            else
                                for i,v in pairs(game:GetService("CollectionService"):GetTagged("ActiveRig")) do
                                    if GetQuestData("Mon") and v.Name:lower():sub(1,#GetQuestData("Mon")) == GetQuestData("Mon"):lower() and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                        MonsterName = v.Name
    									for ii,vv in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if vv.Name:lower():sub(1,#GetQuestData("Mon")) == GetQuestData("Mon"):lower() and vv:FindFirstChild("Humanoid") and vv:FindFirstChild("HumanoidRootPart") and vv.Humanoid.Health > 0 then
                                                Distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                                if Distance < 40 then
                                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,30,0)
                                                    BringMob(v)
                                                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                    Attack()
                                                else
                                                    if Distance < 250 then
                                                        Speed = 1000
                                                    elseif Distance < 500 then
                                                        Speed = 400
                                                    elseif Distance < 1000 then
                                                        Speed = 350
                                                    elseif Distance >= 1000 then
                                                        Speed = 200
                                                    end
                                                    game:GetService("TweenService"):Create(
                                                        game.Players.LocalPlayer.Character.HumanoidRootPart,
                                                        TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                                        {CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,30,0)}
                                                    ):Play()
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    elseif getgenv().SaveSettings["FarmMode"] == "Next Generation" or getgenv().SaveSettings["FarmMode"] == "Custom" then
                        if Lv <= 14 then -- phase 1
                            if checkQuest("Bandit [Lv. 5]") == true then
                                killmob("Bandit [Lv. 5]")
                                Attack()
                            end
                        else
                            farmlevel()
                            
                        end
                    end
                end
            end
        end)
    end
end)
spawn(function()
    while task.wait() do
        if getgenv().SaveSettings["FastAttack"] or getgenv().SaveSettings["DamageAura"] then
            pcall(function()
                require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.CameraShaker.CameraShakeInstance).CameraShakeState.Inactive = 0
                -- Tablereturn().activeController.timeToNextAttack = 0
                -- Tablereturn().activeController.increment = 3
            end)
        end
        if getgenv().SaveSettings["BigHitbox"] or getgenv().SaveSettings["DamageAura"] then
            pcall(function()
                -- for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                --     if v:FindFirstChild("HumanoidRootPart") then
                --         v.HumanoidRootPart.CanCollide = false
                --         v.HumanoidRootPart.Size = Vector3.new(60,60,60)
                --         if sethiddenproperty then
                --             sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                --         end
                --     end
                -- end
                Tablereturn().activeController.hitboxMagnitude = 100
            end)
        end
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["Melee"] then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Melee",
                    [3] = getgenv().SaveSettings["Points"]
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end 
            if getgenv().SaveSettings["Defense"] then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Defense",
                    [3] = getgenv().SaveSettings["Points"]
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end 
            if getgenv().SaveSettings["Sword"] then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Sword",
                    [3] = getgenv().SaveSettings["Points"]
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end 
            if getgenv().SaveSettings["Gun"] then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Gun",
                    [3] = getgenv().SaveSettings["Points"]
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end 
            if getgenv().SaveSettings["BloxFruit"] then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Demon Fruit",
                    [3] = getgenv().SaveSettings["Points"]
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end)
    end
end)





-- main loop
function getquestworldtwo()
    local args = {
        [1] = "DressrosaQuestProgress"
    }
    if not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args)).TalkedDetective then
        return "TalkedDetective" 
    end
    if not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args)).UsedKey then
        return "UsedKey" 
    end
    if not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args)).KilledIceBoss then
        return "KilledIceBoss" 
    end
    return "cango"
end

spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["DamageAura"] then
                Attack()
            end
        end)
    end
end)
function GetKillCake()
    if game.PlaceId == 7449423635 then
        local a = {}
        line = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner",true)
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
        if line == "The portal is already open! Hurry up, it's behind the house." then
           return "Door opening!" 
        end
        for token in string.gmatch(line, "[^%s]+") do
           table.insert(a,token)
        end
        for i,v in pairs(a) do
            if i == 6 then
               local pp = v:split("<Color=Yellow>")[2]
               return pp:split("<Color=/>")[1]
            end
        end
    else
        return "Undefind."
    end
end
function getnamefruit(Name)
    if string.find(Name,"Buddha") then
       return "Human-Human: Buddha" 
    end
    if string.find(Name,"Bird") and string.find(Name,"Phoenix") then
       return "Bird-Bird: Phoenix" 
    end
    if string.find(Name,"Bird") and string.find(Name,"Falcon") then
       return "Bird-Bird: Falcon" 
    end
    return Name:split(" ")[1].."-".. Name:split(" ")[1]
end
spawn(function()
    while wait() do
        pcall(function()
            if game.PlaceId == 7449423635 then -- warp
                killedcakemonster:SetText(_G.Cake_icon .. " Monster Killed : "..GetKillCake())
                KilledCakemessage = GetKillCake()
                EliteTotal:SetText(_G.coffin_icon .. " Hunted : "..game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter","Progress"))
                Bonetotal:SetText(_G.Bone_icon .. " Bone : "..tostring(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Check")))
            else
                killedcakemonster:SetText(_G.Cake_icon .. " Monster Killed : Undefind")
                EliteTotal:SetText(_G.coffin_icon .. " Hunted : Undefind")
                Bonetotal:SetText(_G.Bone_icon .. " Bone : Undefind")
            end
           _G.HaveEctoplasm = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Ectoplasm","Check")
            if getgenv().SaveSettings["infrace"] and not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
                local agility = game:GetService("ReplicatedStorage").FX.Agility:Clone()
                agility.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
            end
            if getgenv().SaveSettings["AutoSetSpawn"] then
                game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("SetSpawnPoint");
            end
            if _G.spectateplayer and game.Players:FindFirstChild(_G.SelectedPlayer) then
                game.Workspace.Camera.CameraSubject = game.Players:FindFirstChild(_G.SelectedPlayer).Character.Humanoid
            end
            if getgenv().SaveSettings["AutoBuso"] and not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
        		game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
            end
            if _G.MonsterHealth == nil then
                _G.MonsterHealth = 0 
            end
            _G.ShankQuest = getsaberquest("KilledShanks")
            _G.CheckNewWorld = getquestworldtwo()
    	    monsterhealthmastery:SetText(_G.Blood_Icon .. " Monster Health : ".. _G.MonsterHealth .."%")
    	    if getgenv().SaveSettings["DevilFruitRandom"] then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin","Buy")
    	    end
            if getgenv().SaveSettings["DevilFruitStore"] then
                for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and string.find(v.Name," Fruit") and v:FindFirstChild("EatRemote") and not v:FindFirstChild("Backlist") then
                        Hum:EquipTool(v)
                        wait()
                        local args = {
                            [1] = "StoreFruit",
                            [2] = getnamefruit(v.Name),
                            [3] = game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name)
                        }
                        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args)) == false then
                            local blacklist = Instance.new("IntValue",v)
                            blacklist.Name = "Backlist"
                        end
                    end
                end
            end
        end)
    end
end)
spawn(function()
    while game:GetService("RunService").RenderStepped:wait() do
        pcall(function()
            if getgenv().SaveSettings["darkfragment"] or getgenv().SaveSettings["Autofactory"] or getgenv().SaveSettings["Autofactory"] or getgenv().SaveSettings["AutoValkyrieHelmet"] or getgenv().SaveSettings["autorengoku"] or getgenv().SaveSettings["autoyama"] or getgenv().SaveSettings["Autobandanna"] or getgenv().SaveSettings["Autohuntercape"] or getgenv().SaveSettings["autohuntbounty"] or getgenv().SaveSettings["AutoMusketeerHat"] or getgenv().SaveSettings["AutoObservationhakiV2"] or getgenv().SaveSettings["AutoFarmObservationHop"] or getgenv().SaveSettings["AutoObservationhaki"] or getgenv().SaveSettings["Autoseabeast"] or getgenv().SaveSettings["Autofarmchest"] or getgenv().SaveSettings["AutoSoulGuitar"] or getgenv().SaveSettings["autopole"] or getgenv().SaveSettings["AutoObservationhaki"] or getgenv().SaveSettings["autoripindrahop"] or _G.autoripindra or getgenv().SaveSettings["mirrorfractal"] or _G.autofarmsoulreaper or getgenv().SaveSettings["AutoDualCursedSword"] or _G.AutoCakePrince or getgenv().SaveSettings["Autotraningdummy"] or getgenv().SaveSettings["AutoCastleRaid"] or getgenv().SaveSettings["autonextisland"] or _G.AutoHuntQuest or _G.AutoElite or _G.KillPlayer or getgenv().SaveSettings["AutoEliteHop"] or getgenv().SaveSettings["autosaber"] or getgenv().SaveSettings["AutoDressrosa"] or getgenv().SaveSettings["bone"] or getgenv().SaveSettings["mirrorfractal"] or getgenv().SaveSettings["ectoplasm"] or getgenv().SaveSettings["leatherandscrapmetal"] or getgenv().SaveSettings["fishtail"] or getgenv().SaveSettings["gunpowder"] or getgenv().SaveSettings["demonicwisp"] or getgenv().SaveSettings["conjuredcocoa"] or getgenv().SaveSettings["dragonscale"] or getgenv().SaveSettings["autosaber"] or getgenv().SaveSettings["angelwings"] or _G.TeleportPlayer or getgenv().SaveSettings["Yetifur"] or getgenv().SaveSettings["vampirefang"] or getgenv().SaveSettings["radioactivematerial"] or getgenv().SaveSettings["meteorite"] or getgenv().SaveSettings["Mysticdroplet"] or getgenv().SaveSettings["minitusk"] or getgenv().SaveSettings["Magmaore"] or _G.teleportisland or getgenv().SaveSettings["Auto Farm Level"] or _G.AutoBoss or _G.AutoKillAllBoss then
                noclip()
            end
            if sethiddenproperty then
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        if (_G.AutoBoss or _G.AutoKillAllBoss) and not Plr.PlayerGui.Main.Timer.Visible then
            pcall(function()
                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                if _G.AutoBoss then
                    local bossname = Options.SelectedBoss.Value
                    local bossselected = MobData[bossname]
                    if bossname == "Thunder God [Lv. 575] [Boss]" or bossname == "Wysper [Lv. 500] [Boss]" then
                        if getdistance(Vector3.new(-7862, 5545, -381)) < 3000 then
                            if getgenv().SaveSettings["AutoBossQuest"] then
                                if checkQuest(Options.SelectedBoss.Value) == true then
                                    killboss(Options.SelectedBoss.Value)
                                end
                            else
                                killboss(Options.SelectedBoss.Value)
                            end
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    elseif bossname == "Fishman Lord [Lv. 425] [Boss]" then
                        if getdistance(Vector3.new(61188, 18, 1576)) < 30000 then
                            if getgenv().SaveSettings["AutoBossQuest"] then
                                if checkQuest(Options.SelectedBoss.Value) == true then
                                    killboss(Options.SelectedBoss.Value)
                                end
                            else
                                killboss(Options.SelectedBoss.Value)
                            end
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
                        end
                    elseif bossname == "Beautiful Pirate [Lv. 1950] [Boss]" then
                        if getdistance(Vector3.new(5314, 23, -85)) < 1000 then
                            killboss(Options.SelectedBoss.Value)
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656))
                        end
                    elseif bossname == "Warden [Lv. 220] [Boss]" or  bossname == "Chief Warden [Lv. 230] [Boss]" or  bossname == "Swan [Lv. 240] [Boss]" then
                        if getdistance(Vector3.new(5587, 65, 1023)) < 5000 then
                            if getgenv().SaveSettings["AutoBossQuest"] then
                                if checkQuest(bossname) == true then
                                    killboss(bossname)
                                end
                            else
                                killboss(bossname)
                            end
                        else 
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(3864.6884765625, 6.736950397491455, -1926.214111328125))
                        end
                    elseif bossselected.QuestPosition == "NoQuest" then
                        if setspawnat(bossselected.SpawnPoint) then
                            if getdistance(bossselected.MonsterPosition) < 3000 then
                                killboss(Options.SelectedBoss.Value)
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end
                        else
                            setspawnat(bossselected.SpawnPoint)
                        end
                    else
                        if setspawnat(bossselected.SpawnPoint) then
                            if getdistance(bossselected.MonsterPosition) < 3000 then
                                if getgenv().SaveSettings["AutoBossQuest"] and bossselected.QuestPosition then
                                    if checkQuest(Options.SelectedBoss.Value) == true then
                                        killboss(Options.SelectedBoss.Value)
                                    end
                                else
                                    killboss(Options.SelectedBoss.Value)
                                end
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end
                        else
                            setspawnat(bossselected.SpawnPoint)
                        end
                    end
                elseif _G.AutoKillAllBoss then
                    local bossname = Refresh("AllBoss")[1]
                    local bossselected = MobData[bossname]
                    repeat
                        task.wait()
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        if bossname == "Thunder God [Lv. 575] [Boss]" or bossname == "Wysper [Lv. 500] [Boss]" then
                            if getdistance(Vector3.new(-7862, 5545, -381)) < 3000 then
                                if getgenv().SaveSettings["AutoBossQuest"] then
                                    if checkQuest(bossname) == true then
                                        killboss(bossname)
                                    end
                                else
                                    killboss(bossname)
                                end
                            else
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                            end
                        elseif bossname == "Fishman Lord [Lv. 425] [Boss]" then
                            if getdistance(Vector3.new(61188, 18, 1576)) < 30000 then
                                if getgenv().SaveSettings["AutoBossQuest"] then
                                    if checkQuest(bossname) == true then
                                        killboss(bossname)
                                        
                                    end
                                else
                                    killboss(bossname)
                                    
                                end
                            else
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
                            end
                        elseif bossname == "Warden [Lv. 220] [Boss]" or  bossname == "Chief Warden [Lv. 230] [Boss]" or  bossname == "Swan [Lv. 240] [Boss]" then
                            if getdistance(Vector3.new(5587, 65, 1023)) < 5000 then
                                if getgenv().SaveSettings["AutoBossQuest"] then
                                    if checkQuest(bossname) == true then
                                        killboss(bossname)
                                        
                                    end
                                else
                                    killboss(bossname)
                                    
                                end
                            else 
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(3864.6884765625, 6.736950397491455, -1926.214111328125))
                            end
                        else
                            if setspawnat(bossselected.SpawnPoint) then
                                if getdistance(bossselected.MonsterPosition) < 3000 then
                                    if getgenv().SaveSettings["AutoBossQuest"] and bossselected.QuestPosition then
                                        if checkQuest(bossname) == true then
                                            killboss(bossname)
                                            
                                        end
                                    else
                                        killboss(bossname)
                                        
                                    end
                                elseif not Plr.PlayerGui.Main.Timer.Visible then
                                    Hum.Health = 0
                                    wait(5)
                                end
                            else
                                setspawnat(bossselected.SpawnPoint)
                            end
                        end
                    until not _G.AutoKillAllBoss or findmob(bossname) == "Undefind"
                end
            end)
        end
    end
end)



spawn(function()
    while wait() do
        pcall(function()
            if _G.UseSkillBloxFruit and _G.AutoFarmBloxFruit then
                if checkcoldown(Plr.Data.DevilFruit.Value,"Z") and getgenv().SaveSettings["Z"] then
                    if game.Players.LocalPlayer.Data.DevilFruit.Value == "Venom-Venom" then
                        useskill("Z",4)
                    else
                        useskill("Z",0)
                    end
                end
                if checkcoldown(Plr.Data.DevilFruit.Value,"X") and getgenv().SaveSettings["X"] then
                    useskill("X",0)
                end
                if checkcoldown(game.Players.LocalPlayer.Data.DevilFruit.Value,"C") and getgenv().SaveSettings["C"] then
                    if game.Players.LocalPlayer.Data.DevilFruit.Value == "Dragon-Dragon" then
                        useskill("C",4)
                    else
                        useskill("C",0)
                    end
                end
                if checkcoldown(Plr.Data.DevilFruit.Value,"V") and getgenv().SaveSettings["V"] then
                    useskill("V",0)
                end
            elseif _G.UseSkillGun and _G.AutoFarmgun then
                if checkcoldown(GetToolFromTip("Gun",true),"Z") and getgenv().SaveSettings["Z"] then
                    useskill("Z",0)
                end
                if checkcoldown(GetToolFromTip("Gun",true),"X") and getgenv().SaveSettings["X"] then
                    useskill("X",0)
                end
                if checkcoldown(GetToolFromTip("Gun",true),"C") and getgenv().SaveSettings["C"] then
                    useskill("C",0)
                end
                if checkcoldown(GetToolFromTip("Gun",true),"V") and getgenv().SaveSettings["V"] then
                    useskill("V",0)
                end
            end
        end)
    end
end)


spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["ectoplasm"] then
                if CheckNowWorld(2,true) then
                    repeat
                        task.wait()
                        if getdistance(Vector3.new(915, 126, 33129)) > 15000 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                            wait()
                        end
                        Tween2(Vector3.new(921, 126, 33127),"Vector")
                    until not getgenv().SaveSettings["ectoplasm"] or getdistance(Vector3.new(921, 126, 33127)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        killmob("Ship Deckhand [Lv. 1250]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    until not getgenv().SaveSettings["ectoplasm"] or findmob("Ship Deckhand [Lv. 1250]") == "Undefind"
                    repeat
                        task.wait()
                        if getdistance(Vector3.new(915, 126, 33129)) > 15000 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                            wait()
                        end
                        Tween2(Vector3.new(921, 126, 33127),"Vector")
                    until not getgenv().SaveSettings["ectoplasm"] or getdistance(Vector3.new(921, 126, 33127)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        if getdistance(MobData["Ship Engineer [Lv. 1275]"].MonsterPosition) < 3000 then
                            killmob("Ship Engineer [Lv. 1275]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        end 
                    until not getgenv().SaveSettings["ectoplasm"] or findmob("Ship Engineer [Lv. 1275]") == "Undefind"
                    repeat
                        task.wait()
                        if getdistance(Vector3.new(915, 126, 33129)) > 15000 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                            wait()
                        end
                        Tween2(Vector3.new(921, 126, 33127),"Vector")
                    until not getgenv().SaveSettings["ectoplasm"] or getdistance(Vector3.new(921, 126, 33127)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        if getdistance(MobData["Ship Officer [Lv. 1325]"].MonsterPosition) < 3000 then
                            killmob("Ship Officer [Lv. 1325]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        end 
                    until not getgenv().SaveSettings["ectoplasm"] or findmob("Ship Officer [Lv. 1325]") == "Undefind"
                    repeat
                        task.wait()
                        if getdistance(Vector3.new(915, 126, 33129)) > 15000 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                            wait()
                        end
                        Tween2(Vector3.new(921, 126, 33127),"Vector")
                    until not getgenv().SaveSettings["ectoplasm"] or getdistance(Vector3.new(921, 126, 33127)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        if getdistance(MobData["Ship Steward [Lv. 1300]"].MonsterPosition) < 3000 then
                            killmob("Ship Steward [Lv. 1300]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        end 
                    until not getgenv().SaveSettings["ectoplasm"] or findmob("Ship Steward [Lv. 1300]") == "Undefind"
                end
            elseif getgenv().SaveSettings["fishtail"] then
                if CheckNowWorld(1,true) then
                    repeat
                        task.wait()
                        Tween2(Vector3.new(61927, 19, 1458),"Vector")
                    until not getgenv().SaveSettings["fishtail"] or getdistance(Vector3.new(61927, 19, 1458)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        killmob("Fishman Commando [Lv. 400]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    until not getgenv().SaveSettings["fishtail"] or findmob("Fishman Commando [Lv. 400]") == "Undefind"
                    repeat
                        task.wait()
                        Tween2(Vector3.new(60891, 96, 1523),"Vector")
                    until not getgenv().SaveSettings["fishtail"] or getdistance(Vector3.new(60891, 96, 1523)) < 10
                    wait(1)
                    repeat
                        task.wait()
                        killmob("Fishman Warrior [Lv. 375]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    until not getgenv().SaveSettings["fishtail"] or findmob("Fishman Warrior [Lv. 375]") == "Undefind"
                end
            elseif getgenv().SaveSettings["gunpowder"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("Default") then
                        repeat
                            task.wait()
                            killmob("Pistol Billionaire [Lv. 1525]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["gunpowder"] or findmob("Pistol Billionaire [Lv. 1525]") == "Undefind"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Pirate Millionaire [Lv. 1500]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["gunpowder"] or findmob("Pirate Millionaire [Lv. 1500]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["leatherandscrapmetal"] then
                if CheckNowWorld(1,true) then
                    if setspawnat("Pirate") then
                        repeat
                            task.wait()
                            killmob("Brute [Lv. 45]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["leatherandscrapmetal"] or findmob("Brute [Lv. 45]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["bone"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("HauntedCastle") then
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-9497, 172, 6164),"Vector")
                        until not getgenv().SaveSettings["bone"] or getdistance(Vector3.new(-9497, 172, 6164)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Demonic Soul [Lv. 2025]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["bone"] or findmob("Demonic Soul [Lv. 2025]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-9585, 6, 6214),"Vector")
                        until not getgenv().SaveSettings["bone"] or getdistance(Vector3.new(-9585, 6, 6214)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Posessed Mummy [Lv. 2050]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["bone"] or findmob("Posessed Mummy [Lv. 2050]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-10085, 234, 5914),"Vector")
                        until not getgenv().SaveSettings["bone"] or getdistance(Vector3.new(-10085, 234, 5914)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Living Zombie [Lv. 2000]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["bone"] or findmob("Living Zombie [Lv. 2000]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-8762, 183, 6169),"Vector")
                        until not getgenv().SaveSettings["bone"] or getdistance(Vector3.new(-8762, 183, 6169)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Reborn Skeleton [Lv. 1975]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["bone"] or findmob("Reborn Skeleton [Lv. 1975]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["darkfragment"] then
                if CheckNowWorld(2,true) then
                    if findmob("Blackbeard [Lv. 1000] [Raid Boss]") ~= "Undefind" then
                        killboss("Blackbeard [Lv. 1000] [Raid Boss]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    else
                        if Plr.Backpack:FindFirstChild("Fist of Darkness") then
                            Hum:EquipTool(Plr.Backpack:FindFirstChild("Fist of Darkness"))
                        elseif Char:FindFirstChild("Fist of Darkness") then
                            Tween2(game:GetService("Workspace").Map.DarkbeardArena.Summoner.Detection.Position,"Vector")
                        else
                            local Chest = findchest()
                            if Chest ~= "Undefind" then
                                repeat
                                    wait()
                                    if getdistance(Chest.Position) < 5 then
                                        RootPart.CFrame = Chest.CFrame * CFrame.new(0,5,0)
                                        game:GetService("TweenService"):Create(
                                        game.Players.LocalPlayer.Character.HumanoidRootPart,
                                        TweenInfo.new(getdistance(Chest.Position)/30, Enum.EasingStyle.Linear),
                                        {CFrame = Chest.CFrame}
                                        ):Play()
                                    elseif getdistance(Chest.Position) < 100 then
                                        game:GetService("TweenService"):Create(
                                        game.Players.LocalPlayer.Character.HumanoidRootPart,
                                        TweenInfo.new(getdistance(Chest.Position)/50, Enum.EasingStyle.Linear),
                                        {CFrame = Chest.CFrame}
                                        ):Play()
                                    else
                                        Tween2(Chest.Position,"Vector")
                                    end
                                until Chest.Parent == nil or not getgenv().SaveSettings["darkfragment"] or Hum.Health <= 0 or Chest == "Undefind" or Plr.PlayerGui.Main.Timer.Visible or Plr.Backpack:FindFirstChild("Fist of Darkness") or Char:FindFirstChild("Fist of Darkness")
                            else
                                if getgenv().SaveSettings["settingautoweaponhop"] then
                                    if os.time() >= _G.RunScriptTime + 10 then
                                        HopServer()
                                    else
                                        repeat
                                            wait(1)
                                            Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                        until os.time() >= _G.RunScriptTime + 10
                                    end
                                end
                            end
                        end
                    end
                end
            elseif getgenv().SaveSettings["demonicwisp"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("HauntedCastle") then
                        repeat
                            task.wait()
                            killmob("Demonic Soul [Lv. 2025]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["demonicwisp"] or findmob("Demonic Soul [Lv. 2025]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["conjuredcocoa"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("Chocolate") then
                        repeat
                            task.wait()
                            killmob("Chocolate Bar Battler [Lv. 2325]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["conjuredcocoa"] or findmob("Chocolate Bar Battler [Lv. 2325]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["dragonscale"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("Hydra1") then
                        repeat
                            task.wait()
                            killmob("Dragon Crew Archer [Lv. 1600]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["dragonscale"] or findmob("Dragon Crew Archer [Lv. 1600]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["minitusk"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("BigMansion") then
                        repeat
                            task.wait()
                            killmob("Mythological Pirate [Lv. 1850]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["minitusk"] or findmob("Mythological Pirate [Lv. 1850]") == "Undefind"
                    end
                end
            elseif getgenv().SaveSettings["Magmaore"] then
                if CheckNowWorld(2,true) then
                    if setspawnat("CircleIslandFire") then
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-5251, 55, -4775),"Vector")
                        until not getgenv().SaveSettings["Magmaore"] or getdistance(Vector3.new(-5251, 55, -4775)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Lava Pirate [Lv. 1200]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        until not getgenv().SaveSettings["Magmaore"] or findmob("Lava Pirate [Lv. 1200]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-5412, 79, -6007),"Vector")
                        until not getgenv().SaveSettings["Magmaore"] or getdistance(Vector3.new(-5412, 79, -6007)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            if getdistance(MobData["Magma Ninja [Lv. 1175]"].MonsterPosition) < 3000 then
                                killmob("Magma Ninja [Lv. 1175]")
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end 
                        until not getgenv().SaveSettings["Magmaore"] or findmob("Magma Ninja [Lv. 1175]") == "Undefind"
                    else
                        setspawnat("CircleIslandFire")
                    end
                end
            elseif getgenv().SaveSettings["radioactivematerial"] then
                if CheckNowWorld(2,true) then
                    if setspawnat("Bar") then
                        repeat
                            task.wait()
                            Tween2(Vector3.new(627, 73, 61),"Vector")
                        until not getgenv().SaveSettings["radioactivematerial"] or getdistance(Vector3.new(627, 73, 61)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            if getdistance(MobData["Factory Staff [Lv. 800]"].MonsterPosition) < 3000 then
                                killmob("Factory Staff [Lv. 800]")
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end 
                        until not getgenv().SaveSettings["radioactivematerial"] or findmob("Factory Staff [Lv. 800]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-191, 149, -215),"Vector")
                        until not getgenv().SaveSettings["radioactivematerial"] or getdistance(Vector3.new(-191, 149, -215)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            if getdistance(MobData["Factory Staff [Lv. 800]"].MonsterPosition) < 3000 then
                                killmob("Factory Staff [Lv. 800]")
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end 
                        until not getgenv().SaveSettings["radioactivematerial"] or findmob("Factory Staff [Lv. 800]") == "Undefind"
                    else
                        setspawnat("Bar")
                    end
                end
            elseif getgenv().SaveSettings["vampirefang"] then
                if CheckNowWorld(2,true) then
                    repeat
                        task.wait()
                        if getdistance(MobData["Vampire [Lv. 975]"].MonsterPosition) < 3000 then
                            killmob("Vampire [Lv. 975]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        elseif not Plr.PlayerGui.Main.Timer.Visible then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-6508.55810546875, 89.03499603271484, -132.83953857421875))
                        end 
                    until not getgenv().SaveSettings["vampirefang"] or findmob("Vampire [Lv. 975]") == "Undefind"
                end
            elseif getgenv().SaveSettings["Mysticdroplet"] then
                if CheckNowWorld(2,true) then
                    if setspawnat("ForgottenIsland") then
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-3227, 299, -10539),"Vector")
                        until not getgenv().SaveSettings["Mysticdroplet"] or getdistance(Vector3.new(-3227, 299, -10539)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            if getdistance(MobData["Sea Soldier [Lv. 1425]"].MonsterPosition) < 3000 then
                                killmob("Sea Soldier [Lv. 1425]")
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end
                        until not getgenv().SaveSettings["Mysticdroplet"] or findmob("Sea Soldier [Lv. 1425]") == "Undefind"
                        repeat
                            task.wait()
                            Tween2(Vector3.new(-3042, 30, -9784),"Vector")
                        until not getgenv().SaveSettings["Mysticdroplet"] or getdistance(Vector3.new(-3042, 30, -9784)) < 10
                        wait(1)
                        repeat
                            task.wait()
                            if getdistance(MobData["Water Fighter [Lv. 1450]"].MonsterPosition) < 3000 then
                                killmob("Water Fighter [Lv. 1450]")
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            elseif not Plr.PlayerGui.Main.Timer.Visible then
                                Hum.Health = 0
                                wait(5)
                            end
                        until not getgenv().SaveSettings["Mysticdroplet"] or findmob("Water Fighter [Lv. 1450]") == "Undefind"
                    else
                        setspawnat("ForgottenIsland")
                    end
                end 
            elseif getgenv().SaveSettings["angelwings"] then
                if CheckNowWorld(1,true) then
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                           Tween2(Vector3.new(-7757, 5579, -488),"Vector")
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or getdistance(Vector3.new(-7757, 5579, -488)) < 10 or Hum.Health <= 0
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                            killmob("Shanda [Lv. 475]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or findmob("Shanda [Lv. 475]") == "Undefind" or Hum.Health <= 0
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                            Tween2(Vector3.new(-7639, 5637, -1411),"Vector")
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or getdistance(Vector3.new(-7639, 5637, -1411)) < 10 or Hum.Health <= 0
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                            killmob("Royal Squad [Lv. 525]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or findmob("Royal Squad [Lv. 525]") == "Undefind" or Hum.Health <= 0
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                            Tween2(Vector3.new(-7862, 5662, -1706),"Vector")
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or getdistance(Vector3.new(-7862, 5662, -1706)) < 10 or Hum.Health <= 0
                    repeat
                        task.wait()
                        if RootPart.Position.Y > 5400 then
                            killmob("Royal Soldier [Lv. 550]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    until not getgenv().SaveSettings["angelwings"] or findmob("Royal Soldier [Lv. 550]") == "Undefind" or Hum.Health <= 0
                    repeat
                        task.wait()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-4658, 873, -1770))
                    until not getgenv().SaveSettings["angelwings"] or getdistance(Vector3.new(-4658, 873, -1770)) < 10 or Hum.Health <= 0
                    wait(0.5)
                    repeat
                        task.wait()
                        killmob("God's Guard [Lv. 450]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    until not getgenv().SaveSettings["angelwings"] or findmob("God's Guard [Lv. 450]") == "Undefind" or Hum.Health <= 0


                    
                end 
            elseif getgenv().SaveSettings["meteorite"] then
                if CheckNowWorld(2,true) then
                    if setspawnat("Greenb") then
                        if findmob("Fajita [Lv. 925] [Boss]") ~= "Undefind" then
                            repeat
                                task.wait()
                                if getdistance(MobData["Fajita [Lv. 925] [Boss]"].MonsterPosition) < 3000 then
                                    if game.Players.LocalPlayer.Data.Level.Value >= 1200 then
                                        killboss("Fajita [Lv. 925] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                    else
                                        killboss("Fajita [Lv. 925] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                    end
                                elseif not Plr.PlayerGui.Main.Timer.Visible then
                                    Hum.Health = 0
                                    wait(5)
                                end
                            until  not getgenv().SaveSettings["meteorite"] or findmob("Fajita [Lv. 925] [Boss]") == "Undefind"
                        else
                            if getgenv().SaveSettings["AutoFarmItemHop"] then
                                if os.time() >= _G.RunScriptTime + 10 then
                                    HopServer()
                                else
                                    repeat
                                        wait(1)
                                        Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                    until os.time() >= _G.RunScriptTime + 10
                                end
                            end
                        end
                    else
                        setspawnat("Greenb")
                    end
                end
            elseif getgenv().SaveSettings["Yetifur"] then
                if CheckNowWorld(1,true) then
                    if setspawnat("Ice") then
                        if findmob("Yeti [Lv. 110] [Boss]") ~= "Undefind" then
                            repeat
                                task.wait()
                                if getdistance(MobData["Yeti [Lv. 110] [Boss]"].MonsterPosition) < 3000 then
                                    if game.Players.LocalPlayer.Data.Level.Value >= 1200 then
                                        killboss("Yeti [Lv. 110] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                    else
                                        killboss("Yeti [Lv. 110] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                    end
                                elseif not Plr.PlayerGui.Main.Timer.Visible then
                                    Hum.Health = 0
                                    wait(5)
                                end
                            until  not getgenv().SaveSettings["Yetifur"] or findmob("Yeti [Lv. 110] [Boss]") == "Undefind"
                        else
                            if getgenv().SaveSettings["AutoFarmItemHop"] then
                                if os.time() >= _G.RunScriptTime + 10 then
                                    HopServer()
                                else
                                    repeat
                                        wait(1)
                                        Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                    until os.time() >= _G.RunScriptTime + 10
                                end
                            end
                        end
                    else
                        setspawnat("Ice")
                    end
                end
            end
            
            
            
            
        end)
    end
end)




function getsaberquest(Data)
    -- UsedTorch = false
    -- UsedCup = false
    -- TalkedSon = false
    -- KilledMob = false
    -- UsedRelic = false
    -- KilledShanks = false

    for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress")) do
        if i == "Plates" then
            for a,b in pairs(v) do
                if b == false then
                    for index=1,7 do
                        local args = {
                            [1] = "ProQuestProgress",
                            [2] = "Plate",
                            [3] = index
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                    Hum.Health = 0 
                end
            end
        else
            if i == Data then
                return v
            end
        end
    end 
end
function checkdoingshank()
    if (getgenv().SaveSettings["autosaber"] or getgenv().SaveSettings["AutoObservationhaki"]) then
        return true
    elseif (getgenv().SaveSettings["AutoDressrosa"] and _G.ShankQuestKIlled == false and Plr.Data.Level.Value >= 700) then
        return true 
    end
    return false
end
spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["AutoDressrosa"] and Plr.Data.Level.Value >= 700 then
                if getsaberquest("KilledShanks") then
                   if findmob("Ice Admiral [Lv. 700] [Boss]") then
                        if _G.CheckNewWorld == "TalkedDetective" then
                            local args = {
                                [1] = "DressrosaQuestProgress",
                                [2] = "Detective"
                            }
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                        elseif _G.CheckNewWorld == "UsedKey" then
                            if Plr.Backpack:FindFirstChild("Key") then
                                Hum:EquipTool(Plr.Backpack:FindFirstChild("Key"))
                            elseif Char:FindFirstChild("Key") then
                                if getdistance(Vector3.new(1363, 37, -1321)) < 20 then
                                    RootPart.CFrame = game:GetService("Workspace").Map.Ice.Door.CFrame
                                else
                                    Tween(Vector3.new(1363, 37, -1321))
                                end
                            else
                                local args = {
                                    [1] = "DressrosaQuestProgress",
                                    [2] = "Detective"
                                }
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                            end
                        elseif _G.CheckNewWorld == "KilledIceBoss" then
                            repeat
                                task.wait()
                                if setspawnat("Ice") then
                                    if getdistance(MobData["Ice Admiral [Lv. 700] [Boss]"].MonsterPosition) < 3000 then
                                        killmob("Ice Admiral [Lv. 700] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                        Attack()
                                    elseif checkfruitinven() == false and not Plr.PlayerGui.Main.Timer.Visible then
                                        Hum.Health = 0
                                        wait(5)
                                    end
                                else
                                    setspawnat("Ice")
                                end
                            until not getgenv().SaveSettings["AutoDressrosa"] or _G.CheckNewWorld == "cango"
                        elseif _G.CheckNewWorld == "cango" then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            if checkdoingshank() then
                if setspawnat("Jungle",true) then
                    if getsaberquest("UsedTorch") then
                        if getsaberquest("UsedCup") then
                            if getsaberquest("TalkedSon") then
                                if getsaberquest("KilledMob") then
                                    if getsaberquest("UsedRelic") then
                                        if getgenv().SaveSettings["AutoObservationhaki"] and getsaberquest("KilledShanks") then
                                            local args = {
                                                [1] = "KenTalk",
                                                [2] = "Start"
                                            }
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            local args = {
                                                [1] = "KenTalk",
                                                [2] = "Buy"
                                            }
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                        end
                                        if findmob("Saber Expert [Lv. 200] [Boss]") ~= "Undefind" then
                                            repeat
                                                task.wait()
                                                -- warn("HERE 2")
                                                if setspawnat("Jungle") then
                                                    if getdistance(MobData["Saber Expert [Lv. 200] [Boss]"].MonsterPosition) < 900 then 
                                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                        killmob("Saber Expert [Lv. 200] [Boss]")
                                                        Attack()
                                                    elseif not Plr.PlayerGui.Main.Timer.Visible then
                                                        Hum.Health = 0
                                                        wait(5)
                                                    end
                                                else
                                                    setspawnat("Jungle")
                                                end
                                            until not checkdoingshank() or findmob("Saber Expert [Lv. 200] [Boss]") == "Undefind"
                                        elseif checkdoingshank() and getgenv().SaveSettings["settingautoweaponhop"] then
                                            if os.time() >= _G.RunScriptTime + 10 then
                                                HopServer()
                                            else
                                                repeat
                                                    wait(1)
                                                    Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                                until os.time() >= _G.RunScriptTime + 10
                                            end
                                        end
                                    else
                                        if game.Players.LocalPlayer.Character:FindFirstChild("Relic") then
                                            if getdistance(Vector3.new(-1404, 30, 6)) < 10 then
                                                local args = {
                                                    [1] = "ProQuestProgress",
                                                    [2] = "PlaceRelic"
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            else
                                                Tween(Vector3.new(-1404, 30, 6))
                                            end
                                        elseif game.Players.LocalPlayer.Backpack:FindFirstChild("Relic") then
                                            Hum:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Relic"))
                                        else
                                            local args = {
                                                [1] = "ProQuestProgress",
                                                [2] = "RichSon"
                                            }
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            local args = {
                                                [1] = "ProQuestProgress"
                                            }
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                        end
                                    end
                                else
                                    repeat
                                        task.wait()
                                        killmob("Mob Leader [Lv. 120] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                        Attack()
                                    until not checkdoingshank() or findmob("Mob Leader [Lv. 120] [Boss]") == "Undefind" or getsaberquest("KilledMob")
                                    
                                end
                            else
                                local args = {
                                    [1] = "ProQuestProgress",
                                    [2] = "RichSon"
                                }
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                            end
                        else
                            if game.Players.LocalPlayer.Character:FindFirstChild("Cup") then
                                if getdistance(Vector3.new(1395, 37, -1319)) < 10 then
                                    if game.Players.LocalPlayer.Character:FindFirstChild("Cup") and game.Players.LocalPlayer.Character.Cup.Handle:FindFirstChild("Drop1") and game.Players.LocalPlayer.Character.Cup.Handle.Drop1.Transparency == 1 then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1396.80334, 37.6912575, -1321.38684, -0.429715991, 1.5739559e-08, 0.902964115, 4.86387242e-09, 1, -1.51162975e-08, -0.902964115, -2.10381268e-09, -0.429715991)
                                    else
                                        local args = {
                                            [1] = "ProQuestProgress",
                                            [2] = "SickMan"
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                    end
                                else
                                    Tween(Vector3.new(1395, 37, -1319))
                                end
                            elseif game.Players.LocalPlayer.Backpack:FindFirstChild("Cup") then
                                Hum:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Cup"))
                            else
                                if getdistance(Vector3.new(1111, 5, 4362)) < 10 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Desert.Cup.CFrame
                                    firetouchinterest(game:GetService("Workspace").Map.Desert.Cup.TouchInterest,game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                                else
                                    Tween(Vector3.new(1111, 5, 4362))
                                end
                            end
                        end
                    else
                        if game.Players.LocalPlayer.Character:FindFirstChild("Torch") then
                            if getdistance(Vector3.new(1115, 5, 4350)) < 10 then
                                RootPart.CFrame = CFrame.new(1114.62976, 5.26472712, 4350.06396, -0.660040915, 1.22478685e-08, 0.751229584, 7.00528062e-08, 1, 4.52456241e-08, -0.751229584, 8.24896986e-08, -0.660040915)
                            else
                                Tween(Vector3.new(1115, 5, 4350))
                            end
                        elseif game.Players.LocalPlayer.Backpack:FindFirstChild("Torch") then
                            Hum:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Torch"))
                        else
                            if getdistance(Vector3.new(-1610, 12, 162)) < 10 then
                                RootPart.CFrame = game:GetService("Workspace").Map.Jungle.Torch.CFrame
                                firetouchinterest(game:GetService("Workspace").Map.Jungle.Torch.TouchInterest,game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                            else
                                Tween(Vector3.new(-1610, 12, 162))
                            end
                        end
                    end
                else
                    setspawnat("Jungle",true)
                end
            elseif getgenv().SaveSettings["autopole"] then
                if CheckNowWorld(1,true) then
                    if findmob("Thunder God [Lv. 575] [Boss]") ~= "Undefind" then
                        if RootPart.Position.Y > 5500 then
                            if game.Workspace.Enemies:FindFirstChild("Thunder God [Lv. 575] [Boss]") then
                                Tween2(game.Workspace.Enemies:FindFirstChild("Thunder God [Lv. 575] [Boss]").HumanoidRootPart,nil,CFrame.new(0,20,0))
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            else
                                Tween2(Vector3.new(-7917, 5616, -2277),"Vector")
                            end
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7862, 5545, -381))
                        end
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                end
            end
        end) 
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["autobuddysword"] then
                if CheckNowWorld(3) then
                    if findmob("Cake Queen [Lv. 2175] [Boss]") ~= "Undefind" then
                        killboss("Cake Queen [Lv. 2175] [Boss")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(3,true)
                end
            elseif getgenv().SaveSettings["autobisentov2"] then
                if CheckNowWorld(1) then
                    if findmob("Greybeard [Lv. 750] [Raid Boss]") ~= "Undefind" then
                        killboss("Greybeard [Lv. 750] [Raid Boss]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(1,true)
                end
            elseif getgenv().SaveSettings["autosharksaw"] then
                if CheckNowWorld(1) then
                    if findmob("The Saw [Lv. 100] [Boss]") ~= "Undefind" then
                        killboss("The Saw [Lv. 100] [Boss]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(1,true)
                end
            elseif getgenv().SaveSettings["autotrident"] then
                if CheckNowWorld(1) then
                    if findmob("Fishman Lord [Lv. 425] [Boss]") ~= "Undefind" then
                        killboss("Fishman Lord [Lv. 425] [Boss]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(1,true)
                end
            elseif getgenv().SaveSettings["automidnightblade"] then
                if CheckNowWorld(2) then
                    if findmob("Cursed Captain [Lv. 1325] [Raid Boss]") ~= "Undefind" then
                        if getdistance(Vector3.new(1029, 125, 32907)) < 1000 then
                            killboss("Cursed Captain [Lv. 1325] [Raid Boss]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(1029, 125, 32907))
                        end
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(2,true)
                end
            elseif getgenv().SaveSettings["autocanvander"] then
                if CheckNowWorld(3) then
                    if findmob("Beautiful Pirate [Lv. 1950] [Boss]") ~= "Undefind" then
                        if getdistance(Vector3.new(5311, 23, -25)) < 500 then
                            killboss("Beautiful Pirate [Lv. 1950] [Boss]")
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack()
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656))
                        end
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(3,true)
                end
            elseif getgenv().SaveSettings["Autoserpentbow"] then
                if CheckNowWorld(3) then
                    if findmob("Island Empress [Lv. 1675] [Boss]") ~= "Undefind" then
                        killboss("Island Empress [Lv. 1675] [Boss]")
                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                        Attack()
                    elseif getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(3,true)
                end
                
                


                
            end
        end) 
    end
end)


if game.PlaceId == 7449423635 then -- world 3 -- warp
    spawn(function()
        while wait() do
            pcall(function()
                if _G.AutoElite or getgenv().SaveSettings["AutoEliteHop"] or (DoEliteQuest and getgenv().SaveSettings["autoyama"]) or getgenv().SaveSettings["Autobandanna"] or getgenv().SaveSettings["Autohuntercape"] then
                    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Notifications:GetChildren()) do
                        if string.find("You defeated an elite enemy!",v.Text) then
                            cancelquest()
                        end
                    end
                    if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible then
                        if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Urban") then
                            EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Urban)")
                            if game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]") then
                                if (game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(5746, 668, -287)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                if (game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(-12470, 389, -7586)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                Tween2(game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart)
                            elseif game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") then
                                Tween2(game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart,nil,CFrame.new(0,30,0))
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            end
                            
                        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Deandre") then
                            EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Deandre)")
                            MonsterEliteNamed = "Deandre [Lv. 1750]"
                            if game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed) then
                                if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(5746, 668, -287)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(-12470, 389, -7586)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                Tween2(game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart)
                            elseif game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed) then
                                Tween2(game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed).HumanoidRootPart,nil,CFrame.new(0,30,0))
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            end
                        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Diablo") then
                            EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Diablo)")
                            MonsterEliteNamed = "Diablo [Lv. 1750]"
                            if game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed) then
                                if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(5746, 668, -287)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(-12470, 389, -7586)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                Tween2(game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart)
                            elseif game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed) then
                                Tween2(game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed).HumanoidRootPart,nil,CFrame.new(0,30,0))
                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                Attack()
                            end
                        end
                    else
                        local message = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                        if message == "I don't have anything for you right now. Come back later." then
                            if getgenv().SaveSettings["AutoEliteHop"] or (DoEliteQuest and getgenv().SaveSettings["autoyama"]) then
                                if getgenv().SaveSettings["stopwhengodChalice"] and (game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice")) and not (DoEliteQuest and getgenv().SaveSettings["autoyama"]) then
                                else
                                    if os.time() >= _G.RunScriptTime + 10 then
                                        HopServer()
                                    else
                                        repeat
                                            wait(1)
                                            Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                        until os.time() >= _G.RunScriptTime + 10
                                    end
                                end
                            end
                            EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Not Spawn.")
                        end
                    end
                end
            end) 
        end
    end)
end
function checkitem(Name)
    game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.Search.TextBox.Text = ""
    task.wait()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetDescendants()) do
        if v.Name == "ItemName" and v.Text == Name then
            return true
        end
    end
    return false
end
function checkmastery(Name)
    if checkitem(Name) then
        if game.Players.LocalPlayer.Backpack:FindFirstChild(Name) then
            return game.Players.LocalPlayer.Backpack:FindFirstChild(Name).Level.Value
        elseif game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
            return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Level.Value
        else
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadItem",Name)
        end
    end
end
function checkCDKQuest(Type)
    if Type == "OpenDoor" then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","OpenDoor",true)
        return game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","OpenDoor")
    end
    if Type == "Good" then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
        return game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
    end
    if Type == "Evil" then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
        return game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
    end
end
function scrollCheck(Type)
    for i,v in pairs(checkCDKQuest(Type)) do
        if i == "Good" and v == -3 and Type == "Good" then
            return "TALK 3 SHIP"
        elseif i == "Good" and v == -4 and Type == "Good" then
            return "CASTLE RAID"
        elseif i == "Good" and v == -5 and Type == "Good" then
            return "KILL BIG MOM"
        elseif i == "Good" and v == 4 and Type == "Good" then
            return "Finished"
        elseif i == "Good" and v == -2 and Type == "Good" then
            return "Finished"
        end
        if i == "Evil" and v == -3 and Type == "Evil" then
            return "DIE BY MON"
        elseif i == "Evil" and v == -4 and Type == "Evil" then
            return "KILLPINKMON"
        elseif i == "Evil" and v == -5 and Type == "Evil" then
            return "Reaper"
        elseif i == "Evil" and v == 4 and Type == "Evil" then
            return "Finished"
        elseif i == "Evil" and v == -2 and Type == "Evil" then
            return "Finished"
        end
    end
end
function getnearenemie(Distance)
    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        if getdistance(v.HumanoidRootPart.Position) < Distance then
            return v
        end
    end
    return "Undefind"
end
function fireproximityprompt(ProximityPrompt)
	local HoldDuration = ProximityPrompt.HoldDuration
	ProximityPrompt.HoldDuration = 0
	for i = 1, Amount or 1 do
		ProximityPrompt:InputHoldBegin()
		local RunService = game:GetService("RunService")
		local Start = time()
		repeat
			RunService.Heartbeat:Wait(0.1)
		until time() - Start > HoldDuration
		ProximityPrompt:InputHoldEnd()
	end
	ProximityPrompt.HoldDuration = HoldDuration
end
function checkdimension()
    if game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") then
        for i,v in pairs(game:GetService("Workspace").Map.HeavenlyDimension:GetChildren()) do
            if v.Name == "ActivePlayers" and tostring(v.Value.Value) == Plr.Name then
                return v.Parent
            end
        end
        return "Undefind"
    else
        return "Undefind"
    end
end
function checkhelldimension()
    if game:GetService("Workspace").Map:FindFirstChild("HellDimension") then
        for i,v in pairs(game:GetService("Workspace").Map.HellDimension:GetChildren()) do
            if v.Name == "ActivePlayers" and tostring(v.Value.Value) == Plr.Name then
                return v.Parent
            end
        end
        return "Undefind"
    else
        return "Undefind"
    end
end
function getfullname(Name)
    for i,v in pairs(MobData) do
        if string.find(i,Name) then
            return i 
        end
    end
end
function getkilloinkmon()
    if Plr:FindFirstChild("QuestHaze") then
        for i,v in pairs(Plr.QuestHaze:GetChildren()) do
            if v.Value > 0 then
                return getfullname(v.Name)
            end
        end
    end
end
local Killmonsterforbonestate = 1
local monstergetbone = {
    "Demonic Soul [Lv. 2025]",
    "Reborn Skeleton [Lv. 1975]",
    "Living Zombie [Lv. 2000]",
    "Posessed Mummy [Lv. 2050]",
}
spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["AutoDualCursedSword"] and CheckNowWorld(3,true) then
                if os.time() >= _G.RunScriptTime + 12 then
                    if _G.HaveYama or checkitem("Yama") then
                        _G.HaveYama = true
                        if _G.CheckedYama350 or checkmastery("Yama") >= 350 then
                            _G.CheckedYama350 = true
                            if _G.HaveTushita or checkitem("Tushita") then
                                _G.HaveTushita = true
                                if _G.CheckedTushita350 or checkmastery("Tushita") >= 350 then
                                    _G.CheckedTushita350 = true
                                    if _G.DoorOpened or checkCDKQuest("OpenDoor") == "opened" then
                                        _G.DoorOpened = true
                                        if scrollCheck("Good") == "TALK 3 SHIP" then
                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Boat Dealer (0/3)")
                                            -- 1
                                            repeat
                                                wait()
                                                Tween2(Vector3.new(-9532, 7, -8373),"Vector")
                                            until getdistance(Vector3.new(-9532, 7, -8373)) < 10 or not getgenv().SaveSettings["AutoDualCursedSword"] or scrollCheck("Good") ~= "TALK 3 SHIP"
                                            wait(1)
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Boat Dealer (1/3)")
                                            -- 2
                                            repeat
                                                wait()
                                                Tween2(Vector3.new(-4602, 16, -2881),"Vector")
                                            until getdistance(Vector3.new(-4602, 16, -2881)) < 10 or not getgenv().SaveSettings["AutoDualCursedSword"] or scrollCheck("Good") ~= "TALK 3 SHIP"
                                            wait(1)
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Boat Dealer (2/3)")
                                            -- 3
                                            repeat
                                                wait()
                                                Tween2(Vector3.new(3236, 9, 1599),"Vector")
                                            until getdistance(Vector3.new(3236, 9, 1599)) < 10 or not getgenv().SaveSettings["AutoDualCursedSword"] or scrollCheck("Good") ~= "TALK 3 SHIP"
                                            wait(1)
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output  Boat Dealer (3/3)")
                                        elseif scrollCheck("Good") == "CASTLE RAID" then
                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Waiting Raid Castle.")
                                            repeat
                                                wait()
                                                if type(getmonsterincastle("Enemies")) == "userdata" then
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killing Raid Castle.")
                                                    Tween2(getmonsterincastle("Enemies").HumanoidRootPart,nil,CFrame.new(0,20,0))
                                                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                    Attack()
                                                elseif getmonsterincastle("ReplicatedStorage") == "FOUND" then
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Going to Castle.")
                                                    Tween2(Vector3.new(-5539, 386, -2874),"Vector")
                                                else
                                                    Tween2(Vector3.new(-5540, 314, -2960),"Vector")
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Waiting Raid Castle.")
                                                end
                                            until scrollCheck("Good") ~= "CASTLE RAID" or not getgenv().SaveSettings["AutoDualCursedSword"]
                                        elseif scrollCheck("Good") == "KILL BIG MOM" then
                                            if checkdimension() ~= "Undefind" then
                                                if getnearenemie(500) == "Undefind" then
                                                    if checkdimension().Torch1.ProximityPrompt.Enabled then
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 1.")
                                                        if getdistance(checkdimension().Torch1.Particles.Position) > 5 then
                                                            Tween2(checkdimension().Torch1.Particles.Position,"Vector")
                                                        else
                                                            game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                        end
                                                    elseif checkdimension().Torch2.ProximityPrompt.Enabled then
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 2.")
                                                        if getdistance(checkdimension().Torch2.Particles.Position) > 5 then
                                                            Tween2(checkdimension().Torch2.Particles.Position,"Vector")
                                                        else
                                                            warn(getdistance(checkdimension().Torch2.Particles.Position))
                                                            game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                        end
                                                    elseif checkdimension().Torch3.ProximityPrompt.Enabled then
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 3.")
                                                        if getdistance(checkdimension().Torch3.Particles.Position) > 5 then
                                                            Tween2(checkdimension().Torch3.Particles.Position,"Vector")
                                                        else
                                                            game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                        end
                                                    elseif #checkdimension().Exit:GetChildren() == 2 then
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Exiting.")
                                                        Tween2(checkdimension().Exit.Position,"Vector")
                                                    end
                                                else
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killing Mob.")
                                                    game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                    repeat
                                                        wait()
                                                        if getdistance(getnearenemie(500).HumanoidRootPart.Position) < 30 then
                                                            RootPart.CFrame = getnearenemie(500).HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                                                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                            Attack()
                                                        else
                                                            Tween2(getnearenemie(500).HumanoidRootPart,nil,CFrame.new(0,20,0))
                                                        end
                                                    until getnearenemie(500) == "Undefind" or not getgenv().SaveSettings["AutoDualCursedSword"] or Hum.Health <= 0
                                                end
                                            else
                                                if findmob("Cake Queen [Lv. 2175] [Boss]") ~= "Undefind" then
                                                    repeat
                                                        task.wait()
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killing Big Mom.")
                                                        killboss("Cake Queen [Lv. 2175] [Boss]")
                                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                    until findmob("Cake Queen [Lv. 2175] [Boss]") == "Undefind" or not getgenv().SaveSettings["AutoDualCursedSword"] or scrollCheck("Good") ~= "KILL BIG MOM" or getdistance(Vector3.new(-22567, 5275, 3721)) < 500
                                                else
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Waiting Big Mom.")
                                                end
                                            end
                                        elseif _G.TushitaFinished or scrollCheck("Good") == "Finished" then
                                            _G.TushitaFinished = true
                                            if scrollCheck("Evil") == "DIE BY MON" then
                                                dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killed by monster.")
                                                if game:GetService("Workspace").Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]") then
                                                    Tween2(game:GetService("Workspace").Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart,nil,CFrame.new(0,0,3))
                                                else
                                                    Tween2(Vector3.new(-13222, 520, -6804),"Vector")
                                                end
                                            elseif scrollCheck("Evil") == "KILLPINKMON" then
                                                repeat
                                                    task.wait()
                                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Kill Pink Monster.")
                                                    killmob(getkilloinkmon())
                                                until scrollCheck("Evil") ~= "KILLPINKMON" or not getgenv().SaveSettings["AutoDualCursedSword"]
                                            elseif scrollCheck("Evil") == "Finished" then
                                                if findmob("Cursed Skeleton Boss [Lv. 2025] [Boss]") ~= "Undefind" then
                                                    repeat
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killing Last Boss.")
                                                        task.wait()
                                                        EquipWeapon("Sword")
                                                        killboss("Cursed Skeleton Boss [Lv. 2025] [Boss]")
                                                    until findmob("Cursed Skeleton Boss [Lv. 2025] [Boss]") == "Undefind" or not getgenv().SaveSettings["AutoDualCursedSword"]
                                                else
                                                    if (game:GetService("Workspace").Map.Turtle.Cursed.BossDoor.Position - Vector3.new(-12346, 616.058, -6551.01)).Magnitude > 10 then
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Spawning The Boss.")
                                                        Tween2(MobData["Cursed Skeleton Boss [Lv. 2025] [Boss]"].MonsterPosition,"Vector")
                                                    else
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Gem.")
                                                        if getdistance(Vector3.new(-12354, 603, -6554)) < 3 then
                                                            game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                            wait()
                                                            game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                        else
                                                            Tween2(Vector3.new(-12354, 603, -6554),"Vector")
                                                        end
                                                    end
                                                end
                                            elseif scrollCheck("Evil") == "Reaper" then
                                                if checkhelldimension() ~= "Undefind" then
                                                    if getnearenemie(500) == "Undefind" then
                                                        if checkhelldimension().Torch1.ProximityPrompt.Enabled then
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 1.")
                                                            if getdistance(checkhelldimension().Torch1.Particles.Position) > 5 then
                                                                Tween2(checkhelldimension().Torch1.Particles.Position,"Vector")
                                                            else
                                                                game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                            end
                                                        elseif checkhelldimension().Torch2.ProximityPrompt.Enabled then
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 2.")
                                                            if getdistance(checkhelldimension().Torch2.Particles.Position) > 5 then
                                                                Tween2(checkhelldimension().Torch2.Particles.Position,"Vector")
                                                            else
                                                                warn(getdistance(checkhelldimension().Torch2.Particles.Position))
                                                                game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                            end
                                                        elseif checkhelldimension().Torch3.ProximityPrompt.Enabled then
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Placing Torch 3.")
                                                            if getdistance(checkhelldimension().Torch3.Particles.Position) > 5 then
                                                                Tween2(checkhelldimension().Torch3.Particles.Position,"Vector")
                                                            else
                                                                game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                            end
                                                        elseif #checkhelldimension().Exit:GetChildren() == 2 then
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Exiting.")
                                                            Tween2(checkhelldimension().Exit.Position,"Vector")
                                                        end
                                                    else
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Killing Mob.")
                                                        game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                                        repeat
                                                            wait()
                                                            if getdistance(getnearenemie(500).HumanoidRootPart.Position) < 30 then
                                                                RootPart.CFrame = getnearenemie(500).HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                                                                EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                                                Attack()
                                                            else
                                                                Tween2(getnearenemie(500).HumanoidRootPart,nil,CFrame.new(0,20,0))
                                                            end
                                                        until getnearenemie(500) == "Undefind" or not getgenv().SaveSettings["AutoDualCursedSword"] or Hum.Health <= 0
                                                    end
                                                else
                                                    if findmob("Soul Reaper [Lv. 2100] [Raid Boss]") ~= "Undefind" then
                                                        if game.Workspace.Enemies:FindFirstChild("Soul Reaper [Lv. 2100] [Raid Boss]") then
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Going to Hell.")
                                                            Tween2(game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper [Lv. 2100] [Raid Boss]").HumanoidRootPart,nil,CFrame.new(0,0,3))
                                                        else
                                                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Going to Soul Reaper.")
                                                            Tween2(MobData["Soul Reaper [Lv. 2100] [Raid Boss]"].MonsterPosition,"Vector")
                                                        end
                                                    else
                                                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Trying to spawn boss.")
                                                        if game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") then
                                                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence"))
                                                        elseif game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") then
                                                            Tween2(Vector3.new(-8933, 147, 6064),"Vector")
                                                        else
                                                            repeat
                                                                task.wait()
                                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                                                                if game.Workspace.Enemies:FindFirstChild(monstergetbone[Killmonsterforbonestate]) then
                                                                    killmob(monstergetbone[Killmonsterforbonestate])
                                                                else
                                                                    Killmonsterforbonestate = Killmonsterforbonestate + 1
                                                                    if Killmonsterforbonestate > 4 then
                                                                        Killmonsterforbonestate = 1
                                                                    end
                                                                    Distance = (Vector3.new(-9482, 142, 5877) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                                                    if Distance < 250 then
                                                                        Speed = 1000
                                                                    elseif Distance < 500 then
                                                                        Speed = 400
                                                                    elseif Distance < 1000 then 
                                                                        Speed = 350
                                                                    elseif Distance >= 1000 then
                                                                        Speed = 200
                                                                    end
                                                                    game:GetService("TweenService"):Create(
                                                                        game.Players.LocalPlayer.Character.HumanoidRootPart,
                                                                        TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                                                        {CFrame = CFrame.new(-9482, 142, 5877)}
                                                                    ):Play()
                                                                end
                                                            until game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or findmob("Soul Reaper [Lv. 2100] [Raid Boss]") ~= "Undefind" or not getgenv().SaveSettings["AutoDualCursedSword"] or checkhelldimension() ~= "Undefind"
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        
                                    end
                                else
                                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Low Mastery Tushita.")
                                    if game.Workspace.Enemies:FindFirstChild(monstergetbone[Killmonsterforbonestate]) then
                                        killmob(monstergetbone[Killmonsterforbonestate])
                                    else
                                        Killmonsterforbonestate = Killmonsterforbonestate + 1
                                        if Killmonsterforbonestate > 4 then
                                            Killmonsterforbonestate = 1
                                        end
                                        Distance = (Vector3.new(-9482, 142, 5877) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                        if Distance < 250 then
                                            Speed = 1000
                                        elseif Distance < 500 then
                                            Speed = 400
                                        elseif Distance < 1000 then
                                            Speed = 350
                                        elseif Distance >= 1000 then
                                            Speed = 200
                                        end
                                        game:GetService("TweenService"):Create(
                                            game.Players.LocalPlayer.Character.HumanoidRootPart,
                                            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                            {CFrame = CFrame.new(-9482, 142, 5877)}
                                        ):Play()
                                    end
                                end
                            else
                                dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Undefind Tushita.")
                                toggledualsword:SetValue(false)
                            end
                            
                        else
                            dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Low Mastery Yama.")
                            if game.Workspace.Enemies:FindFirstChild(monstergetbone[Killmonsterforbonestate]) then
                                killmob(monstergetbone[Killmonsterforbonestate])
                            else
                                Killmonsterforbonestate = Killmonsterforbonestate + 1
                                if Killmonsterforbonestate > 4 then
                                    Killmonsterforbonestate = 1
                                end
                                Distance = (Vector3.new(-9482, 142, 5877) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                if Distance < 250 then
                                    Speed = 1000
                                elseif Distance < 500 then
                                    Speed = 400
                                elseif Distance < 1000 then
                                    Speed = 350
                                elseif Distance >= 1000 then
                                    Speed = 200
                                end
                                game:GetService("TweenService"):Create(
                                    game.Players.LocalPlayer.Character.HumanoidRootPart,
                                    TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                    {CFrame = CFrame.new(-9482, 142, 5877)}
                                ):Play()
                            end
                        end
                    else
                        dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Undefind Yama.")
                        toggledualsword:SetValue(false)
                    end
                else
                    dualswordlabel:SetText(_G.dubblesword_icon .. " Output : Cooldown Quest (".._G.RunScriptTime - os.time() + 12 .."s)")
                end
            end
        end)
    end
end)
spawn(function()
    while task.wait() do
        if getgenv().SaveSettings["Autotraningdummy"] and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
            pcall(function()
                if getgenv().SaveSettings["SelectedNextGenTeleport"] == "Set Spawn" then
                    if setspawnat("Hydra1") then
                        if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible then
                            if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Training") then
                                killmob("Training Dummy [Lv. 1500]")
                            else
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                            end
                        else
                            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(3496, 91, 282)).Magnitude < 10 then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ArenaTrainer")
                            else
                                Tween2(Vector3.new(3496, 91, 282),"Vector")
                            end
                        end
                    end
                else
                    if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible then
                        if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Training") then
                            killmob("Training Dummy [Lv. 1500]")
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                        end
                    else
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(3496, 91, 282)).Magnitude < 10 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ArenaTrainer")
                        else
                            Tween2(Vector3.new(3496, 91, 282),"Vector")
                        end
                    end
                end
            end)
        end
    end
end)
-- main loop 2
spawn(function()
    while wait() do
        -- pcall(function()
            if game:GetService("Lighting"):FindFirstChild("FantasySky") then
                if game:GetService("Lighting").FantasySky.MoonTextureId == "http://www.roblox.com/asset/?id=9709149431" then
                    if game.Lighting.ClockTime >= 17.6 or game.Lighting.ClockTime <= 6.3 then
                        fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : Yes")
                    else
                        fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : Wating Night Time . . .")
                    end
                else
                    fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : No")
                end
            elseif game:GetService("Lighting"):FindFirstChild("Sky") then
                if game:GetService("Lighting").Sky.MoonTextureId == "http://www.roblox.com/asset/?id=9709149431" then
                    if game.Lighting.ClockTime >= 17.6 or game.Lighting.ClockTime <= 6.3 then
                        fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : Yes")
                    else
                        fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : Wating Night Time . . .")
                    end
                else
                    fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : No")
                end
            else
                fullmoonlabel:SetText(_G.moon_icon .. " Full Moon : Undefind")
            end
            earnedbounty:SetText("Earned Bounty : " .. comma_value(Plr.leaderstats["Bounty/Honor"].Value-tonumber(_G.CollectFirstBounty)))
            if getgenv().SaveSettings["Autotradedeathking"] then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1) 
            end
            observationhakitotal:SetText(_G.Earth_icon .. " Observation Level : "..game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1])
            if not game.Workspace:FindFirstChild("FakeWater") then
                local FakeWater = Instance.new("Part",game.Workspace)
                FakeWater.Size = Vector3.new(40,0,40)
                FakeWater.Anchored = true
                FakeWater.Name = "FakeWater"
            end
            if getgenv().SaveSettings["Walkowater"] then
                game.Workspace.FakeWater.CanCollide = true
                game.Workspace.FakeWater.CFrame = CFrame.new(Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X,-4.25,game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z))
            else
                game.Workspace.FakeWater.CanCollide = false
            end
        -- end)
    end
end)

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        pcall(function()
            _G.PlayerNearest = getnear(tonumber(getgenv().SaveSettings["MinDistanceLock"]))
            if game.Players:FindFirstChild(tostring(_G.PlayerNearest)) and getgenv().SaveSettings["SelectedAimbotType"] == "Automatics" then
                _G.AimBotPosition = game.Players:FindFirstChild(tostring(_G.PlayerNearest)).Character.HumanoidRootPart.Position
                _G.AimBotRootPart = game.Players:FindFirstChild(tostring(_G.PlayerNearest)).Character.HumanoidRootPart
                tragetnow:SetText(_G.DeadX_icon .. " Traget : "..tostring(_G.PlayerNearest))
            elseif game.Players:FindFirstChild(tostring(_G.SelectedPlayer)) and getgenv().SaveSettings["SelectedAimbotType"]  == "Custom"  then
                _G.AimBotPosition = game.Players:FindFirstChild(tostring(_G.SelectedPlayer)).Character.HumanoidRootPart.Position
                _G.AimBotRootPart = game.Players:FindFirstChild(tostring(_G.SelectedPlayer)).Character.HumanoidRootPart
                tragetnow:SetText(_G.DeadX_icon .. " Traget : "..tostring(_G.SelectedPlayer))
            else
                _G.AimBotPosition = nil
                _G.AimBotRootPart = nil
                tragetnow:SetText(_G.DeadX_icon .. " Traget : Undefind")
            end
        end)
    end
end)





spawn(function()
    while wait() do
        pcall(function()
            for i,v in pairs(game.Players:GetChildren()) do
                if v.Name ~= game.Players.LocalPlayer.Name then
                    if v.Character.Head:FindFirstChild("ESP") then
                        v.Character.Head.ESP.Enabled = getgenv().SaveSettings["ESPPLAYER"]
                        v.Character.Head.ESP.XD.TextStrokeTransparency = 0
                        TragetColorRGB = tostring(math.floor(tonumber(getgenv().SaveSettings["tragetcolor"].R)*255) .. ", " .. math.floor(tonumber(getgenv().SaveSettings["tragetcolor"].G)*255) .. ", " .. math.floor(tonumber(getgenv().SaveSettings["tragetcolor"].B)*255))
                        PlayerColorRGB = tostring(math.floor(tonumber(getgenv().SaveSettings["PlayerColor"].R)*255) .. ", " .. math.floor(tonumber(getgenv().SaveSettings["PlayerColor"].G)*255) .. ", " .. math.floor(tonumber(getgenv().SaveSettings["PlayerColor"].B)*255))
                        if v.Name == _G.SelectedPlayer and getgenv().SaveSettings["SelectedAimbotType"] == "Custom" then
                            v.Character.Head.ESP.XD.Text = [[<font color="rgb(255, 255, 255)">]] .. v.Name ..[[</font> ]] .. "\n" .. '<font color="rgb('..TragetColorRGB..')">Distance : [' .. math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude) ..']</font>'
                        elseif v.Name == tostring(_G.PlayerNearest) and getgenv().SaveSettings["SelectedAimbotType"]  == "Automatics" then 
                            v.Character.Head.ESP.XD.Text = [[<font color="rgb(255, 255, 255)">]] .. v.Name ..[[</font> ]] .. "\n" .. '<font color="rgb('..TragetColorRGB..')">Distance : [' .. math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude) ..']</font>'
                        else
                            v.Character.Head.ESP.XD.Text = [[<font color="rgb(255, 255, 255)">]] .. v.Name ..[[</font> ]] .. "\n" .. '<font color="rgb('..PlayerColorRGB..')">Distance : [' .. math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude) ..']</font>'
                        end
                    else
                        local Billboard = Instance.new("BillboardGui")
                        local TexT = Instance.new("TextLabel")
                        Billboard.Name = "ESP"
                        Billboard.Enabled = false
                        Billboard.Parent = v.Character.Head
                        Billboard.AlwaysOnTop = true
                        Billboard.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                        Billboard.Active = true
                        Billboard.LightInfluence = 1.000
                        Billboard.Size = UDim2.new(0, 150, 0, 25)
                        Billboard.StudsOffset = Vector3.new(0, 2, 0)
                        TexT.Name = "XD"
                        TexT.Parent = Billboard
                        TexT.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        TexT.BackgroundTransparency = 1.000
                        TexT.Size = UDim2.new(0, 150, 0, 25)
                        TexT.Font = Enum.Font.FredokaOne
                        TexT.Text = [[<font color="rgb(255, 255, 255)">]] .. v.Name ..[[</font> ]] .. "\n" .. '<font color="rgb(56, 255, 255)">Distance : [' .. math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude) ..']</font>'
                        TexT.RichText = true
                        TexT.Font = Enum.Font.Code
                        TexT.TextScaled = true
                        TexT.TextSize = 14.000
                        TexT.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                        TexT.TextWrapped = true
                    end
                end
            end
        end)
    end
end)
function getmonsterincastle(Parent)
    if Parent == "Enemies" then
        for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - Vector3.new(-5500, 314, -2832)).Magnitude < 500 then
                return v
            end
        end
        return "Undefind"
    elseif Parent == "ReplicatedStorage" then
        for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if (v.HumanoidRootPart.Position - Vector3.new(-5500, 314, -2832)).Magnitude < 500 then
                return "FOUND"
            end
        end
        return "Undefind"
    end
    
end
spawn(function()
    while task.wait() do
        if getgenv().SaveSettings["AutoCastleRaid"] then
            pcall(function()
                if type(getmonsterincastle("Enemies")) == "userdata" then
                    Tween2(getmonsterincastle("Enemies").HumanoidRootPart,nil,CFrame.new(0,20,0))
                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                    Attack()
                elseif getmonsterincastle("ReplicatedStorage") == "FOUND" then
                    Tween2(Vector3.new(-5539, 386, -2874),"Vector")
                end
            end)
        end
    end
end)
function GetIslandRaid(Index)
    local island = {}
    for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
        if string.find(v.Name,tostring(Index)) then
            table.insert(island,v)
        end
    end
    for i,v in pairs(island) do
        if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 3500 then
            return v
        end
    end
end
spawn(function()
    while wait() do
        pcall(function()
            if _G.AutoStartDungeon then
                if Plr.Backpack:FindFirstChild("Special Microchip") or Char:FindFirstChild("Special Microchip") then
                    if ThirdWorld then
                        fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
                        game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible = true
                    end
                    if SecondWorld then
                        fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
                        game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible = true
                    end
                    if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible then
                        repeat
                            task.wait()
                        until not game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible
                        wait(15)
                    end
                end
            end
        end)   
    end
end)
spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["autokillaura"] then
                for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if v:FindFirstChild("Humanoid") then
                        v.Humanoid.Health = 0
                        if sethiddenproperty then
                            sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                        end
                    end
                end
            end
            if getgenv().SaveSettings["AutoAwake"] then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener","Awaken")
            end
            if _G.Autobuychip and not game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible then
                if not Plr.Backpack:FindFirstChild("Special Microchip") and not Char:FindFirstChild("Special Microchip") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(DungeonShipData[getgenv().SaveSettings["selecteddungeontype"]]))
                end
            end
            if getgenv().SaveSettings["autonextisland"] then
                if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5") or game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4") or game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3") or game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2") or game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
					if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
					    
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5") then
						game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5").CFrame = CFrame.new(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5").CFrame.x,60,game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5").CFrame.z)
						Tween2(GetIslandRaid(5))
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4") then
						game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4").CFrame = CFrame.new(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4").CFrame.x,60,game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4").CFrame.z)
						Tween2(GetIslandRaid(4))
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3") then
						game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3").CFrame = CFrame.new(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3").CFrame.x,60,game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3").CFrame.z)
						Tween2(GetIslandRaid(3))
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2") then
						game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2").CFrame = CFrame.new(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2").CFrame.x,60,game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2").CFrame.z)
						Tween2(GetIslandRaid(2))
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
						game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1").CFrame = CFrame.new(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1").CFrame.x,60,game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1").CFrame.z)
						Tween2(GetIslandRaid(1))
					end
				end
            end
        end)   
    end
end)



function checkquestkillplr()
    if game.Players:FindFirstChild(game.Players.LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text:split(" ")[2]) then
        return game.Players.LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text:split(" ")[2]
    end
    return false
end


local CakeMonsterState = 1
local CakeMonster = {
    "Cake Guard [Lv. 2225]",
    "Cookie Crafter [Lv. 2200]",
    "Head Baker [Lv. 2275]",
    "Baking Staff [Lv. 2250]"
}
spawn(function()
    while task.wait() do
        if getgenv().SaveSettings["mirrorfractal"] and ThirdWorld then
            pcall(function()
                if KilledCakemessage == "Door opening!" then
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]") then
                        if (game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 50 then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack("Default")
                        else
                            Tween2(game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart)
                        end
                    else
                        if game:GetService("Workspace").Map:FindFirstChild("MirrorDimension") then
                            if (game:GetService("Workspace").Map.MirrorDimension["Meshes/mirrordimension_Cube"].Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1000 then
                                TouchInterest = game:GetService("Workspace").Map.CakeLoaf.BigMirror.Main
                                firetouchinterest(game.Players.LocalPlayer.Character.Head,TouchInterest, 1)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.Head,TouchInterest, 0)
                            else
                                Tween2(game:GetService("ReplicatedStorage")["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart)
                            end
                        end
                    end
                else
                    if getgenv().SaveSettings["SelectedNextGenTeleport"] == "Tween" then
                        -- 1
                        repeat
                            wait()
                            Tween(Vector3.new(-2365, 38, -12117))
                        until getdistance(Vector3.new(-2365, 38, -12117)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Cookie Crafter [Lv. 2200]")
                        until findmob("Cookie Crafter [Lv. 2200]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                        -- 2
                        repeat
                            wait()
                            Tween(Vector3.new(-1635, 47, -12283))
                        until getdistance(Vector3.new(-1635, 47, -12283)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Cake Guard [Lv. 2225]")
                        until findmob("Cake Guard [Lv. 2225]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                        -- 3
                        repeat
                            wait()
                            Tween(Vector3.new(-1842, 130, -12933))
                        until getdistance(Vector3.new(-1842, 130, -12933)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Baking Staff [Lv. 2250]")
                        until findmob("Baking Staff [Lv. 2250]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                        -- 4
                        repeat
                            wait()
                            Tween(Vector3.new(-2201, 53, -12886))
                        until getdistance(Vector3.new(-2201, 53, -12886)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Head Baker [Lv. 2275]")
                        until findmob("Head Baker [Lv. 2275]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                    elseif getgenv().SaveSettings["SelectedNextGenTeleport"] == "Set Spawn" then
                        if setspawnat("Loaf") then
                            -- 1
                            repeat
                                wait()
                                Tween(Vector3.new(-2365, 38, -12117))
                            until getdistance(Vector3.new(-2365, 38, -12117)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Cookie Crafter [Lv. 2200]")
                            until findmob("Cookie Crafter [Lv. 2200]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                            -- 2
                            repeat
                                wait()
                                Tween(Vector3.new(-1635, 47, -12283))
                            until getdistance(Vector3.new(-1635, 47, -12283)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Cake Guard [Lv. 2225]")
                            until findmob("Cake Guard [Lv. 2225]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                            -- 3
                            repeat
                                wait()
                                Tween(Vector3.new(-1842, 130, -12933))
                            until getdistance(Vector3.new(-1842, 130, -12933)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Baking Staff [Lv. 2250]")
                            until findmob("Baking Staff [Lv. 2250]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                            -- 4
                            repeat
                                wait()
                                Tween(Vector3.new(-2201, 53, -12886))
                            until getdistance(Vector3.new(-2201, 53, -12886)) < 10 or not getgenv().SaveSettings["mirrorfractal"] or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Head Baker [Lv. 2275]")
                            until findmob("Head Baker [Lv. 2275]") == "Undefind" or KilledCakemessage == "Door opening!" or not getgenv().SaveSettings["mirrorfractal"]
                        end
                    end
                end
            end) 
        end
    end
end)
spawn(function()
    while task.wait() do
        if _G.AutoCakePrince and ThirdWorld then
            pcall(function()
                if KilledCakemessage == "Door opening!" then
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]") then
                        if (game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 50 then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                            Attack("Default")
                        else
                            Tween2(game.Workspace.Enemies["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart)
                        end
                    else
                        if game:GetService("Workspace").Map:FindFirstChild("MirrorDimension") then
                            if (game:GetService("Workspace").Map.MirrorDimension["Meshes/mirrordimension_Cube"].Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1000 then
                                TouchInterest = game:GetService("Workspace").Map.CakeLoaf.BigMirror.Main
                                firetouchinterest(game.Players.LocalPlayer.Character.Head,TouchInterest, 1)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.Head,TouchInterest, 0)
                            else
                                Tween2(game:GetService("ReplicatedStorage")["Cake Prince [Lv. 2300] [Raid Boss]"].HumanoidRootPart)
                            end
                        end
                    end
                else
                    if getgenv().SaveSettings["SelectedNextGenTeleport"] == "Tween" then
                        -- 1
                        repeat
                            wait()
                            Tween(Vector3.new(-2365, 38, -12117))
                        until getdistance(Vector3.new(-2365, 38, -12117)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Cookie Crafter [Lv. 2200]")
                        until findmob("Cookie Crafter [Lv. 2200]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                        -- 2
                        repeat
                            wait()
                            Tween(Vector3.new(-1635, 47, -12283))
                        until getdistance(Vector3.new(-1635, 47, -12283)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Cake Guard [Lv. 2225]")
                        until findmob("Cake Guard [Lv. 2225]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                        -- 3
                        repeat
                            wait()
                            Tween(Vector3.new(-1842, 130, -12933))
                        until getdistance(Vector3.new(-1842, 130, -12933)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Baking Staff [Lv. 2250]")
                        until findmob("Baking Staff [Lv. 2250]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                        -- 4
                        repeat
                            wait()
                            Tween(Vector3.new(-2201, 53, -12886))
                        until getdistance(Vector3.new(-2201, 53, -12886)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                        wait(1)
                        repeat
                            task.wait()
                            killmob("Head Baker [Lv. 2275]")
                        until findmob("Head Baker [Lv. 2275]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                    elseif getgenv().SaveSettings["SelectedNextGenTeleport"] == "Set Spawn" then
                        if setspawnat("Loaf") then
                            -- 1
                            repeat
                                wait()
                                Tween(Vector3.new(-2365, 38, -12117))
                            until getdistance(Vector3.new(-2365, 38, -12117)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Cookie Crafter [Lv. 2200]")
                            until findmob("Cookie Crafter [Lv. 2200]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                            -- 2
                            repeat
                                wait()
                                Tween(Vector3.new(-1635, 47, -12283))
                            until getdistance(Vector3.new(-1635, 47, -12283)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Cake Guard [Lv. 2225]")
                            until findmob("Cake Guard [Lv. 2225]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                            -- 3
                            repeat
                                wait()
                                Tween(Vector3.new(-1842, 130, -12933))
                            until getdistance(Vector3.new(-1842, 130, -12933)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Baking Staff [Lv. 2250]")
                            until findmob("Baking Staff [Lv. 2250]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                            -- 4
                            repeat
                                wait()
                                Tween(Vector3.new(-2201, 53, -12886))
                            until getdistance(Vector3.new(-2201, 53, -12886)) < 10 or not _G.AutoCakePrince or KilledCakemessage == "Door opening!"
                            wait(1)
                            repeat
                                task.wait()
                                killmob("Head Baker [Lv. 2275]")
                            until findmob("Head Baker [Lv. 2275]") == "Undefind" or KilledCakemessage == "Door opening!" or not _G.AutoCakePrince
                        end
                    end
                end
            end) 
        end
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            if _G.TeleportPlayer or _G.KillPlayer or (_G.AutoHuntQuest and Plr.Data.Level.Value >= 20) then
                if getgenv().SaveSettings["SelectedAimbotType"]  == "Custom" then
                    NameTraget = _G.SelectedPlayer
                else
                    NameTraget = tostring(_G.PlayerNearest)
                end
                if _G.AutoHuntQuest then
                    if Plr.PlayerGui.Main.Quest.Visible then
                        if checkquestkillplr() then
                            if getdistance(game.Players[checkquestkillplr()].Character.HumanoidRootPart.Position) < 100 then
                                EquipWeapon(getgenv().SaveSettings["SelectedKillType"])
                                _G.AimBotPosition = game.Players[checkquestkillplr()].Character.HumanoidRootPart.Position
                                _G.AimBotRootPart = game.Players[checkquestkillplr()].Character.HumanoidRootPart
                                if getgenv().SaveSettings["SelectedKillType"] == "Sword" or getgenv().SaveSettings["SelectedKillType"] == "Melee" then
                                    RootPart.CFrame = game.Players[checkquestkillplr()].Character.HumanoidRootPart.CFrame * CFrame.new(0,15,0)
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"Z") and getgenv().SaveSettings["Z"] then
                                        useskill("Z",0)
                                    end
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"X") and getgenv().SaveSettings["X"] then
                                        useskill("X",0)
                                    end
                                    if checkcoldown(game.Players.LocalPlayer.Data.DevilFruit.Value,"C") and getgenv().SaveSettings["C"] then
                                        useskill("C",0)
                                    end
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"V") and getgenv().SaveSettings["V"] then
                                        useskill("V",0)
                                    end
                                    Attack()
                                elseif getgenv().SaveSettings["SelectedKillType"] == "Blox Fruit" then
                                    RootPart.CFrame = game.Players[checkquestkillplr()].Character.HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"Z") and getgenv().SaveSettings["Z"] then
                                        useskill("Z",0)
                                    end
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"X") and getgenv().SaveSettings["X"] then
                                        useskill("X",0)
                                    end
                                    if checkcoldown(game.Players.LocalPlayer.Data.DevilFruit.Value,"C") and getgenv().SaveSettings["C"] then
                                        if game.Players.LocalPlayer.Data.DevilFruit.Value == "Dragon-Dragon" then
                                            useskill("C",4)
                                        else
                                            useskill("C",0)
                                        end
                                    end
                                    if checkcoldown(Plr.Data.DevilFruit.Value,"V") and getgenv().SaveSettings["V"] then
                                        useskill("V",0)
                                    end
                                elseif getgenv().SaveSettings["SelectedKillType"] == "Gun" then
                                    RootPart.CFrame = game.Players[checkquestkillplr()].Character.HumanoidRootPart.CFrame * CFrame.new(10,30,0)
                                    if checkcoldown(GetToolFromTip("Gun",true),"Z") and getgenv().SaveSettings["Z"] then
                                        useskill("Z",0)
                                    end
                                    if checkcoldown(GetToolFromTip("Gun",true),"X") and getgenv().SaveSettings["X"] then
                                        useskill("X",0)
                                    end
                                    if checkcoldown(GetToolFromTip("Gun",true),"C") and getgenv().SaveSettings["C"] then
                                        useskill("C",0)
                                    end
                                    if checkcoldown(GetToolFromTip("Gun",true),"V") and getgenv().SaveSettings["V"] then
                                        useskill("V",0)
                                    end
                                    game:GetService'VirtualUser':CaptureController()
                                    game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                                end
                            else
                                Tween2(game.Players[checkquestkillplr()].Character.HumanoidRootPart)
                            end
                        else
                            cancelquest()
                        end
                    else
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("PlayerHunter")
                    end
                elseif game.Players:FindFirstChild(NameTraget) then
                    if _G.KillPlayer then
                        if getdistance(game.Players[NameTraget].Character.HumanoidRootPart.Position) < 100 then
                            EquipWeapon(getgenv().SaveSettings["SelectedKillType"])
                            if getgenv().SaveSettings["SelectedKillType"] == "Sword" or getgenv().SaveSettings["SelectedKillType"] == "Melee" then
                                RootPart.CFrame = game.Players[NameTraget].Character.HumanoidRootPart.CFrame * CFrame.new(0,15,0)
                                if checkcoldown(Plr.Data.DevilFruit.Value,"Z") and getgenv().SaveSettings["Z"] then
                                    useskill("Z",0)
                                end
                                if checkcoldown(Plr.Data.DevilFruit.Value,"X") and getgenv().SaveSettings["X"] then
                                    useskill("X",0)
                                end
                                if checkcoldown(game.Players.LocalPlayer.Data.DevilFruit.Value,"C") and getgenv().SaveSettings["C"] then
                                    useskill("C",0)
                                end
                                if checkcoldown(Plr.Data.DevilFruit.Value,"V") and getgenv().SaveSettings["V"] then
                                    useskill("V",0)
                                end
                                Attack()
                            elseif getgenv().SaveSettings["SelectedKillType"] == "Blox Fruit" then
                                RootPart.CFrame = game.Players[NameTraget].Character.HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                                if checkcoldown(Plr.Data.DevilFruit.Value,"Z") and getgenv().SaveSettings["Z"] then
                                    useskill("Z",0)
                                end
                                if checkcoldown(Plr.Data.DevilFruit.Value,"X") and getgenv().SaveSettings["X"] then
                                    useskill("X",0)
                                end
                                if checkcoldown(game.Players.LocalPlayer.Data.DevilFruit.Value,"C") and getgenv().SaveSettings["C"] then
                                    if game.Players.LocalPlayer.Data.DevilFruit.Value == "Dragon-Dragon" then
                                        useskill("C",4)
                                    else
                                        useskill("C",0)
                                    end
                                end
                                if checkcoldown(Plr.Data.DevilFruit.Value,"V") and getgenv().SaveSettings["V"] then
                                    useskill("V",0)
                                end
                            elseif getgenv().SaveSettings["SelectedKillType"] == "Gun" then
                                RootPart.CFrame = game.Players[NameTraget].Character.HumanoidRootPart.CFrame * CFrame.new(10,30,0)
                                if checkcoldown(GetToolFromTip("Gun",true),"Z") and getgenv().SaveSettings["Z"] then
                                    useskill("Z",0)
                                end
                                if checkcoldown(GetToolFromTip("Gun",true),"X") and getgenv().SaveSettings["X"] then
                                    useskill("X",0)
                                end
                                if checkcoldown(GetToolFromTip("Gun",true),"C") and getgenv().SaveSettings["C"] then
                                    useskill("C",0)
                                end
                                if checkcoldown(GetToolFromTip("Gun",true),"V") and getgenv().SaveSettings["V"] then
                                    useskill("V",0)
                                end
                                game:GetService'VirtualUser':CaptureController()
                                game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                            end
                        else
                            Tween2(game.Players[NameTraget].Character.HumanoidRootPart)
                        end
                    else
                        Tween2(game.Players[_G.SelectedPlayer].Character.HumanoidRootPart)
                    end
                end
            end
        end)
    end
end)











spawn(function()
    while task.wait() do
        pcall(function()
            if _G.autofarmsoulreaper and ThirdWorld and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
                if findmob("Soul Reaper [Lv. 2100] [Raid Boss]") ~= "Undefind" then
                    killboss("Soul Reaper [Lv. 2100] [Raid Boss]")
                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                    Attack("Default")
                else
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence"))
                    elseif game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") then
                        Tween2(Vector3.new(-8933, 147, 6064),"Vector")
                    else
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                        if game.Workspace.Enemies:FindFirstChild(monstergetbone[Killmonsterforbonestate]) then
                            killmob(monstergetbone[Killmonsterforbonestate])
                        else
                            Killmonsterforbonestate = Killmonsterforbonestate + 1
                            if Killmonsterforbonestate > 4 then
                                Killmonsterforbonestate = 1
                            end
                            Distance = (Vector3.new(-9482, 142, 5877) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if Distance < 250 then
                                Speed = 1000
                            elseif Distance < 500 then
                                Speed = 400
                            elseif Distance < 1000 then
                                Speed = 350
                            elseif Distance >= 1000 then
                                Speed = 200
                            end
                            game:GetService("TweenService"):Create(
                                game.Players.LocalPlayer.Character.HumanoidRootPart,
                                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                {CFrame = CFrame.new(-9482, 142, 5877)}
                            ):Play()
                        end
                    end
                end
            end 
        end)
    end
end)









function getnonecolor()
    for i,v in pairs(game:GetService("Workspace").Map["Boat Castle"].Summoner.Circle:GetChildren()) do
        if v:IsA("Part") then
            if tostring(v.BrickColor) == "Really red" then
                if tostring(v.Part.BrickColor) == "Lime green" then 
                        
                else
                    local args = {
                        [1] = "activateColor",
                        [2] = "Pure Red"
                    }
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    return v
                end
            end
            if tostring(v.BrickColor) == "Oyster" then
                if tostring(v.Part.BrickColor) == "Lime green" then else
                    local args = {
                        [1] = "activateColor",
                        [2] = "Snow White"
                    }
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    return v
                end
            end
            if tostring(v.BrickColor) == "Hot pink" then
                if tostring(v.Part.BrickColor) == "Lime green" then else
                   local args = {
                        [1] = "activateColor",
                        [2] = "Winter Sky" 
                    }
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    return v
                end
            end
        end
    end 
    return  "already touch"
end


spawn(function()
    while task.wait() do
        pcall(function()
            if _G.autoripindra or getgenv().SaveSettings["autoripindrahop"] or getgenv().SaveSettings["AutoValkyrieHelmet"] then
                if ThirdWorld and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
                    if findmob("rip_indra True Form [Lv. 5000] [Raid Boss]") ~= "Undefind" then
                        ripindra:SetText("👨 Rip Indra : ".."Kill rip_indra.")
                        killboss("rip_indra True Form [Lv. 5000] [Raid Boss]")
                        Attack()
                    else
                        GetValueoffunctioncheckcolor = getnonecolor()
                        if GetValueoffunctioncheckcolor == "already touch" then
                            if game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
                                ripindra:SetText("👨 Rip Indra : ".."Placing.")
                                Tween2(game:GetService("Workspace").Map["Boat Castle"].Summoner.Detection)
                            elseif game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") then
                                ripindra:SetText("👨 Rip Indra : ".."Going to summor.")
                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice"))
                            else
                                for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Notifications:GetChildren()) do
                                    if string.find("You defeated an elite enemy!",v.Text) then
                                        cancelquest()
                                    end
                                end
                                if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible then
                                    if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Urban") then
                                        EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Urban)")
                                        ripindra:SetText("👨 Rip Indra : ".."Killing Urban.")
                                        if game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]") then
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(5746, 668, -287)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(-12470, 389, -7586)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            Tween2(game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart)
                                        elseif game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") then
                                            Tween2(game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart,nil,CFrame.new(0,30,0))
                                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                            Attack()
                                        end
                                        
                                    elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Deandre") then
                                        EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Deandre)")
                                        ripindra:SetText("👨 Rip Indra : ".."Killing Deandre.")
                                        MonsterEliteNamed = "Deandre [Lv. 1750]"
                                        if game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed) then
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(5746, 668, -287)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(-12470, 389, -7586)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            Tween2(game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart)
                                        elseif game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed) then
                                            Tween2(game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed).HumanoidRootPart,nil,CFrame.new(0,30,0))
                                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                            Attack()
                                        end
                                    elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Diablo") then
                                        EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Spawned. (Diablo)")
                                        ripindra:SetText("👨 Rip Indra : ".."Killing Diablo.")
                                        MonsterEliteNamed = "Diablo [Lv. 1750]"
                                        if game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed) then
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(4968, 52, -1095)).Magnitude < 5000 and (Vector3.new(4968, 52, -1095) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 5000 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(5746, 668, -287)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            if (game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart.Position - Vector3.new(-11657, 639, -8916)).Magnitude < 7500 and (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                                local args = {
                                                    [1] = "requestEntrance",
                                                    [2] = Vector3.new(-12470, 389, -7586)
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                            end
                                            Tween2(game:GetService("ReplicatedStorage"):FindFirstChild(MonsterEliteNamed).HumanoidRootPart)
                                        elseif game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed) then
                                            Tween2(game.Workspace.Enemies:FindFirstChild(MonsterEliteNamed).HumanoidRootPart,nil,CFrame.new(0,30,0))
                                            EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                            Attack()
                                        end
                                    end
                                else
                                    local message = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                                    if message == "I don't have anything for you right now. Come back later." then
                                        if getgenv().SaveSettings["autoripindrahop"] or (getgenv().SaveSettings["AutoValkyrieHelmet"] and getgenv().SaveSettings["settingautoweaponhop"]) then
                                            if (getgenv().SaveSettings["autoripindrahop"] or (getgenv().SaveSettings["AutoValkyrieHelmet"] and getgenv().SaveSettings["settingautoweaponhop"])) and (game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice")) then
                                            else
                                                if os.time() >= _G.RunScriptTime + 10 then
                                                    HopServer()
                                                else
                                                    repeat
                                                        wait(1)
                                                        Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                                    until os.time() >= _G.RunScriptTime + 10
                                                end
                                            end
                                        end
                                        ripindra:SetText("👨 Rip Indra : ".."Elite Not Spawn.")
                                        EliteStatus:SetText(_G.DeadX_icon .. " Elite Hunter : Not Spawn.")
                                    end
                                end
                            end
                        elseif tostring(type(GetValueoffunctioncheckcolor)) == "userdata" then
                            ripindra:SetText("👨 Rip Indra : ".."Place Haki Color.")
                            Tween2(GetValueoffunctioncheckcolor)
                        end
                    end
                end
            end
        end)
    end
end)






function checkquestsoul(Type)
    local args = {
        [1] = "GuitarPuzzleProgress",
        [2] = "Check"
    }
    x = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    for i,v in pairs(x) do
        if i == "Swamp" and not v and Type == "Swamp" then
            return "kill Living mob" 
        elseif i == "GraveStone" and not v and Type == "GraveStone" then
            return "Sign" 
        elseif i == "Ghost" and not v and Type == "Ghost" then
            return "TalkGhost" 
        elseif i == "Trophies" and not v and Type == "Trophies" then
            return "champion"
        elseif i == "Pipes" and not v and Type == "Pipes" then
            return "PipesColor"
        elseif i == "CraftedOnce" and not v and Type == "CraftedOnce" then
            return "CanBuy"
        elseif type(i) == "table" and not v and Type == "table" then
            for a,b in pairs(v) do
                warn(a,b)
            end
        end
    end
end


function getbone()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetDescendants()) do
        if v.Name == "ItemName" and v.Text == "Bones" then
            return v.Parent.ItemLine1.Text:split("x")[2]
        end
    end
    return 0
end
function getTrophies()
    local Data = {
        [1] = "-",
        [3] = "-",
        [4] = "-",
        [7] = "-",
        [10] = "-",
    }
    if tostring(game:GetService("Workspace").Map["Haunted Castle"].Trophies.Quest.Trophy1.Handle.CFrame) == "-9501.72949, 187.807449, 6291.32031, -1, 0, 0, 0, 1, 0, 0, 0, -1" then
        Data[1] = -90
    else
        Data[1] = 180
    end
    if tostring(game:GetService("Workspace").Map["Haunted Castle"].Trophies.Quest.Trophy2.Handle.CFrame) == "-9433.62207, 187.807449, 6291.59814, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08" then
        Data[3] = 180
    else
        Data[3] = -90
    end
    if tostring(game:GetService("Workspace").Map["Haunted Castle"].Trophies.Quest.Trophy3.Handle.CFrame) == "-9395.32422, 187.807449, 6291.53174, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08" then
        Data[4] = 180
    else
        Data[4] = -90
    end
    if tostring(game:GetService("Workspace").Map["Haunted Castle"].Trophies.Quest.Trophy4.Handle.CFrame) == "-9470.43457, 187.807449, 6372.94141, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08" then
        Data[7] = 180
    else
        Data[7] = -90
    end
    if tostring(game:GetService("Workspace").Map["Haunted Castle"].Trophies.Quest.Trophy5.Handle.CFrame) == "-9360.83105, 187.807449, 6372.83887, 1, 0, 0, 0, 1, 0, 0, 0, 1" then
        Data[10] = -90
    else
        Data[10] = 180
    end
    for i,v in pairs(game:GetService("Workspace").Map["Haunted Castle"].Tablet:GetChildren()) do
        if v.Name == "Segment2" then
            repeat
                wait()
                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment2.ClickDetector)
            until game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment2.Line.Position.Y < -500
        elseif v.Name == "Segment5" then
            repeat
                wait()
                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment5.ClickDetector)
            until game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment5.Line.Position.Y < -500
        elseif v.Name == "Segment6" then
            repeat
                wait()
                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment6.ClickDetector)
            until game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment6.Line.Position.Y < -500
        elseif v.Name == "Segment8" then
            repeat
                wait()
                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment8.ClickDetector)
            until game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment8.Line.Position.Y < -500
        elseif v.Name == "Segment9" then
            repeat
                wait()
                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment9.ClickDetector)
            until game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment9.Line.Position.Y < -500
        end
    end
    for i,v in pairs(Data) do
        repeat
            wait()
            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Tablet["Segment"..i].ClickDetector)
        until game:GetService("Workspace").Map["Haunted Castle"].Tablet["Segment"..i].Line.Orientation == Vector3.new(0,0,v)
    end
end

spawn(function()
    while task.wait() do
        if getgenv().SaveSettings["AutoMusketeerHat"] or getgenv().SaveSettings["AutoObservationhakiV2"] then
            if ThirdWorld and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
                pcall(function()
                    if tostring(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress","Citizen")) == "3" then
                        if getgenv().SaveSettings["AutoObservationhakiV2"] then
                            if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) < 5000 then
                                if (Vector3.new(-12545, 337, -7517) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 5000 then
                                    if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("TextLabel") then
                                        HaveObservation = true
                                        if game.Workspace.Enemies:FindFirstChild(MonsterNameObservation) then
                                            Tween2(game.Workspace.Enemies:FindFirstChild(MonsterNameObservation).HumanoidRootPart,nil,CFrame.new(0,0,-1))
                                        else
                                            Tween2(MonsterPositionObservation,"Vector") 
                                        end
                                    else
                                        if game.Workspace.Enemies:FindFirstChild(MonsterNameObservation) then
                                            Tween2(game.Workspace.Enemies:FindFirstChild(MonsterNameObservation).HumanoidRootPart,nil,CFrame.new(0,50,-1))
                                        else
                                            Tween2(MonsterPositionObservation,"Vector") 
                                        end
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
                                		wait()
                                		game:service('VirtualInputManager'):SendKeyEvent(false, "E", false, game)
                                    end
                                else
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(-12467, 400, -7588)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                            else
                                if game.Players.LocalPlayer.Backpack:FindFirstChild("Fruit Bowl") or game.Players.LocalPlayer.Character:FindFirstChild("Fruit Bowl") then
                                    -- if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(-10924, 624, -10269)).Magnitude < 10 then
                                    --     local args = {
                                    --         [1] = "KenTalk2",
                                    --         [2] = "Start"
                                    --     }
                                    --     game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

                                    -- else
                                    --     Tween2(Vector3.new(-10924, 624, -10269),"Vector")
                                    -- end
                                    local args = {
                                        [1] = "KenTalk2",
                                        [2] = "Start"
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                    local args = {
                                        [1] = "KenTalk2",
                                        [2] = "Buy"
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                else
                                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Apple") or game.Players.LocalPlayer.Character:FindFirstChild("Apple") then
                                        if game.Players.LocalPlayer.Backpack:FindFirstChild("Banana") or game.Players.LocalPlayer.Character:FindFirstChild("Banana") then
                                            if game.Players.LocalPlayer.Backpack:FindFirstChild("Pineapple") or game.Players.LocalPlayer.Character:FindFirstChild("Pineapple") then
                                                
                                            else
                                                if game:GetService("Workspace").PineappleSpawner:FindFirstChild("Pineapple") then
                                                    Tween2(game:GetService("Workspace").PineappleSpawner.Pineapple.Handle)
                                                else
                                                    Library:Notify("Wating 'Pineapple' spawn . . .",3)
                                                    wait(3)
                                                end
                                            end
                                        else
                                            if game:GetService("Workspace").BananaSpawner:FindFirstChild("Banana") then
                                                Tween2(game:GetService("Workspace").BananaSpawner.Banana.Handle)
                                            else
                                                Library:Notify("Wating 'Pineapple' spawn . . .",3)
                                                wait(3)
                                            end
                                        end
                                    else
                                        if game:GetService("Workspace").AppleSpawner:FindFirstChild("Apple") then
                                            Tween2(game:GetService("Workspace").AppleSpawner.Apple.Handle)
                                        else
                                            Library:Notify("Wating 'Pineapple' spawn . . .",3)
                                            wait(3)
                                        end
                                    end
                                end
                            end
                        end
                    else
                        if tostring(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress","Citizen")) == "2" then 
                            Tween2(Vector3.new(-12511, 337, -9876),"Vector")
                        else
                            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible then
                                if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Forest Pirate") then
                                    if setspawnat("BigMansion") then
                                        killmob("Forest Pirate [Lv. 1825]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                        Attack()
                                    end
                                elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Captain Elephant") then
                                    if setspawnat("BigMansion") then
                                        killboss("Captain Elephant [Lv. 1875] [Boss]")
                                        EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                        Attack()
                                    end
                                else
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                                end
                            else
                                if (Vector3.new(-11657, 639, -8916) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 7500 then
                                    local args = {
                                        [1] = "requestEntrance",
                                        [2] = Vector3.new(-12467, 332, -7587)
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                end
                                if (Vector3.new(-12444, 332, -7674) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 10 then
                                    if tostring(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress","Citizen")) == "0" then
                                        local args = {
                                            [1] = "StartQuest",
                                            [2] = "CitizenQuest",
                                            [3] = 1
                                        }
                                        
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                    elseif tostring(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress","Citizen")) == "1" then
                                        local args = {
                                            [1] = "StartQuest",
                                            [2] = "CitizenQuest",
                                            [3] = 2
                                        }
                                        
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                                    end
                                else
                                    Tween2(Vector3.new(-12444, 332, -7674),"Vector")
                                end
                            end
                        end
                    end
                end)
            end
        end
    end
end)

function getcountlivinfzombie()
    local F = {}
    -- for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
    --     if v.Name == "Living Zombie [Lv. 2000]" then
    --         if isnetworkowner(v.HumanoidRootPart) then
    --             v.HumanoidRootPart.CFrame = CFrame.new(-10181, 139, 5997)
    --         else
    --             repeat
    --                 task.wait()
    --                 Tween2(v.HumanoidRootPart,nil,CFrame.new(0,0,1))
    --             until not getgenv().SaveSettings["AutoSoulGuitar"] or isnetworkowner(v.HumanoidRootPart)
    --         end
    --     end
    -- end
    for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
        if v.Name == "Living Zombie [Lv. 2000]" then
            table.insert(F,v.Name)
        end
    end
    if #F == 6 then
        return true
    else
        return false
    end
end


spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["AutoSoulGuitar"] or getgenv().SaveSettings["Autofindfullmoon"] then
                if CheckNowWorld(3,true) then
                    if setspawnat("HauntedCastle") then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("soulGuitarBuy")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("gravestoneEvent",2)
                        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("gravestoneEvent",2,true) == "[Error. Try again.]" then
                            Tween2(Vector3.new(-8654, 141, 6169),"Vector")
                        end
                        if game:GetService("Workspace").Map["Haunted Castle"].Placard1.Right:FindFirstChild("ClickDetector") then
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard1.Right.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard2.Right.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard3.Left.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard4.Right.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard5.Left.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard6.Left.ClickDetector)
                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard7.Left.ClickDetector)
                        end
                        if checkquestsoul("Swamp") == "kill Living mob" then
                            if getcountlivinfzombie() then
                                repeat
                                    task.wait()
                                    if sethiddenproperty then
                                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                                    end
                                    for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                                        if v.Name == "Living Zombie [Lv. 2000]" then
                                            v.HumanoidRootPart.CFrame = CFrame.new(-10181, 139, 5997)
                                        end
                                    end
                                    Tween2(Vector3.new(-10180, 164, 6002),"Vector")
                                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                                    Attack()
                                until checkquestsoul("Swamp") ~= "kill Living mob" or not getgenv().SaveSettings["AutoSoulGuitar"]
                            else
                                Tween2(Vector3.new(-10180, 164, 6002),"Vector")
                            end
                        elseif checkquestsoul("Ghost") == "TalkGhost" then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GuitarPuzzleProgress","Ghost")
                        elseif checkquestsoul("Trophies") == "champion" then
                            getTrophies()
                        elseif checkquestsoul("Pipes") == "PipesColor" then
                            repeat -- black
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part1.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part1.Color) == "0.0666667, 0.0666667, 0.0666667" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part1:FindFirstChild("ClickDetector")
                            
                            repeat -- black
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part2.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part2.Color) == "0.0666667, 0.0666667, 0.0666667" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part2:FindFirstChild("ClickDetector")
                            
                            repeat -- red
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part3.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part3.Color) == "0.639216, 0.294118, 0.294118" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part3:FindFirstChild("ClickDetector")
                            
                            repeat -- blue
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.Color) == "0.2, 0.345098, 0.509804" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4:FindFirstChild("ClickDetector")
                            
                            repeat -- black
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part5.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part5.Color) == "0.0666667, 0.0666667, 0.0666667" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part5:FindFirstChild("ClickDetector")
                            
                            repeat -- green
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6.Color) == "0.172549, 0.396078, 0.113725" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6:FindFirstChild("ClickDetector")
                            
                            repeat -- black
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part7.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part7.Color) == "0.0666667, 0.0666667, 0.0666667" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part7:FindFirstChild("ClickDetector")
                            
                            repeat -- red
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part8.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part8.Color) == "0.639216, 0.294118, 0.294118" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part8:FindFirstChild("ClickDetector")
                            
                            repeat -- black
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part9.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part9.Color) == "0.0666667, 0.0666667, 0.0666667" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part9:FindFirstChild("ClickDetector")
                            
                            repeat -- blue
                                wait()
                                fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.ClickDetector)
                            until tostring(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.Color) == "0.2, 0.345098, 0.509804" or not game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10:FindFirstChild("ClickDetector")
                        elseif getgenv().SaveSettings["Autofindfullmoon"] then
                            if game:GetService("Lighting").Sky.MoonTextureId == "http://www.roblox.com/asset/?id=9709149431" then
                                if game.Lighting.ClockTime >= 17.6 or game.Lighting.ClockTime <= 6.3 then
                                    rconsoleprint("night")
                                end
                                if getgenv().SaveSettings["AutoSoulGuitar"] then
                                    Tween2(Vector3.new(-8654, 141, 6169),"Vector")
                                end
                            else
                                if getgenv().SaveSettings["settingautoweaponhop"] then
                                    if os.time() >= _G.RunScriptTime + 10 then
                                        HopServer()
                                    else
                                        repeat
                                            wait(1)
                                            Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                        until os.time() >= _G.RunScriptTime + 10
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
    end
end)

function getiteminven(ItemName)
    
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Inventory.Container.Stored.ScrollingFrame.Frame:GetChildren()) do
        if v.Name ~= "Template" and v.Name ~= "UIGridLayout" then
            if v.Name == ItemName then
                return true 
            end
        end
    end
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Inventory.Container.Current.ScrollingFrame.Frame:GetChildren()) do
        if v.Name ~= "Template" and v.Name ~= "UIGridLayout" then
            if v.Name == ItemName then
                return true 
            end
        end
    end
    return false
end


coroutine.wrap(function()
    while wait() do
        pcall(function()
            if getiteminven("Wando") then
                WandoCheck:SetText("Wando  : ".._G.Right_Icon)
            end
            if getiteminven("Shisui") then
                ShisuiCheck:SetText("Shisui : ".._G.Right_Icon)
            end
            if getiteminven("Saddi") then
                SaddiCheck:SetText("Saddi  : ".._G.Right_Icon)
            end
            if getgenv().SaveSettings["AutoBuyLegendarysword"] then
                if CheckNowWorld(2) then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LegendarySwordDealer","2")
                    wait(1)
                    if getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    CheckNowWorld(2,true)
                end
            end
        end) 
    end
end)()




spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["Autofarmchest"] then
                local Chest = findchest()
                if Chest ~= "Undefind" then
                    repeat
                        wait()
                        if getdistance(Chest.Position) < 100 then
                            game:GetService("TweenService"):Create(
                            game.Players.LocalPlayer.Character.HumanoidRootPart,
                            TweenInfo.new(getdistance(Chest.Position)/50, Enum.EasingStyle.Linear),
                            {CFrame = Chest.CFrame}
                            ):Play()
                        else
                            Tween2(Chest.Position,"Vector")
                        end
                    until Chest.Parent == nil or not getgenv().SaveSettings["Autofarmchest"] or Hum.Health <= 0 or Chest == "Undefind" or Plr.PlayerGui.Main.Timer.Visible
                else
                    if getgenv().SaveSettings["settingautoweaponhop"] then
                        if os.time() >= _G.RunScriptTime + 10 then
                            HopServer()
                        else
                            repeat
                                wait(1)
                                Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                            until os.time() >= _G.RunScriptTime + 10
                        end
                    end
                end
            elseif getgenv().SaveSettings["AutoSeaBeast"] then
                 if ThirdWorld or SecondWorld then
                    pcall(function()
                        if game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast1") then
                            Tween2(game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast1").RootPart,nil,CFrame.new(0,60,0)) EquipWeapon(getgenv().SaveSettings["WeaponSelected"]) Attack()
                        elseif game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast2") then 
                            Tween2(game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast2").RootPart,nil,CFrame.new(0,60,0)) EquipWeapon(getgenv().SaveSettings["WeaponSelected"]) Attack()
                        elseif game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast3") then 
                            Tween2(game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast3").RootPart,nil,CFrame.new(0,60,0)) EquipWeapon(getgenv().SaveSettings["WeaponSelected"]) Attack()
                        elseif game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast4") then
                            Tween2(game:GetService("Workspace").SeaBeasts:FindFirstChild("SeaBeast4").RootPart,nil,CFrame.new(0,60,0)) EquipWeapon(getgenv().SaveSettings["WeaponSelected"]) Attack()
                        else
                            if getgenv().SaveSettings["settingautoweaponhop"] then
                                if os.time() >= _G.RunScriptTime + 10 then
                                    HopServer()
                                else
                                    repeat
                                        wait(1)
                                        Library:Notify("Hop Server In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                    until os.time() >= _G.RunScriptTime + 10
                                end
                            end
                        end
                    end)
                end
            end
        end)
    end
end)


function checkkenenabled()
    if not game:GetService("Lighting"):FindFirstChild("ColorCorrection") then
        return false
    end
    if tostring(game:GetService("Lighting").ColorCorrection.TintColor) == "0.490196, 1, 1" then
        return true 
    end
    game:service('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
	wait()
	game:service('VirtualInputManager'):SendKeyEvent(false, "E", false, game)
    wait(1)
    if tostring(game:GetService("Lighting").ColorCorrection.TintColor) == "0.490196, 1, 1" then
        return true 
    end
    return false
end
if FirstWorld then
    SpawnPointObservationFarm = "Fountain"
    ResetwhenFarOfIslandObservation = Vector3.new(5192, 39, 4143)
    MonsterPositionObservation = Vector3.new(5415, 84, 4961)
    MonsterNameObservation = "Galley Captain [Lv. 650]"
elseif SecondWorld then
    MonsterPositionObservation = Vector3.new(1241, 181, 33306)
    MonsterNameObservation = "Ship Officer [Lv. 1325]"
elseif ThirdWorld then
    MonsterPositionObservation = Vector3.new(-13484, 403, -7772)
    MonsterNameObservation = "Forest Pirate [Lv. 1825]"
end
if ThirdWorld then
    spawn(function()
        while task.wait() do
            if getgenv().SaveSettings["AutoFarmObservationHop"] and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
               pcall(function()
                    if (Vector3.new(-12545, 337, -7517) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 5000 then
                        if checkkenenabled() then
                            if game.Workspace.Enemies:FindFirstChild(MonsterNameObservation) then
                                Tween2(game.Workspace.Enemies:FindFirstChild(MonsterNameObservation).HumanoidRootPart,nil,CFrame.new(0,0,-1))
                            else
                                Tween2(MonsterPositionObservation,"Vector") 
                            end
                        else
                            if getgenv().SaveSettings["settingautoweaponhop"] then
                                if os.time() >= _G.RunScriptTime + 10 then
                                    game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
                                else
                                    repeat
                                        wait(1)
                                        Library:Notify("Rejoin In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                    until os.time() >= _G.RunScriptTime + 10
                                end
                            end
                        end
                    else
                        local args = {
                            [1] = "requestEntrance",
                            [2] = Vector3.new(-12467, 400, -7588)
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end 
                    if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000 then
                        Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
                        Library:Notify("Max Observation Level : 5000")
                        toggleobsercation:SetValue(false)
                        wait()
                    end
               end)
            end
        end
    end)
end
if SecondWorld then
    spawn(function()
        while task.wait() do
            if getgenv().SaveSettings["AutoFarmObservationHop"] then
               pcall(function()
                    if (Vector3.new(924, 125, 32927) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 5000 then
                        if checkkenenabled() then
                            if game.Workspace.Enemies:FindFirstChild(MonsterNameObservation) then
                                Tween2(game.Workspace.Enemies:FindFirstChild(MonsterNameObservation).HumanoidRootPart,nil,CFrame.new(0,0,-1))
                            else
                                Tween2(MonsterPositionObservation,"Vector") 
                            end
                        else
                		    if getgenv().SaveSettings["settingautoweaponhop"] then
                                if os.time() >= _G.RunScriptTime + 10 then
                                    game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
                                else
                                    repeat
                                        wait(1)
                                        Library:Notify("Rejoin In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                    until os.time() >= _G.RunScriptTime + 10 or tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000
                                end
                            end
                        end
                    else
                        local args = {
                            [1] = "requestEntrance",
                            [2] = Vector3.new(923.2125244140625, 126.97600555419922, 32852.83203125)
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end   
                    if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000 then
                        Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
                        Library:Notify("Max Observation Level : 5000")
                        toggleobsercation:SetValue(false)
                        wait()
                    end
               end)
            end
        end
    end)
end

if FirstWorld then
    spawn(function()
        while task.wait() do
            if getgenv().SaveSettings["AutoFarmObservationHop"] then
               pcall(function()
                    if setspawnat("Fountain") then
                        if (ResetwhenFarOfIslandObservation - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 4000 then
                            game.Players.LocalPlayer.Character.Humanoid.Health = 0
                        else
                            if checkkenenabled() then
                                if game.Workspace.Enemies:FindFirstChild(MonsterNameObservation) then
                                    Tween2(game.Workspace.Enemies:FindFirstChild(MonsterNameObservation).HumanoidRootPart,nil,CFrame.new(0,0,-1))
                                else
                                    Tween2(MonsterPositionObservation,"Vector") 
                                end
                            else
                                if getgenv().SaveSettings["settingautoweaponhop"] then
                                    if os.time() >= _G.RunScriptTime + 10 then
                                        game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
                                    else
                                        repeat
                                            wait(1)
                                            Library:Notify("Rejoin In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                                        until os.time() >= _G.RunScriptTime + 10
                                    end
                                end
                            end
                        end
                    end
                    if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000 then
                        Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,"Vector")
                        Library:Notify("Max Observation Level : 5000")
                        toggleobsercation:SetValue(false)
                        wait()
                    end
               end)
            end
        end
    end)
end


local weapon = "Melee"
local skill = 1
local meleeskill = {
    "Z","X","C"
}
local devilfruitskill = {
    "Z","X","C","V"
}
local swordskill = {
    "Z","X"
}
function takedamage()
    if NearPlayerIsReadyForSkill then
        if weapon == "Melee" then
            EquipWeapon("Melee")
            wait()
            Keyboard(meleeskill[skill],0)
            skill = skill + 1
            if skill >= #meleeskill then
                skill = 1
                weapon = "Sword"
            end
        elseif weapon == "Sword" then
            EquipWeapon("Sword")
            wait()
            Keyboard(swordskill[skill],0)
            skill = skill + 1
            if skill >= #swordskill then
                skill = 1
                weapon = "DevilFruit"
            end
        elseif weapon == "DevilFruit" then
            EquipWeapon("Blox Fruit")
            wait()
            Keyboard(devilfruitskill[skill],0)
            skill = skill + 1
            if skill >= #devilfruitskill then
                skill = 1
                weapon = "Melee"
            end
        end
    end
end
function checksafezone(pos)
    if not Plr.PlayerGui.Main.InCombat.Visible then
        for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].SafeZones:GetChildren()) do
            if v.Name == "Safezone" and (v.Position - pos) < 100 then
                return true
            end
        end
        if Plr.PlayerGui.Main.SafeZone.Visible then
            return true
        end
    end
    return false
end
spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["autohuntbounty"] then
                if HN then
                    takedamage()
                    wait(1.5)
                    HN = false
                else
                    wait(2)
                    HN = true
                end
            end
        end)
    end
end)
spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["autohuntbounty"] then
                for i,v in pairs(game:GetService("Players"):GetChildren()) do
                    if i ~= 1 then
                        repeat
                            task.wait()
                            Huntingname:SetText("Name : "..v.Name)
                            if getgenv().SaveSettings["safemode"] and Hum.Health * 100 / Hum.MaxHealth <= tonumber(getgenv().SaveSettings["healthslider"]) then
                                repeat
                                    task.wait()
                                    NearPlayerIsReadyForSkill = false
                                    if (Vector3.new(0,0,v.Character.HumanoidRootPart.Position.Z) - Vector3.new(0,0,Char.HumanoidRootPart.Position.Z)).Magnitude < 30 and (Vector3.new(0,0,v.Character.HumanoidRootPart.Position.X) - Vector3.new(0,0,Char.HumanoidRootPart.Position.X)).Magnitude < 30 then
                                        Char.HumanoidRootPart.CFrame = CFrame.new(Char.HumanoidRootPart.Position.X,10000,Char.HumanoidRootPart.Position.Z)
                                    else
                                        Char.HumanoidRootPart.CFrame = CFrame.new(Char.HumanoidRootPart.Position.X,10000,Char.HumanoidRootPart.Position.Z)
                                        Tween(Vector3.new(v.Character.HumanoidRootPart.Position.X,10000,v.Character.HumanoidRootPart.Position.Z),"Vector")
                                    end
                                until Hum.Health == Hum.MaxHealth or not getgenv().SaveSettings["autohuntbounty"]
                            else
                                if (Vector3.new(0,0,v.Character.HumanoidRootPart.Position.Z) - Vector3.new(0,0,Char.HumanoidRootPart.Position.Z)).Magnitude < 30 and (Vector3.new(0,0,v.Character.HumanoidRootPart.Position.X) - Vector3.new(0,0,Char.HumanoidRootPart.Position.X)).Magnitude < 30 then
                                    NearPlayerIsReadyForSkill = true
                                    if HN then
                                        Attack()
                                        Char.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
                                    else
                                        Char.HumanoidRootPart.CFrame = CFrame.new(Char.HumanoidRootPart.Position.X,10000,Char.HumanoidRootPart.Position.Z)
                                    end
                                else
                                    NearPlayerIsReadyForSkill = false
                                    Char.HumanoidRootPart.CFrame = CFrame.new(Char.HumanoidRootPart.Position.X,10000,Char.HumanoidRootPart.Position.Z)
                                    Tween(Vector3.new(v.Character.HumanoidRootPart.Position.X,10000,v.Character.HumanoidRootPart.Position.Z),"Vector")
                                end
                                if not getgenv().SaveSettings["autohuntbounty"] then
                                    disibleddd = true
                                elseif not game.Players:FindFirstChild(v.Name) then
                                    leaveeeee = true
                                elseif v.Character.Humanoid.Health <= 0 then
                                    dieddddd = true
                                elseif getdistance(v.HumanoidRootPart.Position) > 10000 then
                                    dungeonnnn = true
                                end
                            end
                        until _G.NextPlayer == true or checksafezone(v.HumanoidRootPart.Position) or disibleddd or leaveeeee or dieddddd or dungeonnnn
                        if dieddddd then
                            repeat
                                task.wait()
                                RootPart.CFrame = RootPart.CFrame * CFrame.new(0,10,0)
                            until not Plr.PlayerGui.Main.InCombat.Visible or not getgenv().SaveSettings["autohuntbounty"]
                            if getgenv().SaveSettings["autohuntbounty"] then
                                Hum.Health = 0 
                            end
                        end
                        dieddddd = false
                        disibleddd = false
                        leaveeeee = false
                        dungeonnnn = false
                        _G.NextPlayer = false
                        wait(1)
                    end
                end
            end
        end)
    end
end)







local rengokuState = 1
local rengokuMonster = {
    "Snow Lurker [Lv. 1375]",
    "Arctic Warrior [Lv. 1350]",
}
spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["autorengoku"] and SecondWorld then
                if not table.find(getallinventoryui(),"Rengoku") and not game.Players.LocalPlayer.Backpack:FindFirstChild("Rengoku") and not game.Players.LocalPlayer.Character:FindFirstChild("Rengoku") then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Hidden Key") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Hidden Key"))
                    elseif game.Players.LocalPlayer.Character:FindFirstChild("Hidden Key") then
                        Tween2(Vector3.new(6572, 297, -6965),"Vector")
                    else
                        if findmob(rengokuMonster[rengokuState]) then
                            if setspawnat("IceCastle") then
                                killmob(rengokuMonster[rengokuState])
                            end
                        else
                            rengokuState = rengokuState + 1
                            if rengokuState > 2 then
                                rengokuState = 1
                            end
                            if AutoFarmCakePrince then
                                Distance = (Vector3.new(-1982, 384, -12528) - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                if Distance < 250 then
                                    Speed = 1000
                                elseif Distance < 500 then
                                    Speed = 400
                                elseif Distance < 1000 then
                                    Speed = 350
                                elseif Distance >= 1000 then
                                    Speed = 200
                                end
                                game:GetService("TweenService"):Create(
                                    game.Players.LocalPlayer.Character.HumanoidRootPart,
                                    TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                                    {CFrame = CFrame.new(-1982, 384, -12528)}
                                ):Play()
                            end
                        end
                    end
                end
            end 
        end)
    end
end)




spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["autoyama"] and ThirdWorld then
                EliteKilledValue = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter","Progress")
                if EliteKilledValue >= 30 then
                    DoEliteQuest = false
                    if (game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 200 then
                        if findmob("Ghost [Lv. 1500]") ~= "Undefind" then
                            repeat
                                wait()
                                killmob("Ghost [Lv. 1500]")
                            until findmob("Ghost [Lv. 1500]") == "Undefind" or not getgenv().SaveSettings["autoyama"] or (game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 200
                        else
                            fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                        end
                    else
                        Tween2(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle)
                    end
                else
                    DoEliteQuest = true
                end
            end
        end)
    end
end)



spawn(function()
    while task.wait() do
        pcall(function()
            if getgenv().SaveSettings["EnchancementColor"] then
                local args = {
                    [1] = "ColorsDealer",
                    [2] = "1"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                local args = {
                    [1] = "ColorsDealer",
                    [2] = "2"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                if getgenv().SaveSettings["settingautoweaponhop"] then
                    wait(1)
                    if os.time() >= _G.RunScriptTime + 10 then
                        game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
                    else
                        repeat
                            wait(1)
                            Library:Notify("Rejoin In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                        until os.time() >= _G.RunScriptTime + 10 or tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000
                    end
                end
            end
        end)
    end
end)


























spawn(function()
    while wait() do
        pcall(function()
            if getgenv().SaveSettings["Autofactory"] then
                if findmob("Core") ~= "Undefind" then
                    killboss("Core")
                    EquipWeapon(getgenv().SaveSettings["WeaponSelected"])
                    Attack()
                elseif getgenv().SaveSettings["settingautoweaponhop"] then
                    wait(1)
                    if os.time() >= _G.RunScriptTime + 10 then
                        game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
                    else
                        repeat
                            wait(1)
                            Library:Notify("Rejoin In (".. _G.RunScriptTime - os.time() + 10 .."s)",3)
                        until os.time() >= _G.RunScriptTime + 10 or tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"):split('.')[1]) >= 5000
                    end
                end
            end
        end)
    end
end)











spawn(function()
	local gg = getrawmetatable(game)
	local old = gg.__namecall
	setreadonly(gg,false)
	gg.__namecall = newcclosure(function(...)
		local method = getnamecallmethod()
		local args = {...}
		if tostring(method) == "FireServer" and _G.AimBotPosition ~= nil then
			if tostring(args[1]) == "RemoteEvent" then
				if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
					if _G.AutoHuntQuest or _G.AutoFarmBloxFruit or _G.AutoFarmgun or getgenv().SaveSettings["aimbotskill"] or _G.KillPlayer then
						args[2] = _G.AimBotPosition
						return old(unpack(args))
					end
				end
			end
		end
		return old(...)
	end)
end)




local game_metatable = getrawmetatable(game)
local namecall_original = game_metatable.__namecall
local remote_function = Instance.new("RemoteFunction")

local invokeserver_original
setreadonly(game_metatable, false) 
game_metatable.__namecall = newcclosure(function(self, ...) 
   local method = getnamecallmethod()
   local script = getcallingscript()
   return namecall_original(self, ...)
end)
invokeserver_original = hookfunction(remote_function.InvokeServer, newcclosure(function(self, method, Dafaq,...)
    local script = getcallingscript()
        if _G.AutoHuntQuest or _G.AutoFarmgun or getgenv().SaveSettings["aimbotgun"] or _G.KillPlayer then
            if tostring(self) == "RemoteFunctionShoot" then
                if _G.AimBotPosition ~= nil and _G.AimBotRootPart ~= nil then
                    method = _G.AimBotPosition
                    Dafaq = _G.AimBotRootPart
                    return invokeserver_original(self, method, Dafaq,...)
                end
            end
        end
    return invokeserver_original(self, method, Dafaq,...)
end))



local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = game:GetService("Players").LocalPlayer
local ArgsDash = {
	Character = Player.Character,
	Duration = .25,
	CFrame = Player.Character.HumanoidRootPart.CFrame,
}

local old; old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
	if self.Name == "CommE" and _G.MinkV4 then
		local args = {...}

		if args[1] == "Dodge" then
			coroutine.wrap(function() require(ReplicatedStorage.Effect.Container.Shared.LightningTP)(ArgsDash) end)()
		end
	end
	return old(self, ...)
end))

game:GetService("UserInputService").WindowFocused:connect(function()
    if getgenv().SaveSettings["whitescreen"] then
        game.RunService:Set3dRenderingEnabled(true)
    end
end)
game:GetService("UserInputService").WindowFocusReleased:connect(function()
    if getgenv().SaveSettings["whitescreen"] then
        game.RunService:Set3dRenderingEnabled(false)
    end
end)


local Mouse = Plr:GetMouse()
Mouse.Button1Down:connect(function()
    if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
    if not Mouse.Target then return end
    if not getgenv().SaveSettings["clicktp"] then return end
    Plr.Character:MoveTo(Mouse.Hit.p)
end)











game:GetService("Players").LocalPlayer.Idled:connect(function()
   game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)


for i,v in pairs(game.Workspace:GetDescendants()) do
    if v:IsA("Seat") then
        v.CFrame = CFrame.new(0,100000,0)
    end
end
getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
	if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
		wait()
		local tpservice= game:GetService("TeleportService")
        local plr = game.Players.LocalPlayer
        tpservice:Teleport(game.PlaceId, plr)
	end
end) 
-- getgenv().SaveSettings = nil
return Library
-- end)()
